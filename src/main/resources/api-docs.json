{"swagger":"2.0","info":{"description":"# Using the API\n\n ## Authentication\n Authentication is managed using an API key, which is provided to you. Every HTTP call to our API should contain a custom header called **X-APIKEY**. The value of this header must be the API key.\n\nHere is an example of a HTTP request with the API key attached:\n \n\n    POST /mgw/payment/hosted \n    Accept:application/json, text/plain, */*\n    Accept-Encoding:gzip, deflate, sdch\n    Accept-Language:en-US,en;q=0.8,nl;q=0.6\n    Connection:keep-alive\n    Host:https://sandatomic.apexx.global/\n    X-APIKEY:zJqFMRBDT8BPgkPO81UC0js2TWoFK\n\n ## HTTPS connections\n To ensure the security of our systems and adhere to industry best practices, at least TLS 1.2 is required for all HTTPS connections.\n ## Currencies and Amounts\n To make our platform support all currencies and to prevent rounding errors, amounts are stored as natural numbers, paired with an exponential. This exponential defines at which position the decimal point/comma is placed, counting from the right.\n \n\n Say we have an amount of £14.08 GBP. It will be stored and presented as 1408 with an exponential of 2. Some currencies, like the Japanese Yen, have no exponential. A transaction amount of ¥1,000 JPY is stored as 1000.\n ## Environments\n Apexx allows you to connect with two different environments for your integration. \n\n| Environment  | Endpoint   | Description |\n|------|--------|-------|\n| Sandbox  | https://sandatomic.apexx.global/ | This environment provides you with full access to all the features available. Transactions will have no financial impact. |\n| Production | https://liveapi.apexx.global/ | This environment will be the Live environment with access based on your configuration. Transactions will have financial impact. |\n## Statuses\n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Payment Statuses</summary>Payment statuses are returned as a part of Payment requests. \n\n| Status  | Description   |\n|------|--------|\n| AUTHORISED  | The transaction has been authorised by the acquirer, and can now be processed. AUTHORISED transaction status can either be captured or cancelled. |\n| CAPTURED  | The transaction has been queued for processing. This request can be cancelled. |\n| SETTLED  | The transaction has been successfully processed. The transaction can now be refunded. |\n| REFUNDED  | The transaction has been successfully refunded and will not allow any further processing unless partial refund was requested. |\n| FAILED  | The transaction has been rejected by us, or an error has occurred during transaction processing, most likely because the transaction request is malformed or inconsistent. |\n| DECLINED  | The transaction request has been declined by the issuer. |\n| CANCELLED  | The transaction has been cancelled and do not allow any further processing. |\n| 3DS_REQUIRED  | The transaction has been enrolled for 3d secure. This transaction can be sent for authorisation after Authentication is completed by the customer. |\n| AUTHENTICATION_REQUIRED  | The transaction has been created but authentication is pending from customer. |\n| CHARGEBACK  | The transaction has been charged back by the customer. |\n| CHARGEBACK REVERSAL | The transaction chargeback has been successfully defended by the merchant and is reversed back to the merchant. |\n| PENDING | The transaction has been queued for processing. |\n</details> \n\n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Captured Statuses</summary>Captured statuses are returned as a part of Capture requests. \n\n| Status  | Description   |\n|------|--------|\n| CAPTURED  | The transaction has been queued for processing. This request can be cancelled. |\n| FAILED  | The transaction has been rejected by us, or an error has occurred during transaction processing, most likely because the transaction request is malformed or inconsistent. |\n</details> \n\n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Cancel Statuses</summary>Cancel statuses are returned as a part of Cancel requests. \n\n| Status  | Description   |\n|------|--------|\n| CANCELLED  | The transaction has been cancelled and do not allow any further processing. |\n| FAILED  | The transaction has been rejected by us, or an error has occurred during transaction processing, most likely because the transaction request is malformed or inconsistent. |\n</details> \n\n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Refund Statuses</summary>Refund statuses are returned as a part of Refund requests. \n\n| Status  | Description   |\n|------|--------|\n| REFUNDED  | The transaction has been successfully refunded and do not allow any further processing. |\n| FAILED  | The transaction has been rejected by us, or an error has occurred during transaction processing, most likely because the transaction request is malformed or inconsistent. |\n</details> \n\n## HPP - Customisation\n To allow you to maintain a consistent look and feel to the payment page we support customisation of certain aspects of our hosted payment page. The elements that are subject to customisation are defined below: \n\n\n    /* Frame Style - Start */\n    @Frame-Font-Family: Poppins;\n    @Frame-Border-Colour: #144056;\n    @Frame-Header-Font-Colour: #144056;\n    @Frame-Header-Background-Colour: #F1F1F1;\n    @Frame-Body-Font-Colour: #144056;\n    @Frame-Body-Font-Weight: normal;  /* e.g. bold, normal, numeric (like 100) etc.*/\n    @Frame-Body-Background-Colour: #F1F1F1;\n    @Frame-Text-Box-Border-Colour: #144056;\n    @Pay-Button-Background-Colour: #144056;\n    @Pay-Button-Font-Colour: #FFFFFF;\n    /* Frame Style - End */\n    \n    /* HTML Body Style - Start */\n    @Body-Font-Family: Poppins;\n    @Body-Border-Colour: #144056;\n    @Body-Font-Colour: #144056;\n    @Body-Background-Colour: #FFFFFF;\n    /* HTML Body Style - End */\n    \n You can also customise whether you want to show order summary in the iframe or not by sending show_order_summary value as true or false. True will load the order summary in the page and false will hide it.\n \n ## HPP-iFrame  \n \n In order to load the Apexx HPP into the iFrame, you need to hit the **[Hosted Payment Page](#operation/hostedPayUsingPOST)** API with the necessary details. You will get the URL of the HPP Page in response. That url needs to be loaded into the iFrame object.  \n See below code snippet  : \n \n\n    <iframe src= \"url\"></iframe>  \n \n Once it’s loaded properly, you need to enter card details for further payment processing. After hitting the Pay button, it will go to the respective acquirer for the payment. Once the payment is done then Apexx will redirect to the merchant return_url as per **[Hosted Payment Page](#operation/hostedPayUsingPOST)**  API and send data in a POST request. \n ## HPP-Redirect Return URL Parameters \n Once the payment is done via Hosted Payment then Apexx will redirect to the merchant return_url with the below data in a POST request. \n\n    {  \n     \t\"reason_code\" : \"string\" \n    \t\"reason_message\" : \"string\" \n    \t\"response_code\" : \"string\" \n    \t\"response_message\" : \"string\" \n    \t\"_id\" : \"string\" \n    \t\"status\" : \"string\"\n    \t\"authorisation_code\" : \"string\" \n    \t\"merchant_reference\" : \"string\" \n    \t\"amount\" : \"string\" \n    \t\"card_number\" : \"string\" \n    \t\"expiry_month\" : \"string\" \n    \t\"expiry_year\" : \"string\" \n    \t\"token\" : \"string\" \n    \t\"risk_score\" : \"string\" \n    \t\"risk_provider\" : \"string\" \n    \t\"risk_status\" : \"string\" \n\t\t\"signature\" : \"string\" \n    } \n    \n **NOTE :** A reason message is assigned by the acquiring platform. The Reason message will return only in case of a Failed or Declined transaction. Response code is sent only when the source of the response looks suspicious. In this case Apexx immediately cancels the transaction placed with the gateway.\n\n **[HMAC Signature Calculation](#section/Using-the-API/HPP-Redirect-Return-URL-Parameters)**\n\n The following steps outline the HMAC Signature Calculation process in Java which can be followed to validate the authenticity of a redirect POST request from APEXX after the processing of payments using the APEXX Hosted Payment Page (HPP). For this example, we have used the following Secret Key and sample JSON key-value pairs in order to generate the HMAC Signature. \n\n **Example data**\n\n Example Secret key:\n\n    8b29eeafeb554fd39c3ef9e21ef32c6a  \n\n Example JSON:\n\n    {  \n    \t\"reason_code\": \"0\",  \n    \t\"expiry_month\": \"12\",  \n    \t\"amount\": \"560\",  \n    \t\"card_number\": \"454305XXXXXX9982\",  \n    \t\"authorization_code\": \"654321\",  \n    \t\"merchant_reference\": \"3153\",  \n    \t\"_id\": \"89fce6908fc94bf78b50385701250355\",  \n    \t\"expiry_year\": \"20\",  \n    \t\"status\": \"AUTHORISED\"  \n    }  \n\n Example Map (Converted from above JSON):\n\n    \tMap<String, String> pairs = new HashMap<>();  \n    \tpairs.put(\"reason_code\", \"0\");  \n    \tpairs.put(\"expiry_month\", \"12\");  \n    \tpairs.put(\"amount\", \"560\");  \n    \tpairs.put(\"card_number\", \"454305XXXXXX9982\");  \n    \tpairs.put(\"authorization_code\", \"654321\");  \n    \tpairs.put(\"merchant_reference\", \"3153\");  \n    \tpairs.put(\"_id\", \"89fce6908fc94bf78b50385701250355\");  \n    \tpairs.put(\"expiry_year\", \"20\");  \n    \tpairs.put(\"status\", \"AUTHORISED\"); \n\n\n **Implementing the signature calculation**\n\n **1.**Sort the key-value pairs by key (Without Signature).\n\n    SortedMap<String, String> sortedPairs = new TreeMap<>(pairs);  \n\n Example below reflects the sorting*: \n\n    \"_id\": \"89fce6908fc94bf78b50385701250355\",  \n    \"amount\": \"560\",  \n    \"authorization_code\": \"654321\",  \n    \"card_number\": \"454305XXXXXX9982\",  \n    \"expiry_month\": \"12\",  \n    \"expiry_year\": \"20\",  \n    \"merchant_reference\": \"3153\",  \n    \"reason_code\": \"0\",  \n    \"status\": \"AUTHORISED\"  \n\n *DECLINED/ FAILED transactions will also include reason_message in the signature calculation. We will always use all response parameters **(excluding signature)** for signature calculation. \n\n **2.**Convert the sortedPairs into the JSON String:\n\n    // Convert sortedPairs to JSON String  \n    final ObjectMapper objectMapper = new ObjectMapper();  \n    objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);  \n    String jsonString = objectMapper.writeValueAsString(sortedPairs);  \n\n Example below reflects the JSON String: \n\n    {\"_id\":\"89fce6908fc94bf78b50385701250355\",\"amount\":\"560\",\"authorization_code\":\"654321\",\"card_number\":\"454305XXXXXX9982\",\"expiry_month\":\"12\",\"expiry_year\":\"20\",\"merchant_reference\":\"3153\",\"reason_code\":\"0\",\"status\":\"AUTHORISED\"}  \n\n **3.**Calculate the HMAC with the signing string, in binary representation given the UTF-8 charset, using the cryptographic hash function SHA-512.\n\n    // Create an HMAC SHA-512 key from the raw key bytes  \n    SecretKeySpec signingKey = new SecretKeySpec(UTF-8 secret Key, \"HmacSHA512\");  \n\n\n    // Get an HMAC SHA-512 Mac instance and initialize with the signing key  \n    Mac mac = Mac.getInstance(\"HmacSHA512\");  \n    mac.init(signingKey);  \n\n\n    // calculate the hmac on the binary representation of the JSON String  \n    byte[] binaryHmac = mac.doFinal(jsonString.getBytes(StandardCharsets.UTF_8));  \n\n Example binaryHmac \n\n    [B@712f276c  \n\n **4.**Encode the result using the Base64 encoding scheme to obtain the signature. \n\n    String signature = Base64.getEncoder().encodeToString(binaryHmac);  \n\n **5.**The signature calculated, for example, key-value pairs and HMAC key is: \n\n    OLyWcJi3RkhJNA6B+Ri2eYxzKprvTZtrR+diXecMEpsNFKGm6KBQ5flARez+OAc2Mac6HaPIJICJ29QhvblxHA==  \n\n\n **Verifying the Signature**\n\n In order to verify the signature to authenticate the HPP Redirect Return URL POST request, you must follow the steps outlined above and compare the output to that sent in the signature key in the POST request.\n\n Example POST request body including signature\n\n    {  \n    \t\"reason_code\": \"0\",  \n    \t\"expiry_month\": \"12\",  \n    \t\"amount\": \"560\",  \n    \t\"card_number\": \"454305XXXXXX9982\",  \n    \t\"authorization_code\": \"654321\",  \n    \t\"merchant_reference\": \"3153\",  \n    \t\"_id\": \"89fce6908fc94bf78b50385701250355\",  \n    \t\"expiry_year\": \"20\",  \n    \t\"status\": \"AUTHORISED\",  \n    \t\"signature\": \"OLyWcJi3RkhJNA6B+Ri2eYxzKprvTZtrR+diXecMEpsNFKGm6KBQ5flARez+OAc2Mac6HaPIJICJ29QhvblxHA==\"  \n    }  \n\n The binary representation of the JSON String should be used to generate the binaryHmac. The signature generated at merchant’s end should be compared with the signature received in the response.\n\n## HTP - Customisation\n To allow you to maintain a consistent look and feel to the token page we support customisation of certain aspects of our hosted token page. The elements that are subject to customisation are defined below: \n\n\n    /* Frame Style - Start */\n    @Frame-Font-Family: Poppins;\n    @Frame-Border-Colour: #144056;\n    @Frame-Header-Font-Colour: #144056;\n    @Frame-Header-Background-Colour: #F1F1F1;\n    @Frame-Body-Font-Colour: #144056;\n    @Frame-Body-Font-Weight: normal;  /* e.g. bold, normal, numeric (like 100) etc.*/\n    @Frame-Body-Background-Colour: #F1F1F1;\n    @Frame-Text-Box-Border-Colour: #144056;\n    @Pay-Button-Background-Colour: #144056;\n    @Pay-Button-Font-Colour: #FFFFFF;\n    /* Frame Style - End */\n    \n    /* HTML Body Style - Start */\n    @Body-Font-Family: Poppins;\n    @Body-Border-Colour: #144056;\n    @Body-Font-Colour: #144056;\n    @Body-Background-Colour: #FFFFFF;\n    /* HTML Body Style - End */\n    \n\n ## HTP-iFrame  \n \n In order to load the Apexx HTP page into the iFrame, you need to hit the **[Hosted Token Page](#operation/hostedTokenUsingPOST)** API with the necessary details. You will get the URL of the HTP Page in response. That url needs to be loaded into the iFrame object. \n\n See below code snippet  : \n \n\n    <iframe src= \"url\"></iframe>  \n \n Once its loaded properly, you need to enter card details to generate token. After hitting Save button, it will go to the token engine & generate token. Once token get generated, Apexx will redirect to merchant return_url as per **[Hosted Token Page](#operation/hostedTokenUsingPOST)**  API and send data in POST request. \n ## HTP-Redirect Return URL Parameters \n Once the token is created via Hosted Token Page then Apexx will redirect to merchant return_url with below data in POST request. \n\n    {  \n     \t\"reason_code\" : \"string\" \n    \t\"merchant_reference\" : \"string\" \n    \t\"_id\" : \"string\" \n    \t\"token\" : \"string\" \n    \t\"created_at\" : \"string\"\n    \t\"card_number\" : \"string\" \n    \t\"expiry_month\" : \"string\" \n    \t\"expiry_year\" : \"string\" \n    \t\"card_scheme\" : \"string\" \n\t\t\"signature\" : \"string\" \n    } \n    \n\n **[HMAC Signature Calculation](#section/Using-the-API/HTP-Redirect-Return-URL-Parameters)**\n\n The following steps outline the HMAC Signature Calculation process in Java which can be followed to validate the authenticity of a redirect POST request from APEXX after the processing of token using the APEXX Hosted Token Page (HTP). For this example, we have used the following Secret Key and sample JSON key-value pairs in order to generate the HMAC Signature. \n\n **Example data**\n\n Example Secret key:\n\n    8b29eeafeb554fd39c3ef9e21ef32c6a  \n\n Example JSON:\n\n    {  \n     \t\"reason_code\" : \"0\" \n    \t\"merchant_reference\" : \"3153\" \n    \t\"_id\" : \"35363a63a56048ce9fbfd9e421a82c1b\" \n    \t\"token\" : \"d98d6b21ac4a448abdda39fe65c3e457\" \n    \t\"created_at\" : \"2020-04-16 15:07:17.0\"\n    \t\"card_number\" : \"454305XXXXXX9982\" \n    \t\"expiry_month\" : \"12\" \n    \t\"expiry_year\" : \"20\" \n    \t\"card_scheme\" : \"visa\" \n    } \n    \n\n Example Map (Converted from above JSON):\n\n    \tMap<String, String> pairs = new HashMap<>();  \n    \tpairs.put(\"reason_code\", \"0\");  \n    \tpairs.put(\"merchant_reference\", \"3153\");  \n    \tpairs.put(\"_id\", \"1d6b09b136304a2bbd842530bbc0b9c2\");  \n    \tpairs.put(\"token\", \"d98d6b21ac4a448abdda39fe65c3e457\");  \n    \tpairs.put(\"created_at\", \"2020-04-16 15:07:17.0\");  \n    \tpairs.put(\"card_number\", \"454305XXXXXX9982\");  \n    \tpairs.put(\"expiry_month\", \"12\");  \n    \tpairs.put(\"expiry_year\", \"20\");  \n    \tpairs.put(\"card_scheme\", \"visa\"); \n\n\n **Implementing the signature calculation**\n\n **1.**Sort the key-value pairs by key (Without Signature).\n\n    SortedMap<String, String> sortedPairs = new TreeMap<>(pairs);  \n\n Example below reflects the sorting*: \n\n    \"_id\": \"89fce6908fc94bf78b50385701250355\",  \n    \"card_number\": \"454305XXXXXX9982\",  \n    \"card_scheme\": \"visa\",  \n    \"created_at\": \"2020-04-16 15:07:17.0\",  \n    \"expiry_month\": \"12\",  \n    \"expiry_year\": \"20\",  \n    \"merchant_reference\": \"3153\",  \n    \"reason_code\": \"0\",  \n    \"token\": \"d98d6b21ac4a448abdda39fe65c3e457\"  \n\n **2.**Convert the sortedPairs into the JSON String:\n\n    // Convert sortedPairs to JSON String  \n    final ObjectMapper objectMapper = new ObjectMapper();  \n    objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);  \n    String jsonString = objectMapper.writeValueAsString(sortedPairs);  \n\n Example below reflects the JSON String: \n\n    {\"_id\":\"1d6b09b136304a2bbd842530bbc0b9c2\",\"reason_code\":\"0\",\"merchant_reference\":\"3153\",\"token\":\"d98d6b21ac4a448abdda39fe65c3e457\",\"card_number\":\"454305XXXXXX9982\",\"expiry_month\":\"12\",\"expiry_year\":\"20\",\"card_scheme\":\"visa\", \"created_at\": \"2020-04-16 15:07:17.0\"\t} \n\n **3.**Calculate the HMAC with the signing string, in binary representation given the UTF-8 charset, using the cryptographic hash function SHA-512.\n\n    // Create an HMAC SHA-512 key from the raw key bytes  \n    SecretKeySpec signingKey = new SecretKeySpec(UTF-8 secret Key, \"HmacSHA512\");  \n\n\n    // Get an HMAC SHA-512 Mac instance and initialize with the signing key  \n    Mac mac = Mac.getInstance(\"HmacSHA512\");  \n    mac.init(signingKey);  \n\n\n    // calculate the hmac on the binary representation of the JSON String  \n    byte[] binaryHmac = mac.doFinal(jsonString.getBytes(StandardCharsets.UTF_8));  \n\n Example binaryHmac \n\n    [B@712f276c  \n\n **4.**Encode the result using the Base64 encoding scheme to obtain the signature. \n\n    String signature = Base64.getEncoder().encodeToString(binaryHmac);  \n\n **5.**The signature calculated, for example, key-value pairs and HMAC key is: \n\n    gTpRBYzrPA+AadFaLK1fSgasn3aHYyVzPO4MeymCtzPHB4mNeiko36M2ZZfCrQGKBWGsN6+s6FraWzdUSQKGTw==  \n\n\n **Verifying the Signature**\n\n In order to verify the signature to authenticate the HTP Redirect Return URL POST request, you must follow the steps outlined above and compare the output to that sent in the signature key in the POST request.\n\n Example POST request body including signature\n\n    {  \n     \t\"reason_code\" : \"0\" \n    \t\"merchant_reference\" : \"3153\" \n    \t\"_id\" : \"35363a63a56048ce9fbfd9e421a82c1b\" \n    \t\"token\" : \"d98d6b21ac4a448abdda39fe65c3e457\" \n    \t\"created_at\" : \"2020-04-16 15:07:17.0\"\n    \t\"card_number\" : \"454305XXXXXX9982\" \n    \t\"expiry_month\" : \"12\" \n    \t\"expiry_year\" : \"20\" \n    \t\"card_scheme\" : \"visa\" \n        \"signature\": \"gTpRBYzrPA+AadFaLK1fSgasn3aHYyVzPO4MeymCtzPHB4mNeiko36M2ZZfCrQGKBWGsN6+s6FraWzdUSQKGTw==\" \n    \t} \n\n\n The binary representation of the JSON String should be used to generate the binaryHmac. The signature generated at merchant’s end should be compared with the signature received in the response.\n ## Encrypt Payment Request \n To ensure the security of transferred data we support encrypted data transfer for the payment request. To create an encrypted payload, we provide the SDK which will encrypt your payment request and provide you with the encrypted key and encrypted payload, these details will be required when you create an encrypted payment request.\n\nPlease see Readme.docx file in the downloaded package for instructions on how to use encryption sdk. \n\n Download our SDK from **https://sandmgw.apexxfintech.com/mgw/resources/encryptionsdk-v1.0.zip** \n## Encrypt Create Token Request \n To ensure the security of transferred data we support encrypted data transfer for the card token request. To create an encrypted payload, we provide the SDK which will encrypt your card token request and provide you with the encrypted key and encrypted payload, these details will be required when you create card token request.\n\nPlease see Readme.docx file in the downloaded package for instructions on how to use encryption sdk.\n\n Download our SDK from **https://sandmgw.apexxfintech.com/mgw/resources/encryptionsdk-v1.0.zip** \n\n card token request : \n\n\n    {  \n      \"organisation_id\": \"string\", \n      \"merchant_reference\": \"string\", \n      \"card\" : { \n         \"card_number\" : \"string\", \n         \"expiry_year\" : \"string\", \n         \"expiry_month\" : \"string\" \n\t   },\n      \"billing_address\": { \n    \t  \"first_name\": \"string\", \n    \t  \"last_name\": \"string\", \n    \t  \"email\": \"string\", \n    \t  \"address\": \"string\", \n    \t  \"city\": \"string\", \n    \t  \"state\": \"string\", \n   \t      \"postal_code\": \"string\", \n    \t  \"country\": \"string\", \n    \t  \"phone\": integer \n      }   } \n \n \n ## 3DS  \n \nThis document describes how to enable 3D Secure authentication for card payments. The 3D Secure protocol is supported by several card schemes.\n \n 3-D Secure authentication is an additional fraud prevention scheme that is available to all Merchants using the Payment Gateway.\n \n 3-D Secure stands for 3 Domain Server, there are 3 parties that are involved in the 3-D Secure process: \n \n - Merchant/acquirer \n \n - Card Scheme \n \n - Card issuer. \n \n \n 3D Secure transactions consist of below required steps:\n \n - **Enrolment ([3DSEnrol](#operation/cardPayWithThreeDSUsingPOST))**: Verifying whether the card supports 3D Secure.\n \n - **Redirection(redirect ACS_Url):** Redirects the card holder to an authentication page. A successful authentication creates an object(PaRes) that needs to be sent along with the transaction request.\n \n\n\t<form name=\"redirectForm\" id=\"redirectForm\" action=\"{acsURL}\" \n\t\tmethod=\"POST\">  \n\t\t<input type=\"hidden\" name=\"PaReq\" id=\"PaReq\" value= \n\t\t\t\"{paReq}\"> \n        <input type=\"hidden\" name=\"TermUrl\" id=\"TermUrl\" value= \n        \t\"{merchant_return_url}\">  \n        <input type=\"hidden\" name=\"MD\" id=\"MD\" value=\"{psp_3d_id}\"> \n     </form>  \n \n    // Redirect customer to ACS_URL for 3ds_authenticate \n     <script> \n    \twindow.onload = function()  \n    \t{  \n    \t  document.redirectForm.submit(); \n    \t};  \n     <script>  \n\n - **Initiating the transaction ([3DSVerifyAuthentication](#operation/threeDSVerifyAuthenticationUsingPOST)):** Including the authentication object(PaRes) in the transaction request allows the transaction to be 3D Secure authenticated.\n \n \n **Enrolment request ([3DSEnrol](#operation/cardPayWithThreeDSUsingPOST)):** \n \n If you want to request 3D Secure authentication for a transaction, the first step to take is to verify whether authentication is supported for the card being used. This is done by making an enrolment request ([3DSEnrol](#operation/cardPayWithThreeDSUsingPOST)):\n This request will return a paReq (payment authentication request), psp_3d_id (the unique identifier of initial Gateway response as MD) and a ACSURL (the 3D Secure authentication redirect URL) if the card is enrolled:\n \n **Redirection :** \n \n If the card is enrolled, the next step is to redirect the customer on authentication page ACSURL served by the card issuer. This requires a GET or POST request.\n \n Below are the values that needs to be filled in while doing the POST request.\n - PaReq : Set this to the pareq parameter you obtained from your enrolment request.\n \n - TermUrl : The URL on your server to which you would like the customer redirected after a successful authentication. It's kind of return url.\n \n - MD :  A merchant descriptor reference that can be used to track the request. This will be posted unmodified to the URL that is specified in TermUrl. Set this parameter you obtained from your enrolment request as psp_3d_id. \n \n After the customer successfully completes the authentication process, the 3D Secure server will make a GET or POST request to the URL you specified in TermUrl. The request body will contain the following values in POST request: \n - MD : The unmodified merchant descriptor that you specified in your form. \n \n - PaRes : The payer authorisation result, that is to be used in your authentication/authorisation request. \n \n **NOTE :** If merchant is integrating with 3DS **Ingenico** using direct payment then the Implementation manager should be consulted by merchant. \n \n **Initiating the transaction ([3DSVerifyAuthentication](#operation/threeDSVerifyAuthenticationUsingPOST)) :** \n \n Send the Original Transaction Id (3DSEnrol response _id) and PaRes values in _id and paRes respectively as a new request to 3DSVerifyAuthentication API. If the authentication is valid, we will process the payment and respond with Success/Declined/Failure status.\n \n ## 3DS 2.X \n \n For instructions and documentation on how to implement 3DS version 2 with APEXX please click on the appropriate hyperlink below based on your integration method.\n \n  **<a href=\"https://support.apexx.global/support/solutions/articles/19000123421-implementing-3d-secure-2-0-hosted-payment-page\" target=\"_blank\">Hosted Payment Page (HPP)</a>**  \n\n  **<a href=\"https://support.apexx.global/support/solutions/articles/19000121601-implementing-3d-%5B%E2%80%A6%5De-2-0-direct-integrations-with-client-side-encryption-cse-\" target=\"_blank\">Client Side Encryption (CSE)</a>** \n\n  **<a href=\"https://support.apexx.global/support/solutions/articles/19000121600-implementing-3d-secure-2-0-direct-integrations\" target=\"_blank\">Direct</a>** \n\n\n ## Transaction Webhooks \n \n **Webhooks :** \n \n Webhooks notify you of any event occurring on the transactions that you process via Apexx. You can select whether you want to be notified for the transactions update and where you want us to send them to. This allows you to stay up to date on the transactions even after a customer is no longer on your site.\n \n\n **Setup Webhooks :** \n \n To receive transactions update via webhooks you will have to provide the webhooks endpoint during onboarding an account or in the webhook_transaction_update field in the Direct or Hosted API request. This will inform us to send you the transactions update whenever the status of a transaction is updated. You will have to build an application to handle the incoming webhooks events which will run on HTTPS endpoint on your server. All successfully received webhooks messages should return an HTTP status code as 200. Any additional information sent in the body or header is ignored from our side. Whenever an endpoint responds with any other status code than 200, webhooks assumes that your endpoint did not receive the message and it will retry at a later time. Verify **Retrying failed messages** section for more information.\n \n\n **Webhooks Event Object :** \n \n Whenever status of a transaction is updated in our system, webhooks sends a notification to your configured webhook endpoint with below JSON passed in the body of a REST API call. \n\n **Note:** Few fields might be blank based on the data available from the processors and the transaction type. \n\n\n    {  \n     \t\"reason_code\" : \"string\", \n    \t\"_id\" : \"string\", \n    \t\"account\" : \"string\", \n    \t\"organisation\" : \"string\", \n    \t\"currency\" : \"string\", \n\t\t\"amount\" : \"number\", \n    \t\"authorization_code\" : \"string\", \n    \t\"capture_now\" : boolean, \n    \t\"blocked\" : boolean, \n    \t\"dynamic_descriptor\" : \"string\", \n    \t\"merchant_reference\" : \"string\", \n    \t\"card\" : { \n    \t\t\"card_number\" : \"string\", \n    \t\t\"expiry_month\" : \"number\", \n    \t\t\"expiry_year\" : \"number\" \n    \t\t\"create_token\" : \"false\", \n    \t\t\"card_holder_name\" : \"Test Webhook\" \n    \t}, \n    \t\"customer_ip\" : \"string\", \n    \t\"recurring_type\" : \"string\", \n    \t\"user_agent\" : \"string\", \n    \t\"webhook_transaction_update\" : \"string\", \n    \t\"actions\" : [\"string\"], \n    \t\"created_at\" : \"2020-05-26 06:37:29.272\", \n    \t\"cvv_present\" : boolean, \n    \t\"fees\" : [0], \n    \t\"geo_location\" : [0], \n    \t\"last_status_update\" : \"2020-05-26 06:37:29.272\", \n    \t\"payment_product\" : \"string\", \n    \t\"card_brand\" : \"string\", \n    \t\"card_type\" : \"string\", \n    \t\"issuer_name\" : \"string\", \n    \t\"issuer_country\" : \"string\", \n    \t\"organisation_psp_name\" : \"string\", \n    \t\"fraud_predictions\" : [{ \n    \t\t\"error_message\" : \"string\", \n    \t\t\"rec\" : \"string\", \n    \t\t\"rules_triggered\": [ \n    \t\t  \"string\" \n            ], \n           \"score\": 0 \n    \t }], \n    \t\"status\" : \"string\", \n    \t\"billing_address\" : { \n    \t\t\"first_name\" : \"string\", \n    \t\t\"last_name\" : \"string\", \n    \t\t\"email\" : \"string\", \n    \t\t\"address\" : \"string\", \n    \t\t\"city\" : \"string\", \n    \t\t\"state\" : \"string\", \n    \t\t\"postal_code\" : \"string\", \n    \t\t\"country\" : \"string\", \n    \t\t\"phone\" : \"number\" \n    \t }, \n    \t\"details\": {}, \n    \t\"shopper_interaction\" : \"string\", \n    \t\"cvv_result\": \"string\", \n    \t\"avs_result\": \"string\", \n    \t\"three_ds\" : { \n    \t\t\"three_ds_required\" : boolean, \n\t\t\t\"three_ds_result\": \"string\", \n\t\t\t\"three_ds_authenticated\" : \"string\", \n    \t\t\"cavv\" : \"string\", \n    \t\t\"eci\" : \"string\", \n    \t\t\"three_ds_enrollment\" : boolean \n    \t}, \n    \t\"customer\" : { \n    \t\t\"customer_id\" : \"string\", \n    \t\t\"last_name\" : \"string\", \n    \t\t\"date_of_birth\" : \"string\", \n    \t\t\"postal_code\" : \"string\", \n    \t\t\"account_number\" : \"string\", \n    \t }, \n    \t\"transaction_chargeback\" : { \n\t\t\t\"transaction_chargeback_id\" : \"string\", \n    \t\t\"case_id\" : \"string\", \n    \t\t\"orginal_transaction_date\" : \"string\", \n    \t\t\"terminal_id\" : \"string\", \n    \t\t\"reference_number\" : \"string\", \n    \t\t\"merchant_service_fee\" : \"number\", \n    \t\t\"settlement_currency\" : \"string\", \n    \t\t\"arn\" : \"string\", \n        } \t} \n   \n \n **Retrying failed messages :** \n \n Whenever webhooks receives any other status code than 200 it considers the message delivery is failed. Webhook will retry to send the message again after fix interval as defined below until it receives a success response from your side with status code 200. Maximum retry webhook will attempt is 10. Intervals defined below are considered from the first attempt so 7th attempt will retry to send the message after 8 hours of the first try. The interval between attempts gradually increases with increase in the attempt count. \n \n\n| Retry Attempt  | Retry time relative to first attempt   |\n|------|--------|\n| 1  | Immediately |\n| 2  | 5 minutes |\n| 3  | 1 hour |\n| 4  | 2 hours |\n| 5  | 4 hours |\n| 6  | 6 hours |\n| 7  | 8 hours |\n| 8  | 16 hours |\n| 9  | 32 hours |\n| 10  | 48 hours |\n\n ## CSE - Client Side Encryption \n \n Client Side Encryption (CSE) is a card payment integration method that gives merchants full flexibility with how they present card collection fields to their customers whilst allowing merchants to minimise their exposure when it comes to PCI Compliance. CSE integration allows merchants to be PCI DSS compliant to a level of Self Assessment Questionnaire A-EP or above, in accordance with the latest PCI DSS standards (v3.2.1). Your particular level of compliance may differ depending on your own unique setup, so we recommend consulting a QSA to make sure you're set up in the right way to meet your desired PCI DSS level.\n\n Below are the proposed steps to implement Client-Side Encryption for APEXX merchants.\n\n **1. Encryption key** \n \n\n The encryption key must be supplied to the Client-Side Encryption library and is used to encrypt the sensitive card details. The decryption key exists within a secure environment at APEXX. \n\n **2. Include the APEXX CSE JavaScript Library** \n \n\n For CSE to work, reference the APEXX CSE JavaScript library. The way to do this. Automatically reference the latest version of the current major release:\n\n\t<script type=\"text/javascript\" src=\"https://sandmgw.apexxfintech.com/mgw/resources/js/cse/apexx-cse-1.0.js\"></script>\n\n Download our Javascript SDK from **https://sandmgw.apexxfintech.com/mgw/resources/apexx-cse-1.0.zip** \n\n **3. Set the Public Key (Encryption Key)** \n \n\n To set your Public Key (to identify you on our server) \n\n\tAPEXX.setPublicKey([YOUR PUBLIC KEY]);\n\n **4. Implementation Of Data Encryption** \n\n We can do the Data Encryption by below two ways: \n\n **4.1 Implement the form** \n \n\n a) For the form to work, use the “data-apexx” attribute for each item of cardholder data. A typical example is:\n\n\t<body>\n\t\t  <form action=\"[YOUR FORM ACTION]\" method=\"post\" data-apexx=\"payment-form\"> \n\t\t  \t<input data-apexx=\"card_holder_name\"> <!-- This is the cardholder name field --> \n         \t<input data-apexx=\"card_number\"> <!-- This is the card number field --> \n         \t<input data-apexx=\"expiry_month\"> <!-- This is the expiry month field --> \n         \t<input data-apexx=\"expiry_year\"> <!-- This is the expiry year field --> \n         \t<input data-apexx=\"cvv\"> <!-- This is the cvv field--> \n         \t<input type=\"hidden\" name=\"[YOUR DATA PARAMETER]\" data-apexx=\"encrypted_data\">  <!-- This is the hidden field for encrypted_data --> \n         \t<input type=\"hidden\" name=\"maskedCardNumber\" data-apexx=\"masked_card_number\">  <!-- This is the hidden field for masked_card_number --> \n         \t<input type=\"submit\"> \n         </form> \n    </body>  \n \n\n In this example the data-apexx=\"encrypted_data\" attribute sends the encrypted data to your server using [YOUR DATA PARAMETER]. \n\n b) How it all fits together with the form \n \n\n Include the APEXX CSE Javascript file & Set the Public Key in the head of the HTML page \n\n\t<head>\t  \n\t\t<script type=\"text/javascript\" src=\"https://sandmgw.apexxfintech.com/mgw/resources/js/cse/apexx-cse-1.0.js\"></script> \n       <script type=\"text/javascript\"> \n         window.onload = function() { \n           APEXX.setPublicKey([YOUR PUBLIC KEY]); \n         } \n       </script> \n    </head>  \n \n\n Include the apexx payment form html in the card details collection elements of your payment page \n\n\t<form action=\"[YOUR FORM ACTION]\" method=\"post\" data-apexx=\"payment-form\">\t  \n        <input data-apexx=\"card_holder_name\"> \n        <input data-apexx=\"card_number\"> \n        <input data-apexx=\"expiry_month\"> \n        <input data-apexx=\"expiry_year\"> \n        <input data-apexx=\"cvv\"> \n        <input type=\"hidden\" name=\"[YOUR DATA PARAMETER]\" data-apexx=\"encrypted_data\"> \n        <input type=\"hidden\" name=\"maskedCardNumber\" data-apexx=\"masked_card_number\"> \n        <input type=\"submit\"> \n     </form>  \n \n\n\n **Below steps will be the flow to process a CSE payment with APEXX.**\n \n\n 1) Include APEXX.js(apexx-cse-1.0.js) into your page. \n\n 2) Implement the HTML form as mentioned above.\n\n 3) On pressing of Submit/Pay button, our JS(apexx-cse-1.0.js) will take the data i.e card_number, expiry_month, expiry_year, cvv, etc. and do the encryption and JS file will set the encrypted data into hidden parameter and call to form action (merchant server-side)\n\n 4) Call APEXX /payment/direct API with encrypted value along with other information. (Server(Merchant) to server(APEXX) API call) \n\n **4.2 Implement the function call** \n \n\n a) Function call details for integration \n\n\t<!-- after collecting PAN details, call cardDataEncryption() function for encryption --> \n\n \t<body>\n\t\t  <form action=\"[YOUR FORM ACTION]\" method=\"post\"> \n\t\t  \t<input data-apexx=\"card_holder_name\"> <!-- This is the cardholder name field --> \n         \t<input data-apexx=\"card_number\"> <!-- This is the card number field --> \n         \t<input data-apexx=\"expiry_month\"> <!-- This is the expiry month field --> \n         \t<input data-apexx=\"expiry_year\"> <!-- This is the expiry year field --> \n         \t<input data-apexx=\"cvv\"> <!-- This is the CVV field--> \n         \t<input type=\"hidden\" name=\"[YOUR DATA PARAMETER]\" data-apexx=\"encrypted_data\">  <!-- This is the hidden field for encrypted_data --> \n         \t<input type=\"hidden\" name=\"maskedCardNumber\" data-apexx=\"masked_card_number\">  <!-- This is the hidden field for masked_card_number --> \n         </form> \n    </body>  \n \n\n this function call will set the encrypted data in to hidden parameter called encrypted_data. \n\n b) How it all fits together with the function call \n \n\n Include the APEXX CSE Javascript file & Set the Public Key in the head of the HTML page \n\n\t<head>\t  \n\t\t<script type=\"text/javascript\" src=\"https://sandmgw.apexxfintech.com/mgw/resources/js/cse/apexx-cse-1.0.js\"></script> \n       <script type=\"text/javascript\"> \n         window.onload = function() { \n           APEXX.setPublicKey([YOUR PUBLIC KEY]); \n         } \n       </script> \n    </head>  \n \n\n Include the apexx payment form html in the card details collection elements of your payment page \n\n\t<!-- after collecting PAN details, call cardDataEncryption() function for encryption --> \n\n \t<form action=\"[YOUR FORM ACTION]\" method=\"post\">\t  \n        <input data-apexx=\"card_holder_name\"> \n        <input data-apexx=\"card_number\"> \n        <input data-apexx=\"expiry_month\"> \n        <input data-apexx=\"expiry_year\"> \n        <input data-apexx=\"cvv\"> \n        <input type=\"hidden\" name=\"[YOUR DATA PARAMETER]\" data-apexx=\"encrypted_data\"> \n        <input type=\"hidden\" name=\"maskedCardNumber\" data-apexx=\"masked_card_number\"> \n     </form>  \n \n\n\n **Below steps will be the flow to process a CSE payment with APEXX.**\n \n\n 1) Include APEXX.js(apexx-cse-1.0.js) into your page. \n\n 2) Implement the HTML form as mentioned above.\n\n 3) By calling cardDataEncryption() function, our JS(apexx-cse-1.0.js) will take the data i.e card_number, expiry_month, expiry_year, cvv, etc. and do the encryption and JS file will set the encrypted data into hidden parameter.\n\n 4) Call APEXX /payment/direct API with encrypted value along with other information. (Server(Merchant) to server(APEXX) API call) \n\n **Note :** Please use only one option for encryption either form or function call. \n\n\n **Example :**\n\n    {\n   \t\t\"account\":\"your _account_id\",\n   \t\t\"organisation\":\"\",\n   \t\t\"currency\":\"\",\n   \t\t\"amount\":1500,\n   \t\t\"capture_now\": false,\n    \t\"card\": {\n    \t\t\"encrypted_data\" : \"{encrypted_value}\"\n    \t},\n   \t\t\"dynamic_descriptor\": \"Your Order\",\n    \t\"customer\": {\n    \t\t\"customer_id\" : \"\",\n    \t\t\"last_name\" : \"\",\n    \t\t\"postal_code\" : \"\",\n    \t\t\"account_number\" : \"\",\n    \t\t\"date_of_birth\" : \"1993-07-01\"\n    \t},\n   \t\t\"customer_ip\": \"192.168.1.141\",\n    \t\"billing_address\": {\n    \t\t\"first_name\": \"testfirstname\",\n    \t\t\"last_name\": \"testlastname\",\n    \t\t\"email\": \"name@apexx.global\",\n    \t\t\"address\": \"5a Underwood Street\",\n    \t\t\"city\": \"London\",\n    \t\t\"state\": \"London\",\n    \t\t\"postal_code\": \"N17LY\",\n    \t\t\"country\": \"GB\",\n    \t\t\"phone\": \"07437836162\"\n    \t},\n   \t\t\"merchant_reference\": \"your_reference\",\n   \t\t\"recurring_type\": \"first\",\n   \t\t\"user_agent\": \"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-GB;rv:1.9.2.13) Gecko/20101203 Firefox/3.6.13 (.NET CLR 3.5.30729)\",\n   \t\t\"webhook_transaction_update\": \"https://yourwebhook.com/\",\n   \t\t\"shopper_interaction\": \"ecommerce\",\n    \t\"three_ds\": {\n    \t\t\"three_ds_required\": false\n    \t},\n   \t\t\"card_brand\":\"visa\"\n    }\n\n\n **Validate CSE fields**\n \n\n To ensure easy implementation of client side encryption functionality, Apexx provides internal javascript validations for the card details within client side encryption javascript. We provide validations for below fields \n\n\n 1. Card Holder Name \n\n 2. Card Number \n\n 3. Expiry Month \n\n 4. Expiry Year \n\n 5. CVV \n\n You can utilise this functionality for all the fields mentioned above by calling respective functions in the javascript as mentioned below. \n\n\n **1. Card Holder Name Validation :** \n\n| Field name| Possible Values  | Descriptions   |\n|------|-------------|------------------------------------------------|\n| Card Holder Name | Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,) and apostrophe(‘)) | It is representing the card holder name and it's optional field. |\n\n\n\n\n\n To validate Card Holder Name, Please pass the Card Holder Name in below function. \n\n\tisValidCardHolderName([CARD HOLDER NAME);\n\n **Success scenario :** \n\n\n If the card holder name is valid, in the response the error flag will be false i.e \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the card holder name is not valid, in the response the error flag will be true and error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid card holder name\",\n\t\t\"isError\":true\n\t }\n\n\n\n **2. Card Number Validation :** \n\n| Field name | Possible Values  | Descriptions   |\n|------|-------------|------------------------------------------------|\n| Card Number | 12-19 Digit | Card number used for the transaction, also known as PAN. |\n\n\n\n **a. Characters Validation :** \n\n\n\n To validate the card number, Please pass the card number in the below function. \n\n\tisValidCardNumber([CARD NUMBER]);\n\n **Success scenario :** \n\n\n If the card number is valid, in the response the error flag will be false i.e \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the card number is not valid, in the response the error flag will be true and the error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid card number\",\n\t\t\"isError\":true\n\t }\n\n\n\n **b. Card Number Validation with Luhn check:** \n\n\n\n To validate card number with Luhn Check, Please pass the card number in the below function. \n\n\tluhnCheck([CARD NUMBER]);\n\n **Success scenario :** \n\n\n If the sent card number passes Luhn check, response will contain error flag with value as false i.e. \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the card number fails Luhn check, response will contain error flag with value as true and error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid card number\",\n\t\t\"isError\":true\n\t }\n\n\n\n\n **3. Expiry Month Validation :** \n\n| Field name | Possible Values  | Descriptions   |\n|------|-------------|------------------------------------------------|\n| Expiry Month | 2 Digit (01-12) | Card expiry month. A string representing the month, valid values are 01 to 12. |\n\n\n\n\n\n To validate Expiry Month, Please pass the Expiry Month in below function. \n\n\tisValidMonth([EXPIRY MONTH]);\n\n **Success scenario :** \n\n\n If the expiry month is valid, in the response the error flag will be false i.e \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the expiry month is not valid, in the response the error flag will be true and error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid expiry month\",\n\t\t\"isError\":true\n\t }\n\n\n\n **4. Expiry Year Validation :** \n\n| Field name | Possible Values  | Descriptions   |\n|------|-------------|------------------------------------------------|\n| Expiry Year | 2 Digit | Card expiry year. A string representing the last two digits of the year, e.g. 19 for 2019. |\n\n\n\n\n To validate Expiry Year, Please pass the Expiry Year in below function. \n\n\tisValidYear([EXPIRY YEAR]);\n\n **Success scenario :** \n\n\n If the expiry year is valid, in the response the error flag will be false i.e \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the expiry year is not valid, in the response the error flag will be true and error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid expiry year\",\n\t\t\"isError\":true\n\t }\n\n\n\n **5.CVV Validation :** \n\n| Field name | Possible Values  | Descriptions   |\n|------|-------------|------------------------------------------------|\n| CVV | 3-4 Digit | The Card Verification Value. Note: cvv is not required when transaction is a recurring or oneclick transaction. |\n\n\n\n\n To validate CVV, Please pass the CVV in below function. \n\n\tisValidCVV([CVV]);\n\n **Success scenario :** \n\n\n If the cvv is valid, in the response the error flag will be false i.e \n\n    {\n   \t\t\"isError\":false\n    }\n\n\n\n **Error scenario :** \n\n\n If the cvv is not valid, in the response the error flag will be true and error message will display i.e \n\n    {\n\t\t\"errorMessage\":\"Please enter valid cvv\",\n\t\t\"isError\":true\n\t }\n\n# Appendix \n\n ## Appendix A - Formatting Restrictions,Data Type Definitions, Numbered Elements, Request Fields, Response Fields \n\n \n### Formatting Restrictions\n\n \n Unless otherwise noted, all field names are case sensitive and all fields accept special characters such as @, #, and %. \n\n The value of amount and similar fields must not contain any alphabets or special characters. \n\n The values of all request fields must not contain newline or carriage returns. However, they can contain embedded spaces and any other printable characters. All leading and trailing spaces will be removed. \n\n **Data Type Definitions** \n\n| Data Type | Descriptions |\n|------|-------------|\n| Integer/Number | Whole number …, -3, -2, -1, 0, 1, 2, 3, …}. |\n| String | A string is a sequence of characters such as letters, numbers, spaces and special characters. String values must be surrounded by double quotes |\n| Boolean | A Boolean data type accepts only one of the two values true or false. |\n\n \n\n\n **Array Elements** \n\n The Apexx schema includes several array elements. These array elements are used to send or receive multiple elements of similar nature. For example, when a customer order includes more than one item, you must include multiple item elements in your request. Multiple item elements will be automatically considered as numbered elements by Apexx. So the value received in the first array would be considered as 0 and the second array would be considered as 1. These numbers are used to provide error feedback. \n \n\n **Request Value** \n\n\t\"items\": [ \n \t\t{ \n \t\t\t \"net_unit_price\": 100, \n \t\t\t \"gross_unit_price\": 100, \n \t\t\t \"quantity\": 5 \n \t\t}, \n \t\t{ \n \t\t\t \"net_unit_price\": 100, \n \t\t\t \"gross_unit_price\": 100, \n \t\t\t \"quantity\": \"abc\" \n \t\t} \n \t] \n \n\n \n\n\n **Error Feedback** \n\n    {  \n     \t  \"_id\": \"\",\n    \t  \"code\": \"215\", \n\t\t  \"details\": \"items[1].quantity\", \n\t\t  \"message\": \"Quantity is invalid or missing.\", \n\t\t  \"timestamp\": 1614057343744, \n\t\t  \"merchant_reference\": \"abc\" \n    } \n    \n \n\n\n### Data Type Definitions\n\n \n### Numbered Elements\n\n \n### Request Fields\n\n \n### Response Fields\n\n ## Appendix B - Card payment without auto capture, Card payment with auto capture, 3ds card payment, 3ds payment with non 3ds card \n \n **1. Card payment without auto capture** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": false, \n      \"card\": {\n        \"card_number\": \"4000000000000002\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"1614058526\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n       } \n    }\n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"a18684f0374e4b9397ac145b1bad398f\", \n      \"authorization_code\": \"654321\", \n      \"account\": \"1234\", \n      \"organisation\": \"5678\", \n      \"currency\": \"RUB\", \n      \"organisation_psp_name\": \"PSP Name\", \n      \"capture_now\": \"false\", \n      \"merchant_reference\": \"1614058526\", \n      \"amount\": \"1000\", \n      \"card\": {\n          \"card_number\": \"400000XXXXXX0002\", \n          \"expiry_month\": \"01\", \n          \"expiry_year\": \"23\" \n      }, \n      \"cvv_present\": true, \n      \"payment_product\": \"card\", \n      \"card_brand\": \"visa\", \n      \"issuer_country\": \"US\", \n      \"fraud_predictions\": [], \n      \"status\": \"AUTHORISED\", \n      \"billing_address\": { \n                  \"country\": \"GB\" \n       }, \n       \"last_status_update\": \"1614058314985\", \n       \"geo_location\": [], \n       \"fees\": [], \n       \"created_at\": \"1614058313292\", \n       \"blocked\": false, \n       \"actions\": [], \n       \"details\": {}, \n       \"cvv_result\": \"0\", \n       \"avs_result\": \"U\", \n       \"three_ds\": { \n              \"three_ds_required\": \"false\" \n       }\n    }\n \n **2. Card payment with auto capture** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": true, \n      \"card\": {\n        \"card_number\": \"4000000000000002\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"1614058880\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n       } \n    }\n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"3d53ac851631471ea8dee217bc8a9712\", \n      \"authorization_code\": \"654321\", \n      \"account\": \"1234\", \n      \"organisation\": \"5678\", \n      \"currency\": \"RUB\", \n      \"organisation_psp_name\": \"PSP Name\", \n      \"capture_now\": \"true\", \n      \"merchant_reference\": \"1614058880\", \n      \"amount\": \"1000\", \n      \"card\": {\n          \"card_number\": \"400000XXXXXX0002\", \n          \"expiry_month\": \"01\", \n          \"expiry_year\": \"23\" \n      }, \n      \"cvv_present\": true, \n      \"payment_product\": \"card\", \n      \"card_brand\": \"visa\", \n      \"issuer_country\": \"US\", \n      \"fraud_predictions\": [], \n      \"status\": \"CAPTURED\", \n      \"billing_address\": { \n                  \"country\": \"GB\" \n       }, \n       \"last_status_update\": \"1614058668491\", \n       \"geo_location\": [], \n       \"fees\": [], \n       \"created_at\": \"1614058666842\", \n       \"blocked\": false, \n       \"actions\": [], \n       \"details\": {}, \n       \"cvv_result\": \"0\", \n       \"avs_result\": \"U\", \n       \"three_ds\": { \n              \"three_ds_required\": \"false\" \n       }\n    }\n \n **3. 3ds 1.0 card Verify Enrolment**  \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": true, \n      \"card\": {\n        \"card_number\": \"4000000000000002\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"1614061135\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n      } \n    \"three_ds\": { \n           \"term_url\": \"https://www.merchant.com/return\", \n           \"three_ds_required\": \"true\", \n           \"three_ds_version\": \"1.0\" \n      }\n     }\n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"c9a8bee820774d4bb5e29df8f36de2cf\", \n      \"three_ds\": { \n      \"three_ds_required\": \"true\", \n      \"acsURL\": \"https://acs.3ds-pit.com/\", \n      \"paReq\": \"eJxVUttSgzAQ/RWmH0BCArV0tpmhMmofWqvtgz5mwi       qMcikEQb/eBIqtmcnMnr2c7J4NHNMaMT6gamsUsMWmke/oZMlqN       qfcD5MbqdSCJzMB++gZTwK+sG6yshCeS10GZIKmtFapLLQAqU7r       zU54jPvBHMgZQo71JhbUnDA0hSOEQuYoogr73rnLCo0qdXh8cI7Y       aCdSQIY4qLItdP0tFswQTgDa+lOkWldLQrquc6VleRtJXFXmBIjN       AHJpbd9aqzGMfZaIbRx11/fx+ER38Wu/+/lYAbEZkEiNglHmUca4Q       +dLL1gyDmTwg8xtK+J+vXc86lJqhh09UNmHohF41EauPWDUrrFQ00       ATAuyrskCTYQT6s4Fc2r59sPoqbaTzA5/T4GU4YbhgVukhYFkyow/       j1BtoLABiS8l5ieS8aGP9+wC//DWtCw==\",\n      \"three_ds_enrollment\": true, \n      \"acq_id\": \"MDAwMDAwMDAwMDAwOTQ0NDYxNzk=\", \n      \"psp_3d_id\": \"UDNLRVk6dHJhbnNhY3Rpb25JRD05NDQ0NjE3OSZtZXJ       jaGFudElEPTEwNTc2MCZfX2xpZmVfXz0xNjE0MDYyNzIz\", \n      \"acsURL_http_method\": \"POST\" \n      }, \n      \"created_at\": \"1614060921971\" \n    }\n \n **4. 3ds 1.0 Verify Authentication and Payment** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"_id\": \"c9a8bee820774d4bb5e29df8f36de2cf\", \n      \"paRes\": \"eJylVmuPqsoS/SuTOR/JbF6CssN40tAgoKAgIPiNtygP5       SHIrz+oM7Pn7uzcnNxLYqyuXrWqqqu6gP27z7OXa1TVaVm8v+I/sNe       Xv+eseaiiCG6joK2iOatGde0l0Usavr/SGDlhwqkXBDMyfJ2zG2BE9       WPnHPfMNJyQZEy90TPKf4tJgngLfQ9/IyY0RtPMdOoHs9Hmw9189PaD       YNHP5einCg5e0cxZL7hwsjbHCXJC0Sz6sWTzqJLhHBsfhhkNn0sW/WW       3ae9SPcbcp+FchaD7/lubOqZBt9eG0zuL3hFs6DXRnMAIHCMI8gWjf+       LUT4Jk0YeePd/pQF62Izc+emXR7xp2PJ0qKoLbfEaMQX6t2Kg/l0U0Is       YYv2QW/RXc2SseWXw+DDMboXctazpztknz34Ka/iRwFn3o2brxmraeuy       z6IbGBd73OVcwwLSGzVpYIdcw2LUzbmJmxNbFuTPYBYaMgnWPUGNT4/7       ACWVJWaXPI76H+p4JF76Ggj/rO2W2aFKOzKnoZ+6Wo318PTXP+iaJd1/       3oyB9llaDEmAiKMegICOs0+ev1aRWFchGXc5b3irJIAy9LB68Zy61Gza       EMX74c/onSNO6sOGoI/NtI+xbgk+LtrsFInBr50T+Tfgv333j5PfCq9t7       qg4ffHfxGNGeNKI7uZY5eLEN+f/3r33e9WXlFHZdVXn+T/8/8v3i+yyM/T       JOobv6X5D8T/87wyWd7WRvNUfrQrW5ogHKECoJohivHExM7jnuZvX/aPZE       s+nVaH0f52Qxfx/oEKlert4Ku2Z+cNCYNvNzhfp41psRdNf92pFaJz2PSdu       c7UCenXqq3jMdpLTGZ5lVFY6k0U9V2YSprpICiYW5msW9XLmp3540t4i63u       2D65cJMBXh2CmBi9poReR8rQiY/ckwHgatGKLU+u4SfjYfTqGRLEIjbThSq       a7WCTKZDsdcvm11m6e1hdU5yr5yZ1Kk+byRhn7auTUvZDMmTNEsPGjUg1FFx       KiBVmXdxBtpK3WrFGfWqpSnisNsh5qq7XrKAcVC6NWMaKdeVbR8lCUtRFanA       LHEQjFptVrynn7fSMTlP0zaNCZBq6wJ0GZ61ktHtOVpcpV1sIv6a3vQrXUcy       HkQzzl5ERr9ad+/v3/r3oyLL6PasgENhDPQa7ynxUdWk8XiRxqmnyjJsjzwPL       ssEdDIHElnYZetIH4DGJafL4ZQumA7jgF6LAI5NoNcdr7vQ1vWF0Cn2dhB2Kq       cvAG4JfNJpKqYnFmEfQ0fJZJFTbChEKtc997vO1nface9ogyxoV78wbj7R3fG       3MLdvqpF0YvLghhAwB5dUW5UwhpXDnUOeOvoE1osmMLlEszkQqFAwsn0u4r6k       JzqRYZEJIrHD+jUEvQqTXjuqpHrUvFF3e+rcL50quT0/AOXJ5Zogs1eq4XYieP       hfQoANBs+Z+52GB7mV3Ietakw66bm/gpzNuYSWBaQ6+mbaUFKu/h3vKMTekfsF       BLsnt6pCQjwGt8mwl9QmWGTYKh9zNwVb5dTHuXBdpxoLO3cduw55DnqOQY114eT       j7zUQRADWPNBn4L7PJ8tRFkDPnwXNqTeILJdVSWVReRkEjjuioiHq2WxbFIUCr4n       cpdtlsJaWtt9y+6uVzjaJrF/0CWLFEVOfGEsdFk0uGLvdNlrw0ya4XVbKWtVmkZHE5       77G0dt6qQBlZquUMmy9qNiVHQIHGyQXfoslbe5mzn5E90m/iY8i19twuTzGGnaKDxy       YzHQtGBsWS0FYkkrGnZEMaDfop2gxpdKTdDrjolP5YTrBUKTVEi+aUBoY76SlX4TbHr       ql7cse7VYiNUhWRFiGUJviiYBuzlFJtZwW/aKQJHch2pNJs6WNmW4EEzfLZHufobEyj       hnxlh8NAKC8vNb8VikUXb1uy1g24bU9oK3njuFApJYOgy5DoAOuxEFnHkF4r6WkTwQx       0S26McLBR6WQx5uoufF6Uq3OaqHLi1MndWN/GNiR48ZeLsF/xULwwJocsDrQCRz6pzv3       qLcAOIcSLJpBt9MuKUiZgpvZ+pYKUSavb1p8MPbyIGCGJDI55YQL7LD3tlClexBPL7UQ+       is7M1ODgtSiXhrJ9rBHXLmeeoeYwneQgvjWMihXxuix/3BJGNbxZXUx6zO+2hxSEmIL71       rLiGEVsu8bW4YxbE/nXY5fr0teHAjesHfpVfeqYHyJMHktVBewjZQyWJ+dYJy9lkq4XpWb       VleXbm3pqaBn0k2YIjWF4YvdPjnJAuZklTalSl5BMlI6HPgS5fFqYtVJhiP5TYyNsTKTYXo       TKxh0/JhVuT4pRewBbZIgG+y4rzGHJnU/7Zd6T2YnRvIkEA230EP86SI7aSt42YUTMQU3yNt       77eJOwX1o/j4Rn5rntES/Juiv2fr4BH18It9fw98/nf8B4cy60g==\"    }\n \n\n \n\n\n **Response**  \n\n\t{ \n     \"reason_code\": \"0\", \n     \"_id\": \"c9a8bee820774d4bb5e29df8f36de2cf\", \n     \"authorization_code\": \"310594\", \n     \"account\": \"1234\", \n     \"organisation\": \"5678\", \n     \"currency\": \"GBP\", \n     \"organisation_psp_name\": \"PSP Name\", \n     \"capture_now\": \"true\", \n     \"merchant_reference\": \"1614061135\", \n     \"amount\": \"1000\", \n     \"card\": {\n     \"card_number\": \"454305XXXXXX9982\", \n     \"expiry_month\": \"01\", \n     \"expiry_year\": \"23\" \n     }, \n     \"payment_product\": \"card\", \n     \"card_brand\": \"visa\", \n     \"issuer_name\": \"THE ROYAL BANK OF SCOTLAND PLC\", \n     \"issuer_country\": \"GB\", \n     \"fraud_predictions\": [], \n     \"status\": \"CAPTURED\", \n     \"billing_address\": { \n         \"country\": \"GB\" \n       }, \n     \"last_status_update\": \"1614061157617\", \n     \"geo_location\": [], \n     \"fees\": [], \n     \"created_at\": \"1614060923423\", \n     \"blocked\": false, \n     \"actions\": [], \n     \"details\": {}, \n     \"cvv_result\": \"M\", \n     \"avs_result\": \"C\", \n     \"three_ds\": {\n          \"three_ds_required\": \"true\" \n        } \n    }\n \n **5. 3ds 2.0 card Verify Enrolment** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": true, \n      \"card\": {\n        \"card_number\": \"4456530000001096\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"8567\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n      } \n    \"three_ds\": { \n           \"reference_id\": \"0_b0eabe1f-0d14-49d4-af94-3f36ce77d77c\", \n           \"three_ds_required\": \"true\", \n           \"three_ds_version\": \"2.0\" \n      }\n     }\n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"3a3054b99e0c412a8dfc5ccdfe68dec2\", \n      \"three_ds\": { \n          \"three_ds_required\": \"true\",\n          \"specification_version\": \"2.1.0\",\n          \"acsURL\": \"https://0merchantacsstag.cardinalcommerce.com/MerchantACSWeb/creq.jsp\",\n          \"paReq\": \"eyJtZXNzYWdlVHlwZSI6IkNSZXEiLCJtZXNzYWdlVmVyc2lvbiI6IjIuMS4wIiwidGhyZ                    WVEU1NlcnZlclRyYW5zSUQiOiIzMTNmOTNhNy04ZWI3LTQzMTUtYmEwOC0zNTg3MDNiMT                    k1OTIiLCJhY3NUcmFuc0lEIjoiMzFiZDYyNjYtNDdlYy00NzA2LTg4MmYtZmM2OTA0ZDg                    2MmY4IiwiY2hhbGxlbmdlV2luZG93U2l6ZSI6IjAyIn0\",\n          \"three_ds_enrollment\": true,\n          \"authentication_transaction_id\": \"eZQNp3BWbqvpUB1B4sj0\",\n          \"directory_server_transaction_id\": \"b4c4ac59-8314-415b-8c91-db9c974bc433\",\n          \"acsURL_http_method\": \"POST\",\n          \"reference_id\": \"0_b0eabe1f-0d14-49d4-af94-3f36ce77d77c\"\n         },\n      \"created_at\": \"1614062535893\"\n     }\n \n **6. 3ds 2.0 Verify Authentication and Payment** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n     \"_id\": \"3a3054b99e0c412a8dfc5ccdfe68dec2\", \n     \"three_ds_authentication\": { \n          \"cavv\": \"MTIzNDU2Nzg5MDEyMzQ1Njc4OTA=\", \n          \"3ds_status\": \"Y\", \n          \"eci\": \"05\", \n          \"3ds_enrolled\": \"true\", \n          \"directory_server_transaction_id\": \"b4c4ac59-8314-415b-8c91-db9c974bc433\", \n          \"3ds_version\": \"2.0\", \n          \"3ds_server_transaction_id\": \"VloEE2Ewhr0M3zP50Ir0\" \n     } \n   }\n \n\n \n\n\n **Response**  \n\n\t{ \n     \"reason_code\": \"0\", \n     \"_id\": \"3a3054b99e0c412a8dfc5ccdfe68dec2\", \n     \"authorization_code\": \"654321\", \n     \"account\": \"1234\", \n     \"organisation\": \"5678\", \n     \"currency\": \"RUB\", \n     \"organisation_psp_name\": \"PSP Name\", \n     \"capture_now\": \"true\", \n     \"merchant_reference\": \"8567\", \n     \"amount\": \"158\", \n     \"card\": {\n     \"card_number\": \"445653XXXXXX1096\", \n     \"expiry_month\": \"12\", \n     \"expiry_year\": \"22\" \n     }, \n     \"cvv_present\": true, \n     \"payment_product\": \"card\", \n     \"card_brand\": \"visa\", \n     \"issuer_country\": \"US\", \n     \"fraud_predictions\": [], \n     \"status\": \"CAPTURED\", \n     \"billing_address\": { \n         \"country\": \"GB\" \n       }, \n     \"last_status_update\": \"1614062117420\", \n     \"geo_location\": [], \n     \"fees\": [], \n     \"created_at\": \"1614062104355\", \n     \"blocked\": false, \n     \"actions\": [], \n     \"details\": {}, \n     \"cvv_result\": \"0\", \n     \"avs_result\": \"U\", \n     \"three_ds\": {\n          \"three_ds_required\": \"true\" \n        } \n    }\n \n **7. 3ds payment with non 3ds card** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": true, \n      \"card\": {\n        \"card_number\": \"4543059999999982\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"1614063543\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n       } \n    \"three_ds\": { \n           \"reference_id\": \"0_b0eabe1f-0d14-49d4-af94-3f36ce77d77c\", \n           \"three_ds_required\": \"true\", \n           \"three_ds_version\": \"2.0\" \n      }\n     }\n \n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"034b9bad3327492cbef76223cd4c0588\", \n      \"authorization_code\": \"654321\", \n      \"account\": \"1234\", \n      \"organisation\": \"5678\", \n      \"currency\": \"RUB\", \n      \"organisation_psp_name\": \"PSP Name\", \n      \"capture_now\": \"true\", \n      \"merchant_reference\": \"1614063543\", \n      \"amount\": \"1000\", \n      \"card\": {\n          \"card_number\": \"454305XXXXXX9982\", \n          \"expiry_month\": \"01\", \n          \"expiry_year\": \"23\" \n      }, \n      \"cvv_present\": true, \n      \"payment_product\": \"card\", \n      \"card_brand\": \"visa\", \n      \"issuer_name\": \"THE ROYAL BANK OF SCOTLAND PLC\", \n      \"issuer_country\": \"GB\", \n      \"fraud_predictions\": [], \n      \"status\": \"CAPTURED\", \n      \"billing_address\": { \n                  \"country\": \"GB\" \n       }, \n       \"last_status_update\": \"1614063336010\", \n       \"geo_location\": [], \n       \"fees\": [], \n       \"created_at\": \"1614063329718\", \n       \"blocked\": false, \n       \"actions\": [], \n       \"details\": {}, \n       \"cvv_result\": \"0\", \n       \"avs_result\": \"U\", \n       \"three_ds\": { \n              \"three_ds_required\": \"true\" \n               \"three_ds_version\": \"2.0\" \n       }\n    }\n \n **8. 3ds payment with non 3ds card** \n\n \n\n \n\n\n **Request**  \n\n\t{ \n      \"account\": \"1234\", \n      \"amount\": 1000, \n      \"capture_now\": true, \n      \"card\": {\n        \"card_number\": \"4012000033330026\",\n        \"cvv\": \"110\",\n        \"expiry_year\": \"23\",\n        \"expiry_month\": \"01\"\n      }, \n      \"merchant_reference\": \"1614065317\",\n      \"billing_address\": { \n        \"country\": \"GB\" \n       } \n    \"three_ds\": { \n           \"three_ds_required\": \"true\", \n           \"three_ds_version\": \"1.0\" \n      }\n     }\n \n \n\n \n\n\n **Response**  \n\n\t{ \n      \"reason_code\": \"0\", \n      \"_id\": \"793ddccc2c984ce29040bdda169c351d\", \n      \"authorization_code\": \"654321\", \n      \"account\": \"1234\", \n      \"organisation\": \"5678\", \n      \"currency\": \"RUB\", \n      \"organisation_psp_name\": \"PSP Name\", \n      \"capture_now\": \"true\", \n      \"merchant_reference\": \"1614065317\", \n      \"amount\": \"1000\", \n      \"recurring_type\": \"first\", \n      \"card\": {\n          \"card_number\": \"401200XXXXXX0026\", \n          \"expiry_month\": \"01\", \n          \"expiry_year\": \"23\" \n      }, \n      \"cvv_present\": true, \n      \"payment_product\": \"card\", \n      \"card_brand\": \"visa\", \n      \"issuer_country\": \"RU\", \n      \"fraud_predictions\": [], \n      \"status\": \"CAPTURED\", \n      \"billing_address\": { \n                  \"country\": \"GB\" \n       }, \n       \"last_status_update\": \"1614065105802\", \n       \"geo_location\": [], \n       \"fees\": [], \n       \"created_at\": \"1614065103901\", \n       \"blocked\": false, \n       \"actions\": [], \n       \"details\": {}, \n       \"cvv_result\": \"0\", \n       \"avs_result\": \"U\", \n       \"three_ds\": { \n              \"three_ds_required\": \"true\" \n       }\n    }\n ## Appendix C - CVV Responses, AVS Responses \n \n### CVV Responses\n CVV results are returned as a part of Payment requests. \n\n| Code  | Description   |\n|------|--------|\n| D  | Suspicious transaction |\n| M  | CVV Matched |\n| N  | CVV does not match |\n| P  | CVN not processed for unspecified reason |\n| S  | CVN not included in request |\n| U  | Card verification is not supported |\n| Y  | CVN failed the processor's data validation check |\n| 0  | No service available |\n\n<br>\n\n ### AVS Responses\n AVS results are returned as a part of Payment requests. \n\n| Code  | Description   |\n|------|--------|\n| A  | Address (Street) matches, Zip does not |\n| B  | Street address match for international transactions - Postal code not verified due to incompatible formats |\n| C  | Street address and postal code not verified for international transaction due to incompatible formats |\n| D  | Street address and postal code match for international transaction, cardholder name is incorrect |\n| E  | AVS error |\n| F  | Address does match and five digit ZIP code does match (UK only) |\n| G  | Address information is unavailable; international transaction; non-AVS participant |\n| H  | Billing address and postal code match, cardholder name is incorrect (Amex) |\n| I  | Address information not verified for international transaction |\n| K  | Cardholder name matches (Amex) |\n| L  | Cardholder name and postal code match (Amex) |\n| M  | Cardholder name, street address, and postal code match for international transaction |\n| N  | No Match on Address (Street) or Zip |\n| O  | Cardholder name and address match (Amex) |\n| P  | Postal codes match for international transaction - Street address not verified due to incompatible formats |\n| Q  | Billing address matches, cardholder is incorrect (Amex) |\n| R  | Retry, System unavailable or Timed out |\n| S  | Service not supported by issuer |\n| T  | Partial match: card member's name does not match, but street address matches. Returned only for the American Express card type. |\n| U  | Address information is unavailable |\n| V  | Match: card member's name, billing address, and billing postal code match. Returned only for the American Express card type. |\n| W  | 9 digit Zip matches, Address (Street) does not |\n| X  | Exact AVS Match |\n| Y  | Address (Street) and 5 digit Zip match |\n| Z  | 5 digit Zip matches, Address (Street) does not |\n| 0  | No service available - U |\n## Appendix D - Card Brands \n \n### Card Brands\n\n | Card Brands             | \n |-------------------------|\n| AMERICAN EXPRESS |\n| ARGENCARD |\n| ATM CARD |\n| AURA |\n| BANKCARD(INACTIVE) |\n| BELKART |\n| BP FUEL CARD |\n| CABAL |\n| CARNET |\n| CB |\n| CHINA UNION PAY |\n| CHINA UNION PAY/UZCARD |\n| CHJONES FUEL CARD |\n| CIRRUS |\n| COMPROCARD |\n| DANKORT |\n| DINACARD |\n| DINERS CLUB INTERNATIONAL |\n| DISCOVER |\n| DUET |\n| EBT |\n| EFTPOS |\n| ELO |\n| ELO/DISCOVER |\n| EUROSHELL FUEL CARD |\n| FUEL CARD |\n| GE CAPITAL |\n| GLOBAL BC |\n| HIPERCARD |\n| HRG STORE CARD |\n| HUMOCARD |\n| JCB |\n| JCB/LANKAPAY |\n| LOCAL BRAND |\n| LOYALTY CARD |\n| LUKOIL FUEL CARD |\n| MAESTRO |\n| MAESTRO/BANCONTACT |\n| MASTERCARD |\n| NATIVA |\n| NEWDAY |\n| NSPK MIR |\n| OUROCARD |\n| PAGOBANCOMAT |\n| PAYPAL |\n| PHH FUEL CARD |\n| PRIVATE LABEL |\n| PROSTIR |\n| RED FUEL CARD |\n| RED LIQUID FUEL CARD |\n| RUPAY |\n| SBERCARD |\n| SODEXO |\n| STAR REWARDS |\n| TARJETA CENCOSUD |\n| TARJETA NARANJA |\n| TROY |\n| UATP |\n| UK FUEL CARD |\n| UNIONPAY |\n| UZCARD |\n| VISA |\n| VISA/DANKORT |\n| VOYAGER |\n| VPAY |\n| WEXCARD |\n## Appendix E - Error Codes, Reason Codes \n\n \n ### Error Codes\n ### Validation Errors\n \n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Card Validation Errors</summary> \n\n| Code | HTTP Status  | Message   |\n|------|-------------|------------------------------------------------|\n| 100 | 500 | Unexpected error: if the error persists, please contact an administrator, quoting the code and timestamp of this error. |\n| 101 | 400 | The requested page can't be found. It's likely that the page's URL is incorrect, or was accessed using an incorrect protocol. For some pages, a strict URL routing is enabled: you may need to add or remove a trailing slash, to or from the URL. |\n| 102 | 400 | The submitted username or password is invalid. After a defined number of failed login attempts, the requested user will be disabled. |\n| 103 | 400 | The submitted CSRF-token hasn't been recognized. It's likely that the current session has expired, or holds an expired token. Should you receive this error repeatedly, or from a server-side call, please report it to an administrator. |\n| 104 | 400 | The requested file can't be found. Make sure the requested file hasn't been deleted. |\n| 105 | 400 | The submitted password is invalid. A password must be at least 8 characters in length, and contain at least one uppercase letter, one lowercase letter, one digit, and one symbol. Also, it shouldn't be similar to a previously-used password. |\n| 106 | 400 | An invalid or expired password reset token has been submitted. A given token is only valid for a short amount of time; ask for a new one if needed. |\n| 107 | 400 | At least one parameter is invalid. Examine the details property for more information. Invalid parameters are listed and prefixed accordingly: body for parameters submitted in the request's body, query for parameters appended to the request's URL, and params for templated parameters of the request's URL. |\n| 109 | 400 | The requested resource, or one of its sub-resources, can't be found. If the submitted query is valid, this error is likely to be caused by a problem with a nested resource that has been deleted or modified. Check the details property for additional insights. |\n| 110 | 400 | The submitted or requested resource is invalid. If you submitted a resource, please check for invalid fields, which will be listed in the details property. If you requested a resource, ensure the latter is valid, as well as its sub-resources. |\n| 111 | 400 | The submitted transaction has been blocked by a ruleset specified by the organization owning the account, or by a superior organization. Further information is available by querying the relevant ValidationRuleSetMatch, or by examining the blocked transaction in the user interface. |\n| 112 | 400 | Failed to perform database query. Please try again. If the error persists, contact an administrator. |\n| 113 | 400 | Insufficient permissions. Your current user roles don't allow you to perform this query. Should you believe this error to be incorrect, please contact an administrator. |\n| 114 | 400 | Your user is disabled. The intervention of an administrator is required. |\n| 115 | 400 | Your password has expired, and must be changed. |\n| 116 | 401 | Access is restricted to authenticated users only. The query can't be made without a valid API key (check the X-APIKEY header of your request), or a valid session (in which case session cookies are automatically set by the browser). |\n| 117 | 400 | It is not possible to disable or restrict your own user permissions. Verify your request target, and / or parameters. If you're trying to update your user profile, ensure your user roles are set to something valid (avoid json null, or empty list []) |\n| 119 | 400 | The transaction relates to an unknown processor. This could happen if the processor configuration that was initially used has changed. Please verify the processor configuration used by this account. |\n| 121 | 400 | The transaction has been declined by the processor. The request reached the processor, but it was not accepted. A decline reason code is available in the details property. |\n| 122 | 400 | Something went wrong with the processor. The processor replied with something unexpected, which makes it difficult to handle. This error shouldn't occur. Should you experience it, please contact an administrator with the corresponding error code and timestamp. |\n| 123 | 400 | The transaction has been rejected by the processor. The request reached the processor, but it failed the validation checks required by the processor. Please examine your request. If the error persists, contact an administrator. |\n| 125 | 400 | The submission contains an invalid character. Some characters are forbidden for some inputs. The details property identifies the character causing the error, and, possibly, its source. |\n| 126 | 400 | At least one parameter is missing from the request body. Ensure you have provided all required parameters, as specified in the documentation. |\n| 127 | 400 | At least one parameter is unexpected, or unwanted. If you're trying to update a resource, be sure to include only parameters that you want to, and may, update. Some parameters are read-only or create-only. |\n| 128 | 400 | The submitted or computed amount is too large. This happens when trying to capture or refund a transaction for more than the available amount. In some cases, for some payment methods, it is possible to re-authorize or capture slightly more than the initial amount; please refer to the documentation to learn when and where this is possible. |\n| 129 | 400 | The submitted HTML or CSS snippets have failed the validation checks, and are considered unsafe. Remember, it is forbidden to include JavaScript, or external URLs that aren't images, in your snippets. |\n| 130 | 400 | At least one field of the submitted entity that is supposed to be unique already exists in another resource. The details property identifies which field is conflicting with which resource. |\n| 131 | 400 | The processor is currently unavailable. Try again later. |\n| 132 | 400 | The requested operation is not supported by the payment method or processor. Refer to the documentation for a list of supported operations. |\n| 133 | 400 | The requested card scheme isn't supported by the processor. |\n| 134 | 400 | Failed to parse the request. Ensure the request contains a valid JSON object, avoiding single quotes and trailing commas, and that the Content-Type header is set to application/json. |\n| 135 | 400 | Invalid combination (key, operator) for matching ruleset. |\n| 136 | 400 | Setting the password to a recently-used password is prohibited. Please set a different password. |\n| 137 | 400 | Parameters in the request body are conflicting with one another. It's likely that they are valid individually, yet they can't be submitted together, as that would lead to invalid combinations. |\n| 138 | 400 | Your session has expired, or can't be renewed. Re-authentication is needed. Please be aware that all sessions will eventually expire. |\n| 139 | 400 | The submitted session token is invalid. It's likely that your client application has corrupted the session cookie. |\n| 140 | 400 | An error occurred during 3D Secure processing. For more information, please refer to the details property. |\n| 141 | 400 | No more than 2 API-keys can be created for the same user. |\n| 142 | 400 | Cannot remove processor, there are still accounts using it. |\n| 143 | 400 | You have attempted to use an account that uses a currency that is not supported when using this processor. |\n| 144 | 400 | Please fill in the captcha input. |\n| 145 | 400 | The input captcha doesn't match with the provided one. Please retry. |\n| 146 | 400 | Unable to delete the account. The account still has transactions stored in it. |\n| 147 | 400 | Unable to make a transaction, because the account has been disabled. |\n| 148 | 400 | The processor configuration you're trying to use contains invalid fields. |\n| 149 | 400 | The recurring transaction could not be initiated. |\n| 150 | 400 | The transaction was declined by a third party fraud engine. |\n| 151 | 400 | The amount does not match the expected value. |\n| 152 | 400 | Unable to create inspector as there's an existing type attached to the Organisation. |\n| 153 | 400 | The (account) transaction relates to an unknown inspector. This could happen if the inspector configuration that was initially used has changed. Please verify the inspector configuration used by this account. |\n| 154 | 400 | Cannot remove inspector, there are still accounts using it. |\n| 155 | 400 | Unable to complete request, because a parent organisation has been disabled. |\n| 156 | 400 | A parent organisation for this user has been disabled. Please contact a system administrator if you believe this to have been done in error. |\n| 157 | 400 | It is not possible to disable your own user's organisation. Please verify your request target and / or parameters. |\n| 158 | 400 | The requested operation is not supported by the importer. Refer to the documentation for a list of supported operations. |\n| 159 | 400 | The selected importer is unknown. Please check the list of available importers in the documentation or make sure that the importer is enabled in the config |\n| 160 | 400 | There's no mapping found for the given merchant id. Please make sure to define the mapping first. |\n| 161 | 400 | You have provided a page containing invalid or prohibited CSS content. |\n| 162 | 400 | You have provided a page containing invalid or prohibited HTML content. |\n| 163 | 400 | One or more values are duplicated, but should be unique. |\n| 164 | 400 | Failed to retrieve content from external URL. |\n| 165 | 400 | Maximum number of attempts to submit the form has been reached! |\n| 166 | 400 | Account doesn't have enough balance |\n| 167 | 400 | An error returned by Processor. Please process the transaction again |\n| 200 | 400 | The locale you passed is invalid according to ISO 639 standard. Please provide the valid locale like 'en_US', 'en_GB', 'en_IN', 'fr_CH', 'ja_JP' etc. |\n| 201 | 400 | Please provide either card_number or token or encrypted_data or applepay block or googlepay block. |\n| 202 | 400 | Please enter minimum 12 digits in card number. |\n| 203 | 400 | Either Key is not configured against the organisation or expired. |\n| 210 | 400 | Amount is invalid or missing. |\n| 211 | 400 | Transaction_id is invalid or missing. |\n| 212 | 400 | Transaction cannot be refunded. |\n| 213 | 400 | Transaction cannot be cancelled. |\n| 214 | 400 | Transaction cannot be captured. |\n| 215 | 400 | Quantity is invalid or missing. |\n| 216 | 400 | Vat percent is invalid or missing. |\n| 217 | 400 | Gateway response looks blank or invalid. Please process the transaction again. |\n| 218 | 400 | Account invalid or missing. |\n| 1000 | 400 | The organisation does not found associated with this account. |\n| 1001 | 400 | The payment service provider does not found associated with this account. |\n| 1002 | 400 | The original transaction was not found. |\n| 1003 | 400 | The refund amount entered does not match with the original transaction amount. |\n| 1004 | 400 | The payment service provider end_point does not found. |\n| 1005 | 400 | The Product is not associated with this PSP. Please enter a valid Product. |\n| 1006 | 400 | The Currency is not associated with this PSP. Please enter a valid Currency. |\n| 1007 | 400 | The Transaction Type is not associated with this PSP. Please enter a valid Transaction Type. |\n| 1008 | 400 | A PSP with the same name already exists. Please enter a different PSP name. |\n| 1009 | 400 | The Country is not associated with this Organisation. Please enter a valid Country. |\n| 1010 | 400 | An Organisation with the same name already exists. Please enter a different Organisation name. |\n| 1011 | 400 | The Captured amount does not match with the original transaction amount or Already been captured. |\n| 1012 | 400 | System is not able to detokenise the token, please check your token. |\n| 1013 | 400 | System is not able to Regenerate the token, please Contact Administrative team. |\n| 1014 | 400 | The amount is already refunded. |\n| 1015 | 400 | The amount is greater than captured amount. |\n| 1016 | 400 | The transaction has not been captured yet. |\n| 1017 | 400 | The webhook max attempt should be less then or equal to 10. |\n| 1018 | 400 | Organisation_psp with given Id does not exist. Please enter a valid organisation_psp_id. |\n| 1019 | 400 | Currency with given Id does not exist. Please enter a valid currency_id. |\n| 1020 | 400 | Organisation with given Id does not exist. Please enter a valid organisation_id. |\n| 1021 | 400 | An Account with the same account name already exists. Please enter a different account name. |\n| 1022 | 400 | The organisation parent id does not found. Please enter a valid organisation_parent_id. |\n| 1023 | 400 | The operation is not supported yet. please Contact Administrative team. |\n| 1024 | 400 | A PSP is not found of dimebox. Configuration issue. |\n| 1025 | 400 | The reporting_organisation_id does not found against your parent_id. Configuration issue. |\n| 1026 | 400 | Unable to process request. |\n| 1027 | 400 | A Organisation PSP with the same name already exists. Please enter a different Organisation PSP name. |\n| 1028 | 400 | A Organisation Id, PSP Id with MID already exists. Please enter a different MID or Organisation Id and PSP Id. |\n| 1029 | 400 | A transaction has been attempted on this URL. Please create a new transaction. |\n| 1030 | 400 | This transaction does not support the performed operation. |\n| 1031 | 400 | Response seems to be coming from unverified source. Please initiate the payment transaction again. |\n| 1032 | 400 | Gateway timeout. |\n| 1033 | 400 | Card number is invalid. |\n| 1034 | 400 | BIN not found. |\n| 1035 | 400 | The transaction has not been refunded yet. |\n| 1036 | 400 | You are not authorised to use this service. Please speak to your Implementation Manager for further information. |\n| 1037 | 400 | Capture_id is invalid or missing. |\n| 1038 | 400 | Capture id is required for partially captured transactions |\n| 1039 | 400 | Unable to decrypt the request. Please contact an administrator, quoting the code and timestamp of this error |\n| 1040 | 400 | No account found for the associated organisation. |\n| 1041 | 400 | Webhook url should contain same domain as account webhook url. |\n| 1042 | 400 | Account is not configured to support webhook notifications. |\n| 1043 | 400 | Token is Invalid/Missing. |\n| 1044 | 400 | Unable to decrypt the request. Decryption Key is either inactive or expired. |\n| 1045 | 400 | Token is Inactive. |\n| 1047 | 400 | You submitted a request that is not parsable. |\n| 1048 | 400 | Product_id is invalid. |\n| 1049 | 400 | Either organisationId or merchantReference is incorrect. |\n| 1050 | 400 | The merchantReference is not unique. |\n| 1051 | 400 | Record already exists. |\n| 1052 | 400 | Account is not configured to support this request. |\n| 1053 | 400 | Account is not configured to support the payment type. |\n| 1054 | 400 | This was duplicate request. Awaiting response from PSP for initial request. |\n| 1055 | 400 | This url is already used to create a token, please create a new hosted token request to create a token. |\n| 1056 | 400 | Organisation configuration is not supported or expired for risk & check feature. |\n| 1057 | 400 | provider_name is invalid or missing. |\n| 1058 | 400 | Third party processor unavailable. |\n</details>\n\n \n ### Processing Errors \n \n <details onmouseover=\"\" style=\"cursor: pointer;\"><summary>Card Processing Errors</summary> \n\n| Reason_Code  | Reason_Message |\n|------|--------|\n| APC_001  | Transaction in progress |\n| APC_002  | Error processing transaction |\n| APC_003  | Account configuration invalid |\n| APC_004  | IP not allowed |\n| APC_005  | Function not supported by acquirer |\n| APC_006  | Order details do not match request |\n| APC_007  | Malformed request |\n| APC_008  | Merchant account suspended |\n| APC_009  | Currency not supported |\n| APC_011  | Gateway error - please contact support |\n| APC_012  | Unable to connect to Acquirer |\n| APC_015  | Encryption error |\n| APC_016  | Duplicate request |\n| APC_017  | Acquirer settlement error |\n| APC_018  | AVS/CVC not supported by Acquirer |\n| APC_019  | Payment method not supported |\n| APC_020  | Unable to authorise transaction |\n| APC_021  | Request expired |\n| APC_022  | Test card not supported |\n| APC_023  | Issuing country not supported |\n| APC_024  | Action invalid or missing |\n| APC_025  | Amount invalid or missing |\n| APC_026  | Card number invalid or missing |\n| APC_027  | Expiry date invalid or in the past |\n| APC_028  | Card issue number invalid or missing |\n| APC_029  | CVV invalid or missing |\n| APC_030  | Billing name invalid or missing |\n| APC_031  | Billing address invalid or missing |\n| APC_032  | Billing postcode invalid or missing |\n| APC_033  | Email invalid or missing |\n| APC_034  | Phone number invalid or missing |\n| APC_035  | Country code invalid or missing |\n| APC_036  | Merchant reference invalid or missing |\n| APC_037  | Remote address invalid or missing |\n| APC_038  | Redirect URL invalid or missing |\n| APC_039  | Callback URL invalid or missing |\n| APC_040  | Merchant data invalid or missing |\n| APC_041  | Origin invalid or missing |\n| APC_042  | Duplicate delay invalid or missing |\n| APC_043  | Item details invalid or missing |\n| APC_044  | Tax details invalid or missing |\n| APC_045  | Discount value invalid or missing |\n| APC_046  | 3DS details invalid or missing |\n| APC_047  | 3DS pares invalid or missing |\n| APC_048  | Capture now missing or invalid |\n| APC_049  | Order date invalid or missing |\n| APC_050  | Card start date invalid or missing |\n| APC_051  | Confirmation Number invalid |\n| APC_052  | CSRF token invalid or missing |\n| APC_053  | Token invalid or missing |\n| APC_054  | Data invalid or missing |\n| APC_055  | Captcha invalid or missing |\n| APC_056  | Error processing request |\n| APC_057  | Attempts exceeded |\n| APC_058  | 3DS Authentication failed |\n| APC_059  | 3DS Issuer is unable to respond |\n| APC_060  | 3DS Error |\n| APC_061  | Try again later |\n| APC_062  | Invalid DATETIME format |\n| APC_063  | Authorisation code missing or invalid |\n| APC_064  | Order not found |\n| APC_065  | Recurring order not possible |\n| APC_066  | Payment not yet ready for refund |\n| APC_067  | Card brand invalid or missing |\n| APC_068  | Refund not allowed or possible |\n| APC_069  | Network error |\n| APC_070  | Acquirer error |\n| APC_071  | Automatically voided on Refund |\n| APC_072  | Gateway Timeout |\n| APC_073  | Net amount doesn't match with items prices |\n| APC_074  | Gross amount doesn't match with items prices |\n| APC_075  | Customer number is invalid or missing |\n| APC_076  | Capture not allowed or possible |\n| APC_077  | Payment not yet ready for capture |\n| APC_078  | Void not allowed or possible |\n| APC_079  | Unexpected Response |\n| APC_080  | Authorisation amount exceeded |\n| APC_081  | Transaction already refunded or settled or voided |\n| APC_082  | Third Party Processor error |\n| APC_083  | Payment product not supported or invalid |\n| APC_084  | Method invocation exception |\n| APC_085  | 3DS processing is not required for this card |\n| APC_086  | 3DS processing is required for this card |\n| APC_087  | 3DS authentication is required for this card |\n| APC_088  | 3DS enrolment check error|\n| 217      | Gateway response looks blank or invalid. Please process the transaction again. |\n</details>\n\n \n<br/> \n\n ### Reason Codes\n The complete list of reason codes is given right below. \n \n\n| Reason_Code  | Reason_Message   |\n|------|--------|\n| 0 | Successful approval/completion or that VIP PIN verification is valid |\n| 1 | Refer to card issuer |\n| 2 | Refer to card issuer, special condition |\n| 3 | Invalid merchant or service provider |\n| 4 | Pickup |\n| 5 | Do not honor |\n| 6 | General error |\n| 7 | Pickup card, special condition (other than lost/stolen card) |\n| 8 | Honor with identification |\n| 9 | Request in progress |\n| 10 | Partial approval |\n| 11 | VIP approval |\n| 12 | Invalid transaction |\n| 13 | Invalid amount (currency conversion field overflow) or amount exceeds maximum for card program |\n| 14 | Invalid account number (no such number) |\n| 15 | No such issuer |\n| 16 | Insufficient funds |\n| 17 | Customer cancellation |\n| 18 | Customer dispute |\n| 19 | Re-enter transaction |\n| 20 | Invalid response |\n| 21 | No action taken (unable to back out prior transaction) |\n| 22 | Suspected Malfunction |\n| 23 | Unacceptable transaction |\n| 24 | File update impossible |\n| 25 | Unable to locate record in file, or account number is missing from the inquiry |\n| 28 | File is temporarily unavailable |\n| 30 | Format error |\n| 34 | 3DS Authentication failed |\n| 35 | 3DS Issuer is unable to respond |\n| 36 | 3DS Error |\n| 37 | Issuer not supported |\n| 41 | Merchant should retain card (card reported lost) |\n| 43 | Merchant should retain card (card reported stolen) |\n| 51 | Insufficient funds |\n| 52 | No checking account |\n| 53 | No savings account |\n| 54 | Expired card |\n| 55 | Incorrect PIN |\n| 57 | Transaction not permitted to cardholder |\n| 58 | Transaction not allowed at terminal |\n| 59 | Suspected fraud |\n| 60 | Declined by Risk |\n| 61 | Activity amount limit exceeded |\n| 62 | Restricted card (for example, in country exclusion table) |\n| 63 | Security violation |\n| 65 | Activity count limit exceeded |\n| 68 | Response received too late |\n| 75 | Allowable number of PIN-entry tries exceeded |\n| 76 | Unable to locate previous message (no match on retrieval reference number) |\n| 77 | Previous message located for a repeat or reversal, but repeat or reversal data are inconsistent with original message |\n| 78 | ’Blocked, first used’—The transaction is from a new cardholder, and the card has not been properly unblocked. |\n| 80 | Visa transactions: credit issuer unavailable. Private label and check acceptance: Invalid date |\n| 81 | PIN cryptographic error found (error found by VIC security module during PIN decryption) |\n| 82 | Negative CAM, dCVV, iCVV, or CVV results |\n| 83 | Unable to verify PIN |\n| 85 | No reason to decline a request for account number verification, address verification, CVV2 verification; or a credit voucher or merchandise return |\n| 86 | Card Expiry Date invalid |\n| 87 | AVS check failed |\n| 90 | Third Party Processor error. |\n| 91 | Issuer unavailable or switch inoperative (STIP not applicable or available for this transaction) |\n| 92 | Destination cannot be found for routing |\n| 93 | Transaction cannot be completed, violation of law |\n| 94 | Duplicate transmission |\n| 95 | Reconcile error |\n| 96 | System malfunction, System malfunction or certain field error conditions |\n| B1 | Surcharge amount not permitted on Visa cards (U.S. acquirers only) |\n| N0 | Force STIP |\n| N3 | Cash service not available |\n| N4 | Cashback request exceeds issuer limit |\n| N7 | Decline for CVV2 failure |\n| P2 | Invalid biller information |\n| P5 | PIN change/unblock request declined |\n| P6 | Unsafe PIN |\n| Q1 | Card authentication failed |\n| R0 | Stop payment order |\n| R1 | Revocation of authorisation order |\n| R3 | Revocation of all authorisations order |\n| XA | Forward to issuer |\n| XD | Forward to issuer |\n| Z3 | Unable to go online |\n| 1A | SCA Required by Issuer |\n## Appendix F - Supported functions by payment methods \n \n### Supported functions by payment methods\n\n \n\n| Payment Method | Authorisation | Capture | Void Capture | Void Authorisation | Refund | Void Refund | 3DS 1.0 | 3DS 2.0 \n|------|-------------|-------------|-------------|-------------|-------------|-------------|-------------|-------------|\n| Card Payment         | Yes | Yes | Yes | Yes | Yes | Yes | Yes | Yes |\n| Paypal               | Yes | Yes |     | Yes | Yes |     |     |     |\n| Afterpay             | Yes | Yes |     | Yes | Yes |     |     |     |\n| iDeal                |     | Yes |     |     | Yes |     |     |     |\n| p24                  |     | Yes |     |     | Yes |     |     |     |\n| Sofort               |     | Yes |     |     | Yes |     |     |     |\n| Dragonpay            | Yes |     |     | Yes |     |     |     |     |\n| Oxxo                 |     | Yes |     |     | Yes |     |     |     |\n| Blik                 |     | Yes |     |     | Yes |     |     |     |\n| Klarna               |     | Yes |     |     | Yes |     |     |     |\n| Alipay International |     | Yes |     |     | Yes |     |     |     |\n| Alipay               | Yes |     |     | Yes | Yes |     |     |     |\n| CUP                  | Yes |     |     | Yes | Yes |     |     |     |\n## Appendix G - Test Data \n \n### Test Data\n\n \n","version":" ","title":"APEXX FINTECH API","license":{"name":"Apexx Fintech Ltd","url":"https://www.apexxfintech.com/legal-documentation/"}},"host":"sandatomic.apexx.global","basePath":"/atomic/v1","tags":[{"name":"Get Transactions"},{"name":"Create And Manage Card Token"},{"name":"STANDALONE SERVICES"},{"name":"Transaction Update"},{"name":"Credit Transaction"},{"name":"Hosted Token","description":"Hosted Token Controller"},{"name":"Transaction Payment"},{"name":"Buy Now Pay Later","description":"BNPL Controller"},{"name":"Transaction Hosted Payment"}],"paths":{"/api/3ds/authenticate":{"post":{"tags":["Transaction Payment"],"summary":"3DS Verify Authentication Request","description":"Verifies 3DS Authentication. This verifies if the 3DS enrolled card was authenticated and proceeds with the payment authorisation after successful 3DS Authentication.","operationId":"threeDsVerifyAuthUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"threeDsVerifyAuthRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/ThreeDsVerifyAuthRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/bincheck/{bin} ":{"post":{"tags":["STANDALONE SERVICES"],"summary":"Validate BIN","description":"BIN Inspector returns Issuer information. Please contact your Implementation Manager to enable this service.","operationId":"checkBinUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"bin","in":"path","description":"First 6 digits of a card number (BIN/IIN)","required":true,"type":"integer","format":"int32"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/BinResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/cancel/{cancelType}/{id}":{"post":{"tags":["Transaction Update"],"summary":"Voids an authorised transaction","description":"To cancel an authorised transaction, use the id received in the authorisation request","operationId":"cancelRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"cancelRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/CancelRequestDTO"}},{"name":"cancelType","in":"path","description":"Cancel Type","required":true,"type":"string","enum":["payment","capture","refund"]},{"name":"id","in":"path","description":"Id for cancel request","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/cancel/{cancelType}/{id} ":{"post":{"tags":["Transaction Update"],"summary":"Voids a captured transaction","description":"To cancel a captured transaction, use the id received in the capture request","operationId":"cancelRequest2UsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"cancelRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/CancelCaptureRequestRedocDTO"}},{"name":"cancelType","in":"path","description":"Cancel Type","required":true,"type":"string","enum":["payment","capture","refund"]},{"name":"id","in":"path","description":"Id for capture request","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/cancel/{cancelType}/{id}  ":{"post":{"tags":["Transaction Update"],"summary":"Voids a refund transaction","description":"To cancel a refunded transaction, use the id received in the refund request","operationId":"cancelRequest4UsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"cancelRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/CancelRefundRequestRedocDTO"}},{"name":"cancelType","in":"path","description":"Cancel Type","required":true,"type":"string","enum":["payment","capture","refund"]},{"name":"id","in":"path","description":"Id for cancel request","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/capture/{transactionId}":{"post":{"tags":["Transaction Update"],"summary":"Capture an authorised transaction","description":"Capture an authorised transaction","operationId":"captureRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"captureRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/CaptureRequestDTO"}},{"name":"transactionId","in":"path","description":"The ID of the transaction","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/CaptureResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/CaptureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/creditTransaction":{"post":{"tags":["Credit Transaction"],"summary":"Create a new Credit transaction","description":"Create a new Credit transaction","operationId":"createCreditTransactionUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"authorizePaymentRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/AuthorizePaymentRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/creditTransaction/cancel/{transactionId}":{"put":{"tags":["Credit Transaction"],"summary":"Voids the created credit transactions","description":"Voids the created credit transactions","operationId":"cancelCreditTransactionUsingPUT","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"transactionId","in":"path","description":"The ID of the transaction","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/CancelResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/payment":{"post":{"tags":["Transaction Payment"],"summary":"Authorises Payment Request.","description":"Authorise Payment Request. This provides a single interface for APM, Card and other payment methods. Method accepts payment request in encrypted or in clear text. In all cases Organisation and Currency or Account is required.","operationId":"authorizePaymentRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"authorizePaymentRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/AuthorizePaymentRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/payment/bnpl":{"post":{"tags":["Buy Now Pay Later"],"summary":"Create Order","description":"Create an order with the BNPL provider. This provides a single interface for all BNPL providers. In all cases Organisation and Currency is required","operationId":"createOrderRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"bnplOrderRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/BNPLOrderRequest"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/BNPLOrderResponse"}},"201":{"description":"JSON representation of the related transaction - Redirect Response","schema":{"$ref":"#/definitions/Create an order with the BNPL provider. This provides a single interface for all BNPL providers. In all cases Organisation and Currency is required"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/BNPLOrderResponse"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/payment/hosted ":{"post":{"tags":["Transaction Hosted Payment"],"summary":"Hosted Payment Request.","description":"This is a Hosted Payment Request. This provides a single interface for Hosted APM and Card Payment.In both card and APM cases a check out URL gets generated.In case of card, hosted page gets displayed which accepts card details and on click of pay button processes card authorisation.In case of paypal, paypal page gets displayed which requires approval and on click of pay button processes paypal authorisation.","operationId":"hostedPayUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"hostedTransationRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/HostedPayRequestRedocDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/HostedPayResponseRedocDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/HostedPreTxnErrorResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/HostedPreTxnErrorResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/HostedPreTxnErrorResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/HostedPreTxnErrorResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/HostedPreTxnErrorResponseDTO"}}}}},"/api/refund/{transactionId}":{"post":{"tags":["Transaction Update"],"summary":"Refund an authorised transaction","description":"Refund an authorised transaction","operationId":"refundRequestUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"refundRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/RefundRequestDTO"}},{"name":"transactionId","in":"path","description":"The ID of the transaction","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/RefundResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/RefundResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/risk ":{"post":{"tags":["STANDALONE SERVICES"],"summary":"Apexx Risk Score","description":"This API calculates Risk Score (between 0 and 1) for the payment request by using Apexx risk and fraud engine. The calculated score is used by the system to decide whether to proceed with the transaction or return an error response.","operationId":"fraudCheckCalculatesRiskScoreApiUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"fraudCheckRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/InternalFraudCheckRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/ResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/ResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/route ":{"post":{"tags":["STANDALONE SERVICES"],"summary":"Route Resolution","description":"This API resolves route for a given account or organisation Id and currency along with other set of input parameters and returns a list of PSPs - primary and fallback psp list, rule type(AIRE, DEFAULT,ROUND-ROBIN) , routing mechanism (RULE-BASED , ROUND-ROBIN) and round-robin details.","operationId":"ireRouteResolutionApiUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"ireRequest","description":" ","required":false,"schema":{"$ref":"#/definitions/IreRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/IreResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Processing Errors","schema":{"$ref":"#/definitions/IreResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/token":{"post":{"tags":["Create And Manage Card Token"],"summary":"Token Creation","description":"Creates new token for given card details.\r\nReturns existing token if active token is present. If card details are encrypted, then just pass {\"encryptedPayload\" : \"string\"} in request body with EncryptedKey in the request header ","operationId":"createTokenUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"createTokenRequest","description":"createTokenRequest","required":true,"schema":{"$ref":"#/definitions/CreateTokenRequest"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"},{"name":"ENCRYPTED-KEY","in":"header","description":"EncryptedKey","required":false,"type":"string"}],"responses":{"200":{"description":"Token created successfully","schema":{"$ref":"#/definitions/CreateTokenResponseDTO"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"UnAuthorised User","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Token creation failed","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/token/hosted":{"post":{"tags":["Hosted Token"],"summary":"hostedTokenPage","description":"Hosted Token","operationId":"hostedTokenUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"hostedTokenRequest","description":"hostedTokenRequest","required":false,"schema":{"$ref":"#/definitions/HostedTokenRequest"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"Token created successfully","schema":{"$ref":"#/definitions/HostedTokenResponseDTO"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"UnAuthorised User","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Token creation failed","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/token/{cardToken}":{"delete":{"tags":["Create And Manage Card Token"],"summary":"Token Deactivation","description":"Deactivates the given card token","operationId":"deleteTokenUsingDELETE","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"cardToken","in":"path","description":"cardToken","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"}],"responses":{"200":{"description":"Token deactivated successfully","schema":{"$ref":"#/definitions/DeleteTokenResponseDTO"}},"400":{"description":"Bad Request","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"UnAuthorised User","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"412":{"description":"Token deactivation failed","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/transaction/list":{"post":{"tags":["Get Transactions"],"summary":"Get Transaction List by Date Range.","description":"Get Transaction List by Date Range.","operationId":"retrievePaymentListUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"request","description":" ","required":false,"schema":{"$ref":"#/definitions/PaymentListRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/transaction/organisation/{merchantReference}":{"get":{"tags":["Get Transactions"],"summary":"Get Transaction By Organisation and Merchant Reference","description":"Get Transaction By Organisation and Merchant Reference","operationId":"retrieveByMerchantRefUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"merchantReference","in":"path","description":"The Merchant Reference of the transaction","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentListResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"503":{"description":"Service Unavailable","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/transaction/page":{"post":{"tags":["Get Transactions"],"summary":"Get Transaction List by Date Range with Pagination.","description":"Get Transaction List by Date Range with Pagination.","operationId":"retrievePaymentListPaginationUsingPOST","consumes":["application/json"],"produces":["*/*"],"parameters":[{"in":"body","name":"request","description":" ","required":false,"schema":{"$ref":"#/definitions/PaymentListRequestDTO"}},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentListResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}},"/api/transaction/{transactionId}":{"get":{"tags":["Get Transactions"],"summary":"Get transaction details By Id","description":"Get transaction details By Id","operationId":"getTransactionUsingGET","consumes":["application/json"],"produces":["*/*"],"parameters":[{"name":"transactionId","in":"path","description":"The ID of the transaction","required":true,"type":"string"},{"name":"X-APIKEY","in":"header","description":"X-APIKEY","required":true,"type":"string"},{"name":"ORG-ID","in":"header","description":"ORG-ID","required":true,"type":"string"}],"responses":{"200":{"description":"JSON representation of the related transaction - Direct Response","schema":{"$ref":"#/definitions/PaymentResponseDTO"}},"400":{"description":"Bad / Invalid request\t","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"401":{"description":"Unauthenticated user / missing API Key","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"403":{"description":"Forbidden error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"500":{"description":"Internal Server Error / Unexpected Error","schema":{"$ref":"#/definitions/FailureResponseDTO"}},"503":{"description":"Service Unavailable","schema":{"$ref":"#/definitions/FailureResponseDTO"}}}}}},"definitions":{"AccountHistoryDTO":{"type":"object","properties":{"first_use_of_shipping_address":{"type":"string","description":"Applicable when this is not a guest account."},"shipping_address_usage_date":{"type":"string","description":"Date when the shipping address for this transaction was first used. Recommended for Discover ProtectBuy. If firstUseOfShippingAddress is false and not a guest account, then this date is entered."}}},"AfterPayRequestDto":{"type":"object","required":["customer","gross_amount","items","payment_type"],"properties":{"payment_type":{"type":"string","enum":["Invoice","Account","Installment","Consolidatedinvoice"]},"gross_amount":{"type":"integer","format":"int64","description":"Total gross amount of order. Must match the grossUnitPrice * quantity of order items"},"net_amount":{"type":"integer","format":"int64","description":"Total net amount of order."},"items":{"type":"array","items":{"$ref":"#/definitions/ItemsDetailsDto"}},"customer":{"$ref":"#/definitions/CustomerDto"},"delivery_customer":{"$ref":"#/definitions/DeliveryCustomerDto"},"risk_data":{"description":"Afterpay Risk Data","$ref":"#/definitions/RiskDataDto"},"campaign":{"description":"Campaign information","$ref":"#/definitions/CampaignDto"},"direct_debit":{"description":"Direct debit information","$ref":"#/definitions/DirectDebitDto"},"payment":{"$ref":"#/definitions/Payment"}}},"Agency":{"type":"object","properties":{"agency_code":{"type":"string","description":"Travel agency code"},"agency_name":{"type":"string","description":"Travel agency name"},"agency_address":{"type":"string","description":"Street address of the card holder. Note: All characters support"},"agency_city":{"type":"string","description":"City of the card holder Note: Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,))"},"agency_state":{"type":"string","description":"A region / state / province for the address. Note: Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,))"},"agency_postal_code":{"type":"string","description":"A postal code for the address. Note: Only alpha-numeric characters"},"agency_country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address. Note: Alphabets upto two characters (e.g. GB, RU etc..)"}}},"AgencyDto":{"type":"object","properties":{"agency_code":{"type":"string","description":"Travel agency code"},"agency_name":{"type":"string","description":"Travel agency name"},"agency_address":{"type":"string","description":"Street address of the card holder. \n\nNote:  All characters support "},"agency_city":{"type":"string","description":"City of the card holder.\n\nNote: Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,))"},"agency_state":{"type":"string","description":"A region / state / province for the address.\n\nNote: Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,))"},"agency_postal_code":{"type":"string","description":"A postal code for the address.\n\nNote: Only alpha-numeric characters"},"agency_country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address\n\n. Note: Alphabets upto two characters (e.g. GB, RU etc..)"}}},"AirlineData":{"type":"object","properties":{"pnr":{"type":"string","description":"Reference number for the airline booking. Required if ticket numbers are not issued."},"airline_name":{"type":"string","description":"Name of the airline."},"airline_numeric_code":{"type":"integer","format":"int32","description":"Airline Numeric Code"},"agency":{"description":"Agency","$ref":"#/definitions/Agency"},"ticket_number":{"type":"string","description":"Ticket/document number, or PNR locator code."},"check_digit":{"type":"integer","format":"int32","description":"Check digit for the ticket number with Discover and Diners Club, a valid ticket number has these characteristics:<ul><li>The value is numeric.</li><li>The first three digits are a valid IATA2 license plate carrier code.</li><li>The last digit is a check digit or zero (0).</li><li>All remaining digits are nonzero.</li></ul>"},"is_restricted":{"type":"string","description":"True will auto-capture the transaction. False will only authorise the transaction","enum":["true","false"]},"transaction_type":{"type":"integer","format":"int32","description":"Type of charge."},"extended_payment_code":{"type":"string","description":"Airline process identifier. This value is the airline’s three-digit IATA1 code which is used to process extended payment airline tickets\r\n"},"passenger_title":{"type":"string","description":"Title of the passenger"},"passenger_name":{"type":"string","description":"Name of passenger.\n <b>Note:</b> Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,) and apostrophe(‘))."},"passenger_age_group":{"type":"string","description":"Travelling passenger's age group.","enum":["16-24","25-34","35-44","45-54","55-64","65 and up","Unknown"]},"is_lead":{"type":"string","description":"Indicates whether the passenger is a lead passenger within the group.","enum":["true","false"]},"customer_code":{"type":"string","description":"<ol><li>Reference number or code that identifies the cardholder.</li><li>Code provided by the cardholder.</li><li>Address of the ticket issuer. The first 13 characters will appear onthe cardholder’s statement.</li><li>Customer reference..</li></ol>"},"document_type":{"type":"integer","format":"int32","description":"Airline document type code that specifies the purpose of the transaction. For the possible values, see Appendix A, \"Airline Document Type Codes\"."},"document_number":{"type":"string","description":"Ticket number or a value that might be a booking reference number."},"travel_legs_count":{"type":"integer","format":"int32","description":"Number of travel legs. Numbering for the travel legs: 0 to 3."},"invoice_number":{"type":"string","description":"Invoice number of the ticket."},"invoice_date":{"type":"string","description":"Invoice date. The format is YYYY-MM-DD. If this value is included in the request, it is used in the creation of the invoice number."},"additional_charge_description":{"type":"string","description":"Description of the charge."},"total_fee_amount":{"type":"integer","format":"int32","description":"Total fee for the ticket."},"clearing_sequence":{"type":"integer","format":"int32","description":"Total number of captures when requesting multiple partial captures for one authorisation."},"clearing_count":{"type":"integer","format":"int32","description":"Total number of clearing count associated with the authorisation request."},"total_clearing_amount":{"type":"integer","format":"int32","description":"Total clearing amount for all transactions in the clearing count set."},"passenger_count":{"type":"integer","format":"int32","description":"Number of passengers for whom the ticket was issued."},"reservation_system_code":{"type":"string","description":"Code that specifies the computerized reservation system used to make the reservation and purchase the ticket."},"process_identifier":{"type":"string","description":"Airline process identifier. This value is the airline’s three-digit IATA1 code which is used to process extended payment airline tickets."},"issue_date":{"type":"string","description":"Date on which the ticket was issued. Format: YYYY-MM-DD"},"is_eticket":{"type":"string","description":"Indicates whether the issued ticket was electronic or not.","enum":["true","false"]},"original_ticket_number":{"type":"string","description":"Original ticket number when the transaction is for a replacement ticket."},"purchase_type":{"type":"string","description":"EXC: Exchange ticket, MSC: Miscellaneous, REF: Refund, TKT: Ticket. \n\n Type of purchase","enum":["EXC","MSC","REF","TKT"]},"credit_reason":{"type":"string","description":"A: Cancellation of the ancillary passenger transport purchase, \nB: Cancellation of the airline ticket and the passenger transport ancillary purchase, \nC: Cancellation of the airline ticket, \nO: Other, \nP: Partial refund of the airline ticket.\n\n Reason for the credit.","enum":["A","B","C","O","P"]},"ticket_change_indicator":{"type":"string","description":"C: Change to the existing ticket., \n N: New ticket.\n \n Type of update.","enum":["C","N"]},"plan_number":{"type":"string","description":"Plan number based on the fare. This value is provided by the airline."},"arrival_date":{"type":"string","description":"Inbound arrival date and time of the booking. Format: YYYY-MM-DD HH:mm:ss"},"restricted_ticket_description":{"type":"string","description":"Text that describes the ticket limitations, such as nonrefundable."},"exchange_ticket_amount":{"type":"integer","format":"int32","description":"Amount of the exchanged ticket."},"exchange_ticket_fee_amount":{"type":"integer","format":"int32","description":"Fee for exchanging the ticket."},"reservation_type":{"type":"string","description":"Type of journey such as one way or round trip."},"boarding_fee_amount":{"type":"string","description":"Boarding fee."},"legs":{"type":"array","description":"Array of legs","items":{"$ref":"#/definitions/Legs"}}}},"ApplePay":{"type":"object","required":["cryptogram","dpan","eci","expiry_month","expiry_year"],"properties":{"cryptogram":{"type":"string","description":"Applepay online payment cryptogram for 3d secure which maps to the paymentData.onlinePaymentCryptogram property in the encrypted payment data."},"expiry_month":{"type":"string","description":"Card expiry month. A string representing the month, valid values are 01 to 12. Maps to the applicationExpirationDate property in the encrypted payment data. Need to send only Month from the received data."},"expiry_year":{"type":"string","description":"Card expiry year. A string representing the last two digits of the year, e.g. 19 for 2019. Maps to the applicationExpirationDate property in the encrypted payment data. Need to send only Year from the received data."},"dpan":{"type":"string","description":"Device specific PAN - Maps to the applicationPrimaryAccountNumber property in the encrypted payment data."},"eci":{"type":"string","description":"Electronic Commerce Indicator - Maps to the paymentData.eciIndicator property in the encrypted payment data."},"applepay_transaction_id":{"type":"string","description":"Applepay Transaction id received from applepay."}}},"AuthorizePaymentRequestDTO":{"type":"object","properties":{"afterpay":{"$ref":"#/definitions/AfterPayRequestDto"},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"capture_now":{"type":"string","description":"True will auto-capture the transaction. False will only authorise the transaction."},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"card":{"description":"The new card number, also known as PAN.","$ref":"#/definitions/Card"},"customer":{"description":"customer","$ref":"#/definitions/customer"},"customer_ip":{"type":"string","description":"The IP address of the customer"},"recurring_type":{"type":"string","description":"This field is to be used only when a transaction is part of a series of recurring transactions. If it's the initial transaction, set the value to 'first', and if it's not, set it to 'recurring'. This field must not be included in transactions that will not be part of a series of repeated transactions. (All values are written in lowercase letters). Valid Values: first, recurring and oneclick"},"user_agent":{"type":"string","description":"The full user agent string of the device the customer used to submit the transaction"},"fraud_predictions":{"type":"array","items":{"$ref":"#/definitions/FraudPredictionsDto"}},"webhook_transaction_update":{"type":"string","description":"A webhook url that is called when a transaction is updated. Note: This overrides any URL set on the account"},"fraud_prediction":{"type":"array","items":{"$ref":"#/definitions/FraudPredictionsDto"}},"billing_address":{"description":"Billing address details for the customer","$ref":"#/definitions/BillingAddress"},"delivery_address":{"description":"Some fields may be mandatory for certain acquirers. Please speak to your Implementation Manager for further information.","$ref":"#/definitions/BillingAddress"},"duplicate_check":{"type":"string","description":"This indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"external_risk_data":{"$ref":"#/definitions/ExternalRiskDataDTO"},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer.","enum":["ecommerce","pos","moto","unknown"]},"three_ds":{"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used.","$ref":"#/definitions/ThreeDsDto"},"airline_data":{"description":"airlineData","$ref":"#/definitions/airlineData"},"timestamp":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"external_authentication":{"$ref":"#/definitions/ExternalAuthenticationDto"},"encryptedPayload":{"type":"string","description":"Encrypted request body with encrypted key passed in header. This field will contain the encryption data of all the fields from the cardPayRequest above and will be processed only when encrypted key is passed in header."},"tra_exemption":{"type":"string","description":"\"This indicates that exemption from SCA is requested for the transaction. Valid values as mentioned below:\n\n \"\"external\"\" - Transaction risk analysis conducted by approved external source\n\n \"\"acquirer\"\" - Transaction risk analysis conducted by the acquirer\n\n \"\"scp\"\" - scp stands for Secure Corporate Payment\n\n \"\"lvp\"\" - lvp stands for Low-Value Payment\n\n \"\"delegated\"\" - Exemption indicator for delegated authentication.\n\n This flag specifies whether the transaction is exempt from strong customer authentication (SCA) requirements in Europe because the authentication was delegated to a different provider, such as an acquirer or payment technology provider (PTP).\""},"original_transaction_id":{"type":"string","description":"The id of original transaction."},"dragon_pay_oct_request":{"$ref":"#/definitions/DragonPayOctRequest"},"merchant_data":{"$ref":"#/definitions/MerchantData"}}},"BNPL":{"type":"object","required":["payment_method"],"properties":{"payment_method":{"type":"string","description":"Name of the BNPL provider request is to be sent to.\r\n"},"payment_type":{"type":"string","description":"Specifies the repayment plan type for providers which offer multiple options.","enum":["installment","invoice","Direct Debit"]},"payment_type_data":{"type":"array","items":{"$ref":"#/definitions/PaymentTypeData"}}}},"BNPLOrderRequest":{"type":"object","required":["amount","billing_address","bnpl","capture_now","currency","customer","items","merchant_reference","net_amount","organisation"],"properties":{"organisation":{"type":"string","description":"The ID of the Organisation. Must be submitted along with currency."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed.  A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"amount":{"type":"integer","format":"int32","description":"Total gross amount of order charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details.. Must match the total of all order items\""},"net_amount":{"type":"integer","format":"int32","description":"Total net amount of order charged without a decimal place."},"capture_now":{"type":"string","description":"True will auto-capture the transaction. False will only authorise the transaction","enum":["true","false"]},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show against the customers order"},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"locale":{"type":"string","description":"Language UTF-8 locale code. e.g. en_GB and en_US"},"customer_ip":{"type":"string","description":"The IP address of the customer"},"user_agent":{"type":"string","description":"The full user agent string of the device the customer used to submit the transaction"},"webhook_transaction_update":{"type":"string","description":"A webhook url that is called when a transaction is updated. Note: This overrides any URL set on the account"},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer.","enum":["ecommerce","pos","unknown"]},"bnpl":{"description":"Buy Now Pay Later provider details","$ref":"#/definitions/BNPL"},"redirect_urls":{"description":"Redirection URL details","$ref":"#/definitions/RedirectUrls"},"items":{"type":"array","items":{"$ref":"#/definitions/Items"}},"customer":{"description":"Customer details","$ref":"#/definitions/Customer"},"billing_address":{"description":"Billing address details of customer.","$ref":"#/definitions/BillingAddress"},"delivery_address":{"description":"Delivery address for the order","$ref":"#/definitions/DeliveryAddress"},"risk_data":{"description":"Risk Data","$ref":"#/definitions/RiskData"},"airline_data":{"description":"Airline Data","$ref":"#/definitions/AirlineData"},"travel_data":{"description":"Travel data - data relating to hotel bookings, cruise/trip details/car rental/accomodation rental","$ref":"#/definitions/TravelData"},"duplicate_check":{"type":"string","description":"This indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours.","enum":["true","false"]}}},"BNPLOrderResponse":{"type":"object","properties":{"payment_flow":{"type":"string","description":"The type of integration with the BNPL provider, i.e. server to server or URL redirect to provider login page","enum":["direct","redirect"]},"reason_code":{"type":"string","description":"An authorisation code assigned by the processing platform."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"},"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation":{"type":"string","description":"The ID of the Organisation. Must be submitted along with currency."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed.  A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"amount":{"type":"integer","format":"int32","description":"Total gross amount of order charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details.. Must match the total of all order items"},"net_amount":{"type":"integer","format":"int32","description":"Total net amount of order charged without a decimal place."},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show against the customers order"},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction"},"locale":{"type":"string","description":"Language UTF-8 locale code. e.g. en_GB and en_US"},"customer_ip":{"type":"string","description":"The IP address of the customer"},"user_agent":{"type":"string","description":"The full user agent string of the device the customer used to submit the transaction"},"webhook_transaction_update":{"type":"string","description":"A webhook url that is called when a transaction is updated. Note: This overrides any URL set on the account"},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer.","enum":["ecommerce","pos","unknown"]},"status":{"type":"string","description":"Status of the transaction.","enum":["AUTHORISED","CAPTURED","DECLINED"]},"bnpl":{"description":"Buy Now Pay Later provider details","$ref":"#/definitions/BNPL_"},"items":{"type":"array","items":{"$ref":"#/definitions/Items_"}},"customer":{"description":"Customer Details","$ref":"#/definitions/Customer_"},"billing_address":{"description":"Billing address details for the customer","$ref":"#/definitions/Billing_Address"},"delivery_address":{"description":"Delivery address for the order","$ref":"#/definitions/DeliveryAddress"},"risk_data":{"description":"Risk Data","$ref":"#/definitions/Risk_Data"},"airline_data":{"description":"Airline Data","$ref":"#/definitions/AirlineData"},"travel_data":{"description":"Travel data - data relating to hotel bookings, cruise/trip details/car rental/accomodation rental","$ref":"#/definitions/TravelData"},"errors":{"type":"array","description":"Gateway Errors","items":{"$ref":"#/definitions/PspErrorDto"}},"duplicate_check":{"type":"string","description":" This indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already ","enum":["true","false"]},"created_at":{"type":"string","description":"The time at which the transaction was created"},"last_status_update":{"type":"string","description":"The last time when the status of the transaction was updated"},"trace_id":{"type":"string","description":"Transaction log ID"}}},"BNPL_":{"type":"object","properties":{"payment_method":{"type":"string","description":"Name of the BNPL provider.\r\n"},"payment_type":{"type":"string","description":"Specifies the repayment plan type for providers which offer multiple options.","enum":["installment","invoice","Direct Debit"]},"payment_type_data":{"type":"array","items":{"$ref":"#/definitions/PaymentTypeData"}}}},"BaseResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"BasicCardDetail":{"type":"object","required":["card_number","expiry_month","expiry_year"],"properties":{"card_number":{"type":"string","description":"The new card number, also known as PAN."},"expiry_month":{"type":"string","description":"Card expiry month. A string representing the month, valid values are 01 to 12."},"expiry_year":{"type":"string","description":"Card expiry year. A string representing the last two digits of the year, e.g. 19 for 2019."}}},"BillingAddress":{"type":"object","properties":{"first_name":{"type":"string","description":"First name of the card holder."},"last_name":{"type":"string","description":"Last name of the card holder."},"email":{"type":"string","description":"Email address of the card holder.\n\nNote: Only alphabets, numeric, @, comma(,) dot(.), plus(+), underscore(_), dash(-) and apostrophe(â€˜)"},"address":{"type":"string","description":"Street address of the card holder."},"city":{"type":"string","description":"City of the card holder."},"state":{"type":"string","description":"A region / state / province for the address."},"postal_code":{"type":"string","description":"A postal code for the address.\n\nNote: Only alpha-numeric characters, Special characters allowed are hyphen(-) and spaces."},"country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address. \n\nNote: Alphabets upto two characters (e.g. GB, RU etc..)"},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n\nNote: Length - min(3) & max(20)"}}},"Billing_Address":{"type":"object","properties":{"first_name":{"type":"string","description":"First name of the customer."},"last_name":{"type":"string","description":"Last name of the customer."},"address":{"type":"string","description":"Street address of the customer."},"address2":{"type":"string","description":"Address details of customer"},"city":{"type":"string","description":"City of the customer."},"state":{"type":"string","description":"A region / state / province for the address."},"postal_code":{"type":"string","description":"A postal/zip code for the address. Note: Only alpha-numeric characters, Special characters allowed are hyphen(-) and spaces."},"country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address. \n\nNote: Alphabets upto two characters (e.g. GB, RU etc..)"},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n\nNote: Length - min(3) & max(20)"}}},"BinIssuer":{"type":"object","properties":{"country":{"type":"string","description":"Country name of the issuance."},"country_alpha2":{"type":"string","description":"Two-letter ISO country code identifying the country of issuance."},"country_alpha3":{"type":"string","description":"Three-letter ISO country code identifying the country of issuance."},"country_numeric":{"type":"string","description":"Issuer country code number."},"name":{"type":"string","description":"Bank name of the issuance."}}},"BinIssuerCountryDTO":{"type":"object","properties":{"alpha2":{"type":"string","description":"Two-letter ISO country code identifying the country of issuance."},"alpha3":{"type":"string","description":"Three-letter ISO country code identifying the country of issuance."},"name":{"type":"string","description":"Country name of the issuance."},"numeric":{"type":"string","description":"Issuer country code number."}}},"BinResponseDTO":{"type":"object","properties":{"bin_number":{"type":"integer","format":"int32","description":"First 6 digits of a card number (BIN/IIN)"},"brand":{"type":"string","description":"Brand of the card e.g. classic, standard."},"issuer":{"type":"string","description":"Bank name of the issuance."},"issuer_country":{"$ref":"#/definitions/BinIssuerCountryDTO"},"scheme":{"type":"string","description":"The card Scheme e.g. MasterCard, Visa or Maestro."},"type":{"type":"string","description":"Funding type of the card e.g. Debit, Credit."},"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"BuyerHistoryDTO":{"type":"object","properties":{"customer_account":{"description":"CustomerAccount","$ref":"#/definitions/CustomerAccountDTO"},"account_history":{"description":"AccountHistory","$ref":"#/definitions/AccountHistoryDTO"},"account_purchases":{"type":"string","description":"Number of purchases with this cardholder account during the previous six months. Recommended for Discover ProtectBuy."},"add_card_attempts":{"type":"string","description":"Number of add card attempts in the last 24 hours. Recommended for Discover ProtectBuy."},"prior_suspicious_activity":{"type":"string","description":"Indicates whether the merchant experienced suspicious activity (including previous fraud) on the account. Recommended for Discover ProtectBuy."},"payment_account_history":{"type":"string","description":"This only applies for NEW_ACCOUNT and EXISTING_ACCOUNT in creationHistory. Possible values are: PAYMENT_ACCOUNT_EXISTS PAYMENT_ACCOUNT_ADDED_NOW"},"payment_account_date":{"type":"string","description":"Date applicable only for PAYMENT_ACCOUNT_EXISTS in paymentAccountHistory"},"transaction_count_day":{"type":"string","description":"Number of transaction (successful or abandoned) for this cardholder account within the last 24 hours. Recommended for Discover ProtectBuy."},"transaction_count_year":{"type":"string","description":"Number of transaction (successful or abandoned) for this cardholder account within the last year. Recommended for Discover ProtectBuy."}}},"CampaignDto":{"type":"object","properties":{"campaignNumber":{"type":"integer","format":"int64","description":"Campaign number"}}},"CancelCaptureRequestRedocDTO":{"type":"object","properties":{"cancel_capture_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per capture."},"cancel_time":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"duplicate_check":{"type":"string","description":"Only supported by some acquirers.\n\nThis indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"cancel_refund_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per refund."},"net_amount":{"type":"integer","format":"int64","description":"Only supported by some acquirers.\n\nTotal net amount of order."},"gross_amount":{"type":"string","description":"Only supported by some acquirers.\n\nTotal gross amount of order. Must match the grossUnitPrice * quantity of order items"},"items":{"type":"array","description":"Only supported by some acquirers.","items":{"$ref":"#/definitions/ItemsDetailsDto"}}}},"CancelRefundRequestRedocDTO":{"type":"object","properties":{"cancel_refund_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per refund."},"cancel_time":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"duplicate_check":{"type":"string","description":"Only supported by some acquirers.\n\nThis indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"cancel_capture_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per capture."},"net_amount":{"type":"integer","format":"int64","description":"Only supported by some acquirers.\n\nTotal net amount of order."},"gross_amount":{"type":"string","description":"Only supported by some acquirers.\n\nTotal gross amount of order. Must match the grossUnitPrice * quantity of order items"},"items":{"type":"array","description":"Only supported by some acquirers.","items":{"$ref":"#/definitions/ItemsDetailsDto"}}}},"CancelRequestDTO":{"type":"object","properties":{"cancel_reference":{"type":"string","description":"Only supported by some acquirers.\n\nA reference specified by the merchant to identify the cancel. This field must be unique per cancel."},"cancel_time":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"duplicate_check":{"type":"string","description":"Only supported by some acquirers.\n\nThis indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"cancel_capture_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per capture."},"cancel_refund_reference":{"type":"string","description":"A reference specified by the merchant to identify the cancel. This field must be unique per refund."},"net_amount":{"type":"integer","format":"int64","description":"Only supported by some acquirers.\n\nTotal net amount of order."},"gross_amount":{"type":"string","description":"Only supported by some acquirers.\n\nTotal gross amount of order. Must match the grossUnitPrice * quantity of order items"},"items":{"type":"array","description":"Only supported by some acquirers.","items":{"$ref":"#/definitions/ItemsDetailsDto"}}}},"CancelResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"authorization_code":{"type":"string","description":"An authorisation code assigned by the processing platform"},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"created_at":{"type":"string","description":"The time at which the transaction was created"},"cancelled_amount":{"type":"number","description":"Total amount cancelled"},"captured_amount":{"type":"number","description":"Total amount captured"},"authorized_amount":{"type":"number","description":"Total amount authorised"},"last_status_update":{"type":"string","description":"The last time when the status of the transaction was updated"},"psp_info":{"description":"PSP Information.","$ref":"#/definitions/PspInformationDto"},"reason_code":{"type":"string","description":"A reason code assigned by the acquiring platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"},"status":{"type":"string","description":"Status of the transaction.","enum":["AUTHORISED","CAPTURED","DECLINED"]},"acquirer_name":{"type":"string","description":"The name of the acquirer as setup within the APEXX payment gateway."},"request_id":{"type":"string","description":"Unique Id for each request."},"duplicate_check":{"type":"string","description":"This is the duplicate check of request, 'true' in case of request is duplicate"},"response_code":{"type":"string","description":"Response code is sent only when the source of the response looks suspicious. In this case Apexx immediately cancels the transaction placed with the gateway."},"response_message":{"type":"string","description":"A description of the response_code."}}},"CaptureRequestDTO":{"type":"object","properties":{"amount":{"type":"number","description":"The amount to be captured."},"capture_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction"},"invoice_number":{"type":"string","description":"Only supported by some acquirers.\n\nInvoice number of the ticket."},"final_capture":{"type":"string","description":"Indicates whether you can make additional captures against the authorised payment. Set to true if you do not intend to capture additional payments against the authorisation. Set to false if you intend to capture additional payments against the authorisation."},"duplicate_check":{"type":"string","description":"Only supported by some acquirers.\n\nThis indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"net_amount":{"type":"integer","format":"int64","description":"Only supported by some acquirers.\n\nTotal net amount of order."},"override_merchant_reference":{"type":"boolean","example":false,"description":"Only supported by some acquirers.\n\nTrue will update the merchant reference of the original transaction. False will keep the merchant reference as it is."},"gross_amount":{"type":"string","description":"Only supported by some acquirers.\n\nTotal gross amount of order. Must match the grossUnitPrice * quantity of order items"},"items":{"type":"array","description":"Only supported by some acquirers.","items":{"$ref":"#/definitions/ItemsDetailsDto"}}}},"CaptureResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"authorization_code":{"type":"string","description":"An authorisation code assigned by the processing platform"},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"created_at":{"type":"string","description":"The time at which the transaction was created"},"captured_amount":{"type":"number","description":"Total amount captured"},"authorized_amount":{"type":"number","description":"Total amount authorised"},"last_status_update":{"type":"string","description":"The last time when the status of the transaction was updated"},"remaining_authorized_amount":{"type":"number","description":"Total authorised remaining amount of order."},"capture_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction"},"invoice_number":{"type":"string","description":"Invoice number of the ticket."},"final_capture":{"type":"string","description":"Indicates whether you can make additional captures against the authorised payment. Set to true if you do not intend to capture additional payments against the authorisation. Set to false if you intend to capture additional payments against the authorisation."},"psp_info":{"description":"PSP Information.","$ref":"#/definitions/PspInformationDto"},"reason_code":{"type":"string","description":"A reason code assigned by the acquiring platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"},"status":{"type":"string","description":"Status of the transaction.","enum":["AUTHORISED","CAPTURED","DECLINED"]},"acquirer_name":{"type":"string","description":"The name of the acquirer as setup within the APEXX payment gateway."},"request_id":{"type":"string","description":"Unique Id for each request."},"duplicate_check":{"type":"string","description":"This is the duplicate check of request, 'true' in case of request is duplicate"},"response_code":{"type":"string","description":"Response code is sent only when the source of the response looks suspicious. In this case Apexx immediately cancels the transaction placed with the gateway."},"response_message":{"type":"string","description":"A description of the response_code."}}},"Card":{"type":"object","properties":{"scheme_data":{"type":"string"},"card_holder_name":{"type":"string","description":"Name of the card holder as printed on the card."},"card_number":{"type":"string","description":"The new card number, also known as PAN."},"cvv":{"type":"string","description":"The Card Verification Value. Note: CVV is not required when transaction is a recurring or oneclick transaction."},"expiry_month":{"type":"string","description":"Card expiry month. A string representing the month, valid values are 01 to 12."},"expiry_year":{"type":"string","description":"Card expiry year. A string representing the last two digits of the year, e.g. 19 for 2019."},"token":{"type":"string","description":"The token representing the payment card."},"create_token":{"type":"string","description":"Whether to create a token or not for the card. Defaults to 'false'. Setting it to 'true' will create the token for the card."},"encrypted_data":{"type":"string","description":"This field will contain the encryption data of card_number, expiry_month, expiry_year and cvv fields. Encryption data generated by client-side-encryption SDK."},"bin_number":{"type":"integer","format":"int32","description":"First 6 digits of a card number (BIN/IIN)"},"type":{"type":"string","description":"Funding type of the card e.g. Debit, Credit"},"brand_name":{"type":"string","description":"Brand of the card e.g. classic, standard"},"scheme_name":{"type":"string","description":"The card Scheme e.g. MasterCard, Visa or Maestro."},"issuer_name_cle":{"type":"string","description":"Bank name of the issuance."},"token_data":{"description":"Token Details","$ref":"#/definitions/Token"},"googlepay":{"$ref":"#/definitions/GooglePay"},"applepay":{"$ref":"#/definitions/ApplePay"},"scheme_transaction_id":{"type":"string","description":"The unique scheme transaction Id for this transaction. This value is returned for Customer Initiated transaction."},"initial_scheme_transaction_id":{"type":"string","description":"The unique scheme transaction Id returned during customer initiated transaction. This value will be required when recurring_type is \"mit\""},"issuer":{"$ref":"#/definitions/BinIssuer"}}},"ClientReferenceInformationDTO":{"type":"object","properties":{"code":{"type":"string"}}},"ConsumerAuthenticationInformationDTO":{"type":"object","properties":{"token":{"type":"string"}}},"Create an order with the BNPL provider. This provides a single interface for all BNPL providers. In all cases Organisation and Currency is required":{"type":"object","properties":{"payment_flow":{"type":"string","description":"The type of integration with the BNPL provider, i.e. server to server or URL redirect to provider login page","enum":["direct","redirect"]},"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation":{"type":"string","description":"The ID of the Organisation. Must be submitted along with currency."},"url":{"type":"string","description":"Redirection URL details"},"created_at":{"type":"string","description":"The time at which the transaction was created"},"trace_id":{"type":"string","description":"Transaction log ID"}}},"CreateTokenRequest":{"type":"object","required":["card","organisation_id"],"properties":{"organisation_id":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"encryptedPayload":{"type":"string","description":"Encrypted Card details. Required when card details are encrypted"},"card":{"description":"This class holds basic card details(card number,expiry month and expiry year)","$ref":"#/definitions/BasicCardDetail"},"billing_address":{"description":"Some fields may be mandatory for certain acquirers. Please speak to your Implementation Manager for further information.","$ref":"#/definitions/BillingAddress"}}},"CreateTokenResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"token":{"type":"string","description":"Card Token genreated for given card details"},"card":{"description":"This class holds basic card details(card number,expiry month and expiry year)","$ref":"#/definitions/BasicCardDetail"},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"Customer":{"type":"object","required":["email","phone"],"properties":{"customer_identification_number":{"type":"string","description":"Identification number associated to the identification type specified"},"identification_type":{"type":"string","description":"Identification type referenced above.","enum":["SSN","passport","driverslicense","idcard"]},"email":{"type":"string","description":"Email address of the customer \n \n Note: Only alphabets, numeric, @, comma(,) dot(.), plus(+), underscore(_), dash(-) and apostrophe(‘)"},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n \n Note: Length - min(3) & max(20)"},"salutation":{"type":"string","description":"Salutation of the customer e.g. \"Mr\", \"Mrs\", \"Dr\" etc"},"type":{"type":"string","description":"Type of customer. Customer category","enum":["company","person"]},"date_of_birth":{"type":"string","description":"The date of birth of a customer, 10 characters, ISO-8601 (YYYY-MM-DD)."},"customer_number":{"type":"string","description":"This is the customer's account number."},"gender":{"type":"string","description":"The gender of the customer","enum":["male","female","other","prefer not to say"]},"employment_type":{"type":"string","description":"The employment type of the customer","enum":["fulltime","parttime","contractor","student","retired","unemployed","other"]},"residential_status":{"type":"string","description":"Customer residential satus","enum":["homeowner","tenant","livingwithparents"]}}},"CustomerAccountDTO":{"type":"object","properties":{"last_change_date":{"type":"string","description":"Date the cardholder’s account was last changed. This includes changes to the billing or shipping address, new payment accounts or new users added. Recommended for Discover ProtectBuy."},"creation_history":{"type":"string","description":"The values from the enum can be: GUEST NEW_ACCOUNT EXISTING_ACCOUNT"},"modification_history":{"type":"string","description":"This field is applicable only in case of EXISTING_ACCOUNT in creationHistory. Possible values: ACCOUNT_UPDATED_NOW ACCOUNT_UPDATED_PAST"},"password_history":{"type":"string","description":"This only applies for EXISTING_ACCOUNT in creationHistory. The values from the enum can be: PASSWORD_CHANGED_NOW PASSWORD_CHANGED_PAST PASSWORD_NEVER_CHANGED"},"create_date":{"type":"string","description":"Date the cardholder opened the account. Recommended for Discover ProtectBuy. This only applies for EXISTING_ACCOUNT in creationHistory."},"password_change_date":{"type":"string","description":"Date the cardholder last changed or reset password on account. Recommended for Discover ProtectBuy. This only applies for PASSWORD_CHANGED_PAST in passwordHistory."}}},"CustomerDto":{"type":"object","required":["type"],"properties":{"customer_identification_number":{"type":"string","description":"National ID number (if the customer is a physical person). Registration number (if the customer is a company)."},"email":{"type":"string","description":"Email address of the customer\n\nNote: Only alphabets, numeric, @, comma(,) dot(.), plus(+), underscore(_), dash(-) and apostrophe(‘)"},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n\nNote: Length - min(3) & max(20)"},"salutation":{"type":"string","description":"Salutation of the customer","enum":["Mr","Mrs","Miss"]},"type":{"type":"string","description":"Type of the customer. Customer category."},"care_of":{"type":"string","description":"Care of. Intermediary who is responsible for transferring a piece of mail between the postal system and the final addressee. For example Jane c/o John (“Jane at John's address”). This field has to be used for company, authority and organization names as well - e. g. \"Sportverein Blau-Weiß e.V."},"date_of_birth":{"type":"string","description":"The date of birth of a customer, 10 characters, ISO-8601 (YYYY-MM-DD)."},"customer_number":{"type":"string","description":"This is the customer's account number."}}},"Customer_":{"type":"object","properties":{"customer_identification_number":{"type":"string","description":"Identification number associated to the identification type specified"},"identification_type":{"type":"string","description":"Identification type referenced above.","enum":["SSN","passport","driverslicense","idcard"]},"email":{"type":"string","description":"Email address of the customer \n \n Note: Only alphabets, numeric, @, comma(,) dot(.), plus(+), underscore(_), dash(-) and apostrophe(‘)"},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n \n Note: Length - min(3) & max(20)"},"salutation":{"type":"string","description":"Salutation of the customer e.g. \"Mr\", \"Mrs\", \"Dr\" etc"},"type":{"type":"string","description":"Type of customer. Customer category","enum":["company","person"]},"date_of_birth":{"type":"string","description":"The date of birth of a customer, 10 characters, ISO-8601 (YYYY-MM-DD)."},"customer_number":{"type":"string","description":"This is the customer's account number."},"gender":{"type":"string","description":"The gender of the customer","enum":["male","female","other","prefer not to say"]},"employment_type":{"type":"string","description":"The employment type of the customer","enum":["fulltime","parttime","contractor","student","retired","unemployed","other"]},"residential_status":{"type":"string","description":"Customer residential satus","enum":["homeowner","tenant","livingwithparents"]}}},"CyberSourceDecisionManagerRequestDTO":{"type":"object","properties":{"device_information":{"description":"deviceInformation","$ref":"#/definitions/DeviceInformationDTO"},"risk_information":{"description":"riskInformation","$ref":"#/definitions/RiskInformationDTO"},"merchant_defined_information":{"type":"array","description":"merchantDefinedInformation","items":{"$ref":"#/definitions/MerchantDefinedInformationDTO"}}}},"CyberSourceDecisionManagerResponseDTO":{"type":"object","properties":{"clientReferenceInformation":{"$ref":"#/definitions/ClientReferenceInformationDTO"},"consumerAuthenticationInformation":{"$ref":"#/definitions/ConsumerAuthenticationInformationDTO"},"id":{"type":"string"},"paymentInformation":{"$ref":"#/definitions/PaymentInformationResponseDTO"},"riskInformation":{"$ref":"#/definitions/RiskInformationResponseDTO"},"status":{"type":"string"},"submitTimeUtc":{"type":"string"}}},"DeleteTokenResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"token":{"type":"string","description":" "},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"DeliveryAddress":{"type":"object","properties":{"first_name":{"type":"string","description":"First name of the recipient."},"last_name":{"type":"string","description":"Last name of the recipient."},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n\nNote: Length - min(3) & max(20)"},"salutation":{"type":"string","description":"Salutation of the customer e.g. \"Mr\", \"Mrs\", \"Dr\" etc."},"type":{"type":"string","description":"Type of the customer. Customer category.","enum":["company","person"]},"care_of":{"type":"string","description":"Care of. Intermediary who is responsible for transferring a piece of mail between the postal system and the final addressee. For example Jane c/o John (“Jane at John's address”). This field has to be used for company, authority and organization names as well - e. g. \"Sportverein Blau-Weiß e.V."},"address":{"type":"string","description":"Street address of the delivery."},"address2":{"type":"string","description":"Address details of the delivery."},"city":{"type":"string","description":"City of the delivery customer."},"state":{"type":"string","description":"A region / state / province for the address."},"postal_code":{"type":"string","description":"A postal/zip code for the address. Note: Only alpha-numeric characters, Special characters allowed are hyphen(-) and spaces."},"country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address. \n\nNote: Alphabets upto two characters (e.g. GB, RU etc..)"},"method":{"type":"string","description":"The way the order is being delivered","enum":["delivery","collection","email"]}}},"DeliveryCustomerDto":{"type":"object","required":["type"],"properties":{"first_name":{"type":"string","description":"First name of the delivery customer."},"last_name":{"type":"string","description":"The last name(s) of recipient's."},"phone":{"type":"string","description":"Numbers only, no dash or any other separator.\n\nNote: Length - min(3) & max(20)"},"salutation":{"type":"string","description":"Salutation of the customer"},"type":{"type":"string","description":"Type of the customer. Customer category."},"care_of":{"type":"string","description":"Care of. Intermediary who is responsible for transferring a piece of mail between the postal system and the final addressee. For example Jane c/o John (“Jane at John's address”). This field has to be used for company, authority and organization names as well - e. g. \"Sportverein Blau-Weiß e.V."},"address":{"type":"string","description":"Street address of the delivery customer."},"city":{"type":"string","description":"City of the delivery customer"},"postal_code":{"type":"string","description":"This is the recipient's postcode/zip.\n\nNote: Only alpha-numeric characters, Special characters allowed are hyphen(-) and single space"},"country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address.\n\nNote: Alphabets upto two characters (e.g. GB, RU etc.."}}},"DetailedStatsDTO":{"type":"object","properties":{"total_blacklist_rules_fired":{"type":"integer","format":"int32"},"total_blacklist_rules_fired_in_hierarchy":{"type":"integer","format":"int32"},"total_rules_fired_in_hierarchy":{"type":"integer","format":"int32"},"total_whitelist_rules_fired":{"type":"integer","format":"int32"},"total_whitelist_rules_fired_in_hierarchy":{"type":"integer","format":"int32"}}},"DeviceInformationDTO":{"type":"object","properties":{"cookies_accepted":{"type":"string","description":"Whether the customer’s browser accepts cookies.","enum":["True","False"]},"host_name":{"type":"string","description":"DNS resolved hostname from ipAddress."},"http_browser_email":{"type":"string","description":"Email address set in the customer’s browser, which may differ from customer email"},"http_accept_browser_value":{"type":"string","description":"Value of the Accept header sent by the customer’s web browser. Note If the customer’s browser provides a value, you must include it in your request."},"http_accept_content":{"type":"string","description":"The exact content of the HTTP accept header."},"http_accept_language":{"type":"string","description":"Value represents the browser language as defined in IETF BCP47. Example:en-US"},"http_java_enabled":{"type":"string","description":"A Boolean value that represents the ability of the cardholder browser to execute Java. Value is returned from the navigator.javaEnabled property.","enum":["True","False"]},"http_java_script_enabled":{"type":"string","description":"A Boolean value that represents the ability of the cardholder browser to execute JavaScript. Note: Merchants should be able to know the values from fingerprint details of cardholder's browser.","enum":["True","False"]},"http_color_depth":{"type":"string","description":"Value represents the bit depth of the color palette for displaying images, in bits per pixel. Example : 24"},"http_screen_height":{"type":"string","description":"Total height of the Cardholder's scree in pixels. Example: 864."},"http_screen_width":{"type":"string","description":"Total width of the cardholder's screen in pixels. Example: 1536."},"http_time_difference":{"type":"string","description":"Time difference between UTC time and the cardholder browser local time, in minutes. Example:300"},"user_agent_browser_value":{"type":"string","description":"Value of the User-Agent header sent by the customer’s web browser. Note If the customer’s browser provides a value, you must include it in your request."}}},"DirectDebitDto":{"type":"object","properties":{"bankAccount":{"type":"string","description":"Direct debit bank account"},"bankCode":{"type":"string","description":"Direct debit swift, BIC, SortCode"}}},"DragonPayOctRequest":{"type":"object","properties":{"proc_id":{"type":"string","description":"Preferred payment channel","enum":["BAYD","BDO","CC","CEBL","DPAY","ECPY","GCSH","LBC","PYPL","MLH","RDS","SMR","711"]},"username":{"type":"string","description":"Account name."}}},"ErrorDTO":{"type":"object","properties":{"error_code":{"type":"integer","format":"int32","description":"Error Code"},"property":{"type":"string","description":"Property on which error occurs. e.g : it can be class name , field name"},"error_message":{"type":"string","description":"Error message"}}},"ExternalAuthentication":{"type":"object","required":["3ds_status","3ds_version","cavv","eci"],"properties":{"cavv":{"type":"string","description":"3-D Secure \"Cardholder Authentication Verification Value\"."},"cavv_algorithm":{"type":"string","description":"3-D Secure \"Cardholder Authentication Verification Value\" algorithm(0-9)."},"3ds_status":{"type":"string","description":"3-D Secure status:\r\n\n y = authentication successful\r\n\n n = not authenticated\r\n\n u = authentication unavailable\r\n\n a = authentication attempted\r\n\n r = authentication rejected"},"eci":{"type":"string","description":"The Electronic Commerce Indicator (ECI)."},"3ds_enrolled":{"type":"string","description":"Card's enrollment status."},"directory_server_transaction_id":{"type":"string","description":"The 3-D Secure Directory Server transaction ID that is used for the 3D Authentication.\n\n**Note:** This field is required when 3ds 2.0 is used."},"3ds_transaction_status_reason":{"type":"string","description":"3-D Secure out of scope reason. Shall be used if the transaction type is out of scope of Strong Customer Authentication (SCA). The following transaction types are out of scope of SCA:\r\n\n mit Merchant Initiated Transactions\r\n\n moto Mail Order/Telephone Order\r\n\n one_leg_out\r\n\n anonymous_prepaid_card"},"3ds_score":{"type":"string","description":"CB scoring. Mandatory for CB transactions."},"3ds_preference":{"type":"string","description":"3DS Requestor Challenge Indicator. Mandatory for CB.\r\n\n Acccepted values:\r\n\n  sca ask for a strong authentication;\r\n\n frictionless ask for a frictionless authentication;\r\n\n nopref or absent, the decision will be made by Dalenys;\r\n\n scamandate strong authentication required by regulation"},"3ds_mode":{"type":"string","description":"Applied authentification mode:\r\n sca Strong authentication;\r\n frictionless Frictionless authentication;"},"3ds_version":{"type":"string","description":"The 3-D Secure version used for the authentication."},"3ds_result":{"type":"string","description":"6 character value composed of 3DSECURESTATUS converted to hexadecimal concatenated with the result VRes converted to hexadecimal"},"3ds_server_transaction_id":{"type":"string","description":"The 3-D Secure Server transaction ID that is used for the 3-D Secure version 2 Authentication."}}},"ExternalAuthenticationDto":{"type":"object","properties":{"xid":{"type":"string","description":"3-D Secure X id."},"cavv":{"type":"string","description":"3-D Secure \"Cardholder Authentication Verification Value.\""},"cavv_algorithm":{"type":"string","description":"3-D Secure \"Cardholder Authentication Verification Value\" algorithm(0-9)."},"3ds_status":{"type":"string","description":"3-D Secure status:\n\ny = authentication successful\n\nn = not authenticated\n\nu = authentication unavailable\n\na = authentication attempted\n\nr = authentication rejected"},"eci":{"type":"string","description":"The Electronic Commerce Indicator (ECI)."},"3ds_enrolled":{"type":"string","description":"Card’s enrollment status.\n\nNote: This field is required by certain acquirers, please ask your implementation manager for details."},"directory_server_transaction_id":{"type":"string","description":"The 3-D Secure Directory Server transaction ID that is used for the 3D Authentication.\n\nNote: This field is required when 3ds 2.0 is used."},"3ds_transaction_status_reason":{"type":"string","description":"3-D Secure out of scope reason. Shall be used if the transaction type is out of scope of Strong Customer Authentication (SCA). The following transaction types are out of scope of SCA:\n\nmit Merchant Initiated Transactions\n\nmoto Mail Order/Telephone Order\n\none_leg_out\n\nanonymous_prepaid_card"},"3ds_score":{"type":"string","description":"CB scoring. Mandatory for CB transactions."},"3ds_preference":{"type":"string","description":"3DS Requestor Challenge Indicator. Mandatory for CB.\n\nAcccepted values:\n\nsca ask for a strong authentication;\n\nfrictionless ask for a frictionless authentication;\n\nnopref or absent, the decision will be made by Dalenys;\n\nscamandate strong authentication required by regulation"},"3ds_mode":{"type":"string","description":"Applied authentification mode: sca Strong authentication; frictionless Frictionless authentication"},"3ds_version":{"type":"string","description":"The 3-D Secure version used for the authentication."},"3ds_result":{"type":"string","description":"6 character value composed of 3DSECURESTATUS converted to hexadecimal concatenated with the result VRes converted to hexadecimal"},"3ds_server_transaction_id":{"type":"string","description":"The 3-D Secure Server transaction ID that is used for the 3-D Secure version 2 Authentication."}}},"ExternalRiskDataDTO":{"type":"object","required":["session_id"],"properties":{"session_id":{"type":"string","description":"Session ID of the transaction. This session id can be used to obtain device fingerprint information. You can use any id that you are already generating, such as an order number or web session ID."},"provider":{"type":"string","description":"Third party provider for the risk check."},"cs_dm":{"description":"CybersourceDecisionManagerRequest","$ref":"#/definitions/CyberSourceDecisionManagerRequestDTO"}}},"FailureResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"details":{"type":"string","description":"Optional details concerning the error."},"errors":{"type":"array","description":"Details of each error occured.","items":{"$ref":"#/definitions/ErrorDTO"}},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"FlightDetailsDto":{"type":"object","properties":{"carrier_code":{"type":"string","description":"Travel carrier code"},"flight_number":{"type":"integer","format":"int32","description":"Flight number excluding carrier code."},"origin_airport":{"type":"string","description":"Origin airport/city IATA code."},"origin_city":{"type":"string","description":"Origin city name."},"service_class":{"type":"string","description":"Valid values: \"first class\"\"Second class\"\"business\"\"Economic\"\"0\"\r\nTicket category/class (“0” if no class)"},"stop_over_code":{"type":"string","description":"Stop over code"},"departure_date":{"type":"string","description":"Departure date. Format - YYYY-MM-DD HH:mm:ss"},"destination_airport":{"type":"string","description":"Destination airport/city IATA code."},"destination_city":{"type":"string","description":"Destination city name"},"fare_basis_code":{"type":"string","description":"Fare basis code"},"departure_tax_amount":{"type":"integer","format":"int32","description":"Amount of departure tax for this leg of the trip."},"conjunction_ticket":{"type":"string","description":"Ticket that contains additional coupons for this leg of the trip on an itinerary that has more than four segments."},"exchange_ticket_number":{"type":"string","description":"New ticket number that is issued when the ticket is exchanged for this leg of the trip."},"coupon_number":{"type":"string","description":"Coupon number for the leg"},"endorsements_restrictions":{"type":"string","description":"Notes or notations about endorsements and restrictions for this leg of the trip. Endorsements can be notations added by the travel agency, including mandatory government required notations such as value added tax. Restrictions are limitations for the ticket based on the type of fare, such as a nonrefundable tic."},"total_fare_amount":{"type":"integer","format":"int32","description":"Total fare for this leg of the trip."},"fee_amount":{"type":"integer","format":"int32","description":"Fee for this leg of the trip, such as an airport fee or country fee."},"tax_amount":{"type":"integer","format":"int32","description":"Tax for this leg of the trip."}}},"FraudCheckResponseDTO":{"type":"object","properties":{"provider":{"type":"string","description":"Third party provider for the risk check."},"score":{"type":"number","format":"double","description":"Total score calculated for this order. The value cannot be negative."},"status":{"type":"string","description":"Status of the risk check."},"created_at":{"type":"string","format":"date-time","description":"The time at which the transaction was created"},"cs_dm":{"$ref":"#/definitions/CyberSourceDecisionManagerResponseDTO"},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"details":{"type":"string","description":"Optional details concerning the error."},"message":{"type":"string","description":"A description of the error."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp"}}},"FraudPredictionsDto":{"type":"object","properties":{"error_message":{"type":"string"},"rec":{"type":"string"},"rules_triggered":{"type":"array","items":{"type":"string"}},"score":{"type":"integer","format":"int32"}}},"GooglePay":{"type":"object","required":["cryptogram","dpan","eci","expiry_month","expiry_year"],"properties":{"cryptogram":{"type":"string","description":"Applepay online payment cryptogram for 3d secure which maps to the paymentData.onlinePaymentCryptogram property in the encrypted payment data."},"expiry_month":{"type":"string","description":"Card expiry month. A string representing the month, valid values are 01 to 12. Maps to the applicationExpirationDate property in the encrypted payment data. Need to send only Month from the received data."},"expiry_year":{"type":"string","description":"Card expiry year. A string representing the last two digits of the year, e.g. 19 for 2019. Maps to the applicationExpirationDate property in the encrypted payment data. Need to send only Year from the received data."},"dpan":{"type":"string","description":"Device specific PAN - Maps to the applicationPrimaryAccountNumber property in the encrypted payment data."},"eci":{"type":"string","description":"Electronic Commerce Indicator - Maps to the paymentData.eciIndicator property in the encrypted payment data."},"googlepay_transaction_id":{"type":"string","description":"Googlepay Transaction id received from googlepay."}}},"HPPCardRedocDTO":{"type":"object","properties":{"create_token":{"type":"string","description":"Whether to create a token or not for the card. Defaults to 'false'. Setting it to 'true' will create the token for the card."}}},"HPPCyberSourceDecisionManagerRequesRedoctDTO":{"type":"object","properties":{"risk_information":{"description":"riskInformation","$ref":"#/definitions/RiskInformationDTO"},"merchant_defined_information":{"type":"array","description":"merchantDefinedInformation","items":{"$ref":"#/definitions/MerchantDefinedInformationDTO"}}}},"HPPExternalRiskDataRedocDTO":{"type":"object","required":["session_id"],"properties":{"session_id":{"type":"string","description":"Session ID of the transaction. This session id can be used to obtain device fingerprint information. You can use any id that you are already generating, such as an order number or web session ID."},"provider":{"type":"string","description":"Third party provider for the risk check."},"cs_dm":{"description":"CybersourceDecisionManagerRequest","$ref":"#/definitions/HPPCyberSourceDecisionManagerRequesRedoctDTO"}}},"HPPThreeDsRedocDTO":{"type":"object","properties":{"three_ds_required":{"type":"string","description":"true if 3DS required for this transaction, false otherwise."},"three_ds_version":{"type":"string","description":"Valid values: \"1.0\"\"2.0\"\n\nThe 3-D Secure version used for the authentication"}}},"HostedPayRequestRedocDTO":{"type":"object","properties":{"afterpay":{"$ref":"#/definitions/AfterPayRequestDto"},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"capture_now":{"type":"string","description":"True will auto-capture the transaction. False will only authorise the transaction."},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"return_url":{"type":"string","description":"The return url to which the customer is redirected after an transaction is processed."},"fraud_predictions":{"type":"array","items":{"$ref":"#/definitions/FraudPredictionsDto"}},"webhook_transaction_update":{"type":"string","description":"A webhook url that is called when a transaction is updated. Note: This overrides any URL set on the account"},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer.","enum":["ecommerce","pos","moto","unknown"]},"locale":{"type":"string","description":"Locale code","enum":["en_GB","en_US"]},"show_order_summary":{"type":"string","description":"\n\n This field allows you to customise the order summary block in the HPP iframe. True will load the order summary in the page and false will hide it.","enum":["true","false"]},"customer":{"description":"customer","$ref":"#/definitions/customer"},"billing_address":{"description":"Billing address details for the customer","$ref":"#/definitions/BillingAddress"},"three_ds":{"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used.","$ref":"#/definitions/HPPThreeDsRedocDTO"},"card":{"description":"The new card number, also known as PAN.","$ref":"#/definitions/HPPCardRedocDTO"},"card_brand":{"type":"string","description":"Card brand for the card used for processing ","enum":["amex","diners","discover","elo","jcb","maestro","mastercard","visa","visa electron","carte bancaire"]},"show_custom_fields":{"description":"This field describes the custom fields for HPP.","$ref":"#/definitions/ShowCustomFieldsRedocDTO"},"show_custom_labels":{"description":"This field describes the custom label fields for HPP. It will display only in the vertical alignment","$ref":"#/definitions/ShowCustomLabelsRedocDTO"},"transaction_css_template":{"type":"string","description":"CSS data to be used on hosted page to match the hosted page with your website. This field would be ignored if organisation is not configured to use css_template."},"airline_data":{"description":"airlineData","$ref":"#/definitions/airlineData"},"delivery_address":{"description":"Some fields may be mandatory for certain acquirers. Please speak to your Implementation Manager for further information.","$ref":"#/definitions/BillingAddress"},"external_risk_data":{"$ref":"#/definitions/HPPExternalRiskDataRedocDTO"},"recurring_type":{"type":"string","description":"This field allows you to set the expiry time for the Hosted Payment Page."},"timeout_duration":{"type":"string","description":"This field allows you to set the expiry time for the Hosted Payment Page."},"timestamp":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"timeout_units":{"type":"string","description":"This fields allows you to set the unit of the expiry time for Hosted Payment Page."},"expiry_return_url":{"type":"string","description":"The return url to which the customer is redirected after an Hosted Payment Page is expired."},"tra_exemption":{"type":"string","description":"\"This indicates that exemption from SCA is requested for the transaction. Valid values as mentioned below:\n\n \"\"external\"\" - Transaction risk analysis conducted by approved external source\n\n \"\"acquirer\"\" - Transaction risk analysis conducted by the acquirer\n\n \"\"scp\"\" - scp stands for Secure Corporate Payment\n\n \"\"lvp\"\" - lvp stands for Low-Value Payment\n\n \"\"delegated\"\" - Exemption indicator for delegated authentication.\n\n This flag specifies whether the transaction is exempt from strong customer authentication (SCA) requirements in Europe because the authentication was delegated to a different provider, such as an acquirer or payment technology provider (PTP).\""},"merchant_data":{"$ref":"#/definitions/MerchantData"}}},"HostedPayResponseRedocDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"url":{"type":"string","description":"Checkout URL for hosted payment page."}}},"HostedPreTxnErrorResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"details":{"type":"string","description":"Optional details concerning the error."},"duplicate":{"type":"string","description":"Property helps determine whether response is duplicate or not"},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"message":{"type":"string","description":"A description of the response."},"stc_used":{"type":"string","description":"Property helps determine the transaction risk api if paypal was used or not"},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."}}},"HostedPreTxnResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"amount":{"type":"string","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"duplicate":{"type":"string","description":"Property helps determine whether response is duplicate or not"},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"reason_code":{"type":"string","description":"A reason code assigned by the acquiring platform; '0' in case of Success, see reason codes section for declined scenarios and error codes section for failed scenarios."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0."},"status":{"type":"string","enum":["AUTHENTICATION_REQUIRED","DECLINED","PENDING"]},"stc_used":{"type":"string","description":"Property helps determine the transaction risk api if paypal was used or not"},"url":{"type":"string","description":"Checkout URL for hosted payment page."}}},"HostedTokenRequest":{"type":"object","required":["organisation_id"],"properties":{"organisation_id":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"save_button":{"type":"string","description":"True will show the save button on the Hosted page, False will try to auto save the card details as soon as user fills all details."},"return_url":{"type":"string","description":"The return url to which the customer is redirected after a token is created."},"locale":{"type":"string","description":"Locale code."},"billing_address":{"description":"Billing Address","$ref":"#/definitions/BillingAddress"}}},"HostedTokenResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"url":{"type":"string","description":"Hosted token page URL"}}},"InfoCodesDTO":{"type":"object","properties":{"address":{"type":"array","items":{"type":"string"}},"customerList":{"type":"array","items":{"type":"string"}},"globalVelocity":{"type":"array","items":{"type":"string"}},"identityChange":{"type":"array","items":{"type":"string"}},"internet":{"type":"array","items":{"type":"string"}},"phone":{"type":"array","items":{"type":"string"}},"suspicious":{"type":"array","items":{"type":"string"}},"velocity":{"type":"array","items":{"type":"string"}}}},"InstallmentDto":{"type":"object","properties":{"profileNo":{"type":"string","description":"Installment profile number"},"customerInterestRate":{"type":"string","description":"Customer interest rate."},"numberOfInstallments":{"type":"string","description":"Number of installments"}}},"InternalFraudCheckRequestDTO":{"type":"object","properties":{"account_id":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"billing_address":{"$ref":"#/definitions/BillingAddress"},"billing_country":{"type":"string","description":"A 2-letter ISO3166 alpha-2. country code for the address.\n\nNote: Alphabets upto two characters (e.g. GB, RU etc..)"},"card":{"$ref":"#/definitions/Card"},"email_address":{"type":"string","description":"Email address of the card holder.\n\nNote: Only alphabets, numeric, @, comma(,) dot(.), plus(+), underscore(_), dash(-) and apostrophe(â€˜)"},"ip_address":{"type":"string","description":"Contains detailed response information about the customer's IP address."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"transaction_amount":{"type":"string","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"transaction_currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"transaction_id":{"type":"string","description":"The ID of the transaction"}}},"IreRequestDTO":{"type":"object","properties":{"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"card_number":{"type":"string","description":"The new card number, also known as PAN."},"consumer_country_cd":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"id":{"type":"string","description":"This is the unique id generated by Apexx."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"org_custom_fields":{"type":"object","description":"Organisation defined custom fields","additionalProperties":{"type":"string"}},"organisation_id":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer. Default values: ecommerce"},"three_ds":{"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used.","$ref":"#/definitions/ThreeDs"}}},"IreResponseDTO":{"type":"object","properties":{"priority":{"type":"string"},"route_info":{"type":"array","items":{"$ref":"#/definitions/RouteInformationDto"}},"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"Items":{"type":"object","required":["gross_unit_price","item_description","item_type","net_unit_price","product_id","product_image_url","product_url","quantity"],"properties":{"item_type":{"type":"string","description":"This field is specifying from a pre-defined subset of values","enum":["Product","Discount","Tax","Shipping"]},"product_id":{"type":"string","description":"Merchant Product identification number"},"group_id":{"type":"string","description":"Item group ID. The group this item belongs to. Provided by the merchant"},"item_description":{"type":"string","description":"Product name. For example \"Black music player 64GB\". Everything over 255 characters will be truncated"},"net_unit_price":{"type":"integer","format":"int32","description":"Net unit price.\n \n <b>Note:</b> net_unit_price is only required if the vat_percent is not provided."},"gross_unit_price":{"type":"integer","format":"int32","description":"Gross price per item"},"quantity":{"type":"integer","format":"int32","description":"Quantity"},"vat_percent":{"type":"number","format":"float","description":"Tax percent"},"vat_amount":{"type":"integer","format":"int32","description":"Tax amount per item"},"discount":{"type":"integer","format":"int32","description":"Discount amount per item."},"product_image_url":{"type":"string","description":"URL for the image of this product."},"product_url":{"type":"string","description":"URL to the product"},"additional_information":{"type":"string","description":"Extended description of the order item"}}},"ItemsDetailsDto":{"type":"object","required":["gross_unit_price","item_description","net_unit_price","product_id","quantity"],"properties":{"product_id":{"type":"string","description":"Merchant Product identification number"},"group_id":{"type":"string","description":"Item group ID. The group this item belongs to. Provided by the merchant"},"item_description":{"type":"string","description":"Product name. For example \"Black music player 64GB\". Everything over 255 characters will be truncated"},"net_unit_price":{"type":"integer","format":"int64","description":"Net unit price.\n\nNote: net_unit_price is only required if the vat_percent is not provided."},"gross_unit_price":{"type":"integer","format":"int64","description":"Gross price per item"},"quantity":{"type":"integer","format":"int64","description":"Quantity"},"vat_percent":{"type":"string","description":"Tax percent"},"vat_amount":{"type":"string","description":"Tax amount per item"},"image_url":{"type":"string","description":"URL for the image of this product. It will be turned into a thumbnail and displayed in MyAfterPay, on the invoice line next to the order item. The linked image must be a rectangle or square, width between 100 pixels and 1280 pixels."},"product_url":{"type":"string","description":"URL to the product"},"additional_information":{"type":"string","description":"Extended description of the order item"}}},"Items_":{"type":"object","properties":{"product_id":{"type":"string","description":"Merchant Product identification number"},"group_id":{"type":"string","description":"Item group ID. The group this item belongs to. Provided by the merchant"},"item_description":{"type":"string","description":"Product name. For example \"Black music player 64GB\". Everything over 255 characters will be truncated"},"net_unit_price":{"type":"integer","format":"int32","description":"Net unit price.\n \n <b>Note:</b> net_unit_price is only required if the vat_percent is not provided."},"gross_unit_price":{"type":"integer","format":"int32","description":"Gross price per item"},"quantity":{"type":"integer","format":"int32","description":"Quantity"},"vat_percent":{"type":"number","format":"float","description":"Tax percent"},"vat_amount":{"type":"integer","format":"int32","description":"Tax amount per item"},"discount":{"type":"integer","format":"int32","description":"Discount amount per item."},"product_image_url":{"type":"string","description":"URL for the image of this product."},"product_url":{"type":"string","description":"URL to the product"},"additional_information":{"type":"string","description":"Extended description of the order item"}}},"Legs":{"type":"object","properties":{"carrier_code":{"type":"string","description":"Travel carrier code"},"flight_number":{"type":"integer","format":"int32","description":"Flight number excluding carrier code"},"origin_airport":{"type":"string","description":"Origin airport/city IATA code"},"origin_city":{"type":"string","description":"Origin city name"},"service_class":{"type":"string","description":"Service Class","enum":["first class","Second class","business","Economic","0 Ticket category/class (\"0\" if no class)"]},"stop_over_code":{"type":"string","description":"Stop over code"},"departure_date":{"type":"string","description":"Departure date. Format - YYYY-MM-DD HH:mm:ss"},"destination_airport":{"type":"string","description":"Destination airport/city IATA code"},"destination_city":{"type":"string","description":"Destination city name"},"fare_basis_code":{"type":"string","description":"Fare basis code"},"departure_tax_amount":{"type":"integer","format":"int32","description":"Amount of departure tax for this leg of the trip"},"conjunction_ticket":{"type":"string","description":"Ticket that contains additional coupons for this leg of the trip on an itinerary that has more than four segments"},"exchange_ticket_number":{"type":"string","description":"New ticket number that is issued when the ticket is exchanged for this leg of the trip."},"coupon_number":{"type":"string","description":"Coupon number for the leg"},"endorsements_restrictions":{"type":"string","description":"Notes or notations about endorsements and restrictions for this leg of the trip. Endorsements can be notations added by the travel agency, including mandatory government required notations such as value added tax. Restrictions are limitations for the ticket based on the type of fare, such as a nonrefundable tic."},"total_fare_amount":{"type":"integer","format":"int32","description":"Total fare for this leg of the trip."},"fee_amount":{"type":"integer","format":"int32","description":"Fee for this leg of the trip, such as an airport fee or country fee."},"tax_amount":{"type":"integer","format":"int32","description":"Tax for this leg of the trip"}}},"MerchantData":{"type":"object","properties":{"website_url":{"type":"string","description":"Merchant website."}}},"MerchantDefinedInformationDTO":{"type":"object","properties":{"key":{"type":"string","description":"Fields that you can use to store information. The value appears in the Case Management Details window in the Business Center. The first four fields are the same fields that are used by the Secure Data services. See request code examples. Warning Merchant-defined data fields are not intended to and must not be used to capture personally identifying information. Accordingly, merchants are prohibited from capturing, obtaining, and/or transmitting any personally identifying information in or via the merchant-defined data fields.Personally identifying information includes, but is not limited to, address, credit card number, social security number, driver's license number, state-issued identification number, passport number, and card verification numbers (CVV, CVC2, CVV2, CID, CVN). In the event CyberSource discovers that a merchant is capturing and/or transmitting personally identifying information via the merchant-defined data fields, whether or not intentionally, CyberSource will immediately suspend the merchant's account, which will result in a rejection of any and all transaction requests submitted by the merchant after the point of suspension."},"value":{"type":"string","description":"String value for the key"}}},"MgwResponseDTO":{"type":"object","properties":{"authorize_payment_response":{"$ref":"#/definitions/PaymentResponseDTO"},"cancel_response":{"$ref":"#/definitions/CancelResponseDTO"},"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"OrderDeliveryData":{"type":"object","properties":{"address":{"type":"string","description":"Street address of the delivery"},"city":{"type":"string","description":"City of the delivery customer"},"postal_code":{"type":"string","description":"A postal/zip code for the address. Note: Only alpha-numeric characters, Special characters allowed are hyphen(-) and spaces."}}},"OrderItems":{"type":"object","properties":{"product_id":{"type":"string","description":"Merchant Product identification number"},"group_id":{"type":"string","description":"Item group ID. The group this item belongs to. Provided by the merchant"},"item_description":{"type":"string","description":"Product name. For example \"Black music player 64GB\". Everything over 255 characters will be truncated"},"net_unit_price":{"type":"integer","format":"int32","description":"Net unit price.\n \n <b>Note:</b> net_unit_price is only required if the vat_percent is not provided."},"gross_unit_price":{"type":"integer","format":"int32","description":"Gross price per item"},"quantity":{"type":"integer","format":"int32","description":"Quantity"},"vat_percent":{"type":"number","format":"float","description":"Tax percent"},"vat_amount":{"type":"integer","format":"int32","description":"Tax amount per item"},"discount":{"type":"integer","format":"int32","description":"Discount amount per item."},"product_image_url":{"type":"integer","format":"int32","description":"URL for the image of this product."},"product_url":{"type":"string","description":"URL to the product"},"additional_information":{"type":"string","description":"Extended description of the order item"}}},"Payment":{"type":"object","properties":{"installment":{"description":"Installment information","$ref":"#/definitions/InstallmentDto"}}},"PaymentInformationResponseDTO":{"type":"object","properties":{"accountType":{"type":"string"},"bin":{"type":"string"},"binCountry":{"type":"string"},"issuer":{"type":"string"},"scheme":{"type":"string"}}},"PaymentListRequestDTO":{"type":"object","properties":{"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"date_from":{"type":"string","format":"date","example":"2020-01-31","description":"First date of the transaction list, 10 characters, ISO-8601 (YYYY-MM-DD)"},"date_to":{"type":"string","format":"date","example":"2020-01-31","description":"Last date of the transaction list, 10 characters, ISO-8601 (YYYY-MM-DD)"},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"page_number":{"type":"integer","format":"int32","description":"Page index."},"page_size":{"type":"integer","format":"int32","description":"Page size."}}},"PaymentListResponseDTO":{"type":"object","properties":{"payment_list":{"type":"array","items":{"$ref":"#/definitions/PaymentResponseDTO"}},"total_pages":{"type":"integer","format":"int32"},"total_records":{"type":"integer","format":"int64"}}},"PaymentResponseDTO":{"type":"object","required":["amount"],"properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"amount":{"type":"number","description":"Amount is charged without a decimal place e.g. $1.50 = 150. Currencies can have different decimals/exponentials, see Currencies Section for more details."},"authorization_code":{"type":"string","description":"An authorisation code assigned by the processing platform"},"blocked":{"type":"boolean","example":false,"description":"True if the transaction has been blocked by a ruleset, false otherwise"},"capture_now":{"type":"string","description":"True will auto-capture the transaction. False will only authorise the transaction."},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"card":{"$ref":"#/definitions/Card"},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"customer_ip":{"type":"string","description":"The IP address of the customer"},"pares":{"type":"string","description":"The unmodified PaRes value as received after the customer was redirected back from 3DS Authentication."},"recurring_type":{"type":"string","description":"The value used to flag how the acquirer/ issuer should consider the transaction","enum":["first","recurring","oneclick","mit","cit"]},"user_agent":{"type":"string","description":"The full user agent string of the device the customer used to submit the transaction"},"webhook_transaction_update":{"type":"string","description":"A webhook url that is called when a transaction is updated. Note: This overrides any URL set on the account"},"actions":{"type":"array","items":{"type":"string"}},"created_at":{"type":"string","description":"The time at which the transaction was created"},"cvv_present":{"type":"boolean","example":false,"description":"True if the card was used with a cvv"},"fees":{"type":"array","items":{"type":"integer","format":"int32"}},"geo_locations":{"type":"array","description":"The latitude/longitude resolved from the customer's ip address","items":{"type":"integer","format":"int32"}},"last_status_update":{"type":"string","description":"The last time when the status of the transaction was updated"},"payment_product":{"type":"string","description":"The payment product corresponding to this transaction"},"card_brand":{"type":"string","description":"Card brand for the card used for processing","enum":["amex","diners","discover","elo","jcb","maestro","mastercard","visa","visa electron","carte bancaire"]},"issuer_name":{"type":"string","description":"Card Issuer Name for this transaction"},"issuer_country":{"type":"string","description":"Issuing country of the card. A 2-letter ISO3166 alpha-2. Acquirer country code"},"organisation_psp_name":{"type":"string","description":"The name of the processor as setup within the APEXX payment gateway. i.e. Merchant Name - Acquirer Name"},"reason_code":{"type":"string","description":"A reason code assigned by the acquiring platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"},"status":{"type":"string","description":"Status of the transaction.","enum":["AUTHORISED","CAPTURED","DECLINED"]},"billing_address":{"$ref":"#/definitions/BillingAddress"},"delivery_address":{"$ref":"#/definitions/BillingAddress"},"shopper_interaction":{"type":"string","description":"Determines the point of sale of a customer.","enum":["ecommerce","pos","moto","unknown"]},"cvv_result":{"type":"string","description":"CVV verification result, as returned by the processor."},"avs_result":{"type":"string","description":"Address verification services result, as returned by the processor"},"three_ds":{"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used.","$ref":"#/definitions/ThreeDSCardEnrolRequestDTO"},"acquirer_name":{"type":"string","description":"The name of the acquirer as setup within the APEXX payment gateway."},"webhook":{"$ref":"#/definitions/WebhookResponseDTO"},"preauth_check":{"$ref":"#/definitions/FraudCheckResponseDTO"},"external_risk_data":{"$ref":"#/definitions/FraudCheckResponseDTO"},"routing":{"type":"array","items":{"$ref":"#/definitions/PspGwRouteInformationDto"}},"cascaded_psps":{"type":"array","items":{"$ref":"#/definitions/PspInformationDto"}},"psp_info":{"$ref":"#/definitions/PspInformationDto"},"tra_exemption":{"type":"string","description":"\"This indicates that exemption from SCA is requested for the transaction. Valid values as mentioned below:\n\n \"\"external\"\" - Transaction risk analysis conducted by approved external source\n\n \"\"acquirer\"\" - Transaction risk analysis conducted by the acquirer\n\n \"\"scp\"\" - scp stands for Secure Corporate Payment\n\n \"\"lvp\"\" - lvp stands for Low-Value Payment\n\n \"\"delegated\"\" - Exemption indicator for delegated authentication.\n\n This flag specifies whether the transaction is exempt from strong customer authentication (SCA) requirements in Europe because the authentication was delegated to a different provider, such as an acquirer or payment technology provider (PTP).\""},"authorisation_mid":{"type":"string","description":"The authorisation mid used to process the transaction as setup within the APEXX payment gateway."},"settlement_mid":{"type":"string","description":"The settlement mid used to process the transaction as setup within the APEXX payment gateway."},"pos_data_code":{"type":"string"},"request_id":{"type":"string","description":"Unique Id for each request."},"duplicate_check":{"type":"string","description":"This is the duplicate check of request, 'true' in case of request is duplicate"},"customer":{"$ref":"#/definitions/customer"},"response_code":{"type":"string","description":"Response code is sent only when the source of the response looks suspicious. In this case Apexx immediately cancels the transaction placed with the gateway."},"payment_product_type":{"type":"string","description":"The payment product type corresponding to this transaction","enum":["Amex","Diners Club International","Discover","Elo","JCB","Maestro","Mastercard","Visa","Visa Electron"]},"response_message":{"type":"string","description":"A description of the response_code."},"three_ds_transaction":{"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used.","$ref":"#/definitions/ThreeDSResponse"},"transaction_chargeback":{"$ref":"#/definitions/TransactionChargeback"}}},"PaymentTypeData":{"type":"object","properties":{"key_name":{"type":"string","description":"The name of the key for the key value pair"},"value":{"type":"string","description":"The value for the key value pair"}},"description":"provider specific key values pairs, should be an array of the 'key_name' value and the 'value' value - Please speak to your Implementation manager for details on usage."},"ProfileDTO":{"type":"object","properties":{"name":{"type":"string"},"selectorRule":{"type":"string"}}},"ProfileDataDTO":{"type":"object","properties":{"name":{"type":"string","description":"Name of the active profile chosen by the profile selector. If no profile selector exists, the default active profile is chosen."}}},"ProviderNameDTO":{"type":"object","properties":{"fieldName":{"type":"string"},"fieldValue":{"type":"string"}}},"ProvidersDTO":{"type":"object","properties":{"providerName":{"type":"array","items":{"$ref":"#/definitions/ProviderNameDTO"}}}},"PspBasicInfoDTO":{"type":"object","properties":{"apexx_name":{"type":"string"},"merchant_code":{"type":"string"},"name":{"type":"string"},"psp_id":{"type":"string"},"sequence":{"type":"integer","format":"int32"}}},"PspErrorDto":{"type":"object","properties":{"apexx_return_code":{"type":"string","description":"A return code assigned by the APEXX payment platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"apexx_return_message":{"type":"string","description":"A return message assigned by the APEXX payment platform. Reason message will return if reason_code is not 0"},"field_reference":{"type":"string","description":"Reference to field that caused an error."},"psp_return_code":{"type":"string","description":"A return code assigned by the acquiring platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"psp_return_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"}}},"PspGwBasicInfoDto":{"type":"object","properties":{"apexx_name":{"type":"string"},"merchant_code":{"type":"string"},"name":{"type":"string"},"psp_id":{"type":"string"},"sequence":{"type":"integer","format":"int32"}}},"PspGwRoundRobinInfoDto":{"type":"object","properties":{"counter_type":{"type":"string"},"derived_value":{"type":"string"},"expression":{"type":"string"},"round_robin_method":{"type":"string"},"round_robin_value":{"type":"string"}}},"PspGwRouteInformationDto":{"type":"object","properties":{"cascade_psp_sequence":{"type":"array","items":{"$ref":"#/definitions/PspGwBasicInfoDto"}},"primary_psp":{"$ref":"#/definitions/PspGwBasicInfoDto"},"round_robin_info":{"$ref":"#/definitions/PspGwRoundRobinInfoDto"},"routing_mechanism":{"type":"string"},"rule":{"type":"string"},"rule_type":{"type":"string"}}},"PspInformationDto":{"type":"object","properties":{"acquirer_name":{"type":"string","description":"The name of the acquirer as setup within the APEXX payment gateway."},"apexx_name":{"type":"string","description":"Name of the psp as setup within the APEXX payment gateway."},"ellapsed_time":{"type":"string"},"end_time_stamp":{"type":"string"},"errors":{"type":"array","items":{"$ref":"#/definitions/PspErrorDto"}},"organisation_psp_name":{"type":"string","description":"The name of the processor as setup within the APEXX payment gateway. i.e. Merchant Name - Acquirer Name."},"psp_id":{"type":"string","description":"The ID of the payment service provider."},"psp_name":{"type":"string","description":"The name of the payment service provider as setup within the APEXX payment gateway."},"psp_transaction_reference":{"type":"string","description":"The unique id provided by the payment service provider for the transaction."},"response_code":{"type":"string","description":"The response code received from the payment service provider for the transaction."},"response_message":{"type":"string","description":"The response message received from the payment service provider for the transaction."},"routing_sequence_id":{"type":"integer","format":"int32"},"start_time_stamp":{"type":"string"},"status":{"type":"string","description":"The status of the transaction as provided by the psp."},"sub_status":{"type":"string"},"time_out":{"type":"integer","format":"int32"},"transport_method":{"type":"string"}}},"RedirectUrls":{"type":"object","properties":{"success":{"type":"string","description":"The return url to which the customer is redirected after an transaction is processed."},"failed":{"type":"string","description":"The return url to which the customer is redirected after an transaction is unsuccessful."},"cancelled":{"type":"string","description":"The return url to which the customer is redirected after failing to complete provider registration and payment confirmation steps."}}},"RefundRequestDTO":{"type":"object","properties":{"amount":{"type":"number","description":"The amount to be refunded."},"reason":{"type":"string","description":"The reason for the refund"},"merchant_refund_reference":{"type":"string","description":"A reference specified by the merchant to identify the refund. This field must be unique per refund."},"refund_time":{"type":"string","format":"date-time","description":"Date and time of the request. Format - YYYY-MM-DD HH:mm:ss."},"capture_id":{"type":"string","description":"Only supported by some acquirers.\n\nThis is the unique capture identifier returned in the capture API as _id. Capture Id is a mandatory field for partial captures."},"duplicate_check":{"type":"boolean","example":false,"description":"This indicates the system whether to perform duplicate check on the transaction or not. A request is considered duplicate if the merchant_reference has already been used within last 24 hours."},"creditnote_number":{"type":"string","description":"Only supported by some acquirers.\n\nThe merchant may want to use internal credit note numbers, or let the AfterPay generate one based on invoice to be credited."},"items":{"type":"array","description":"Only supported by some acquirers.","items":{"$ref":"#/definitions/ItemsDetailsDto"}},"refund_reference":{"type":"string","description":"Only supported by some acquirers.\n\nA reference specified by the merchant to identify the refund. This field must be unique per refund."}}},"RefundResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique id generated by Apexx."},"account":{"type":"string","description":"The ID of the account. Acts as an override. Must be submitted if organisation and currency are not used in the request."},"amount":{"type":"number","description":"The amount to be refunded."},"organisation":{"type":"string","description":"The ID of an organisation. Must be submitted along with currency if account is not used in the request."},"currency":{"type":"string","description":"Currency using which transaction needs to be processed. Must be submitted if account is not used in the request. This field is ignored if submitted along with the account, Apexx uses the currency configured with the account to process the transaction when account is submitted. A 3-letter ISO 4217 currency code, see Currencies Section for more details."},"authorization_code":{"type":"string","description":"An authorisation code assigned by the processing platform"},"dynamic_descriptor":{"type":"string","description":"A short reference/descriptor that will show up on the customers bank statement. Only supported by some acquirers. Please confirm with your Implementation Manager for supported acquirers and formats."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"created_at":{"type":"string","description":"The time at which the transaction was created"},"total_refunded_amount":{"type":"number","description":"Total amount refunded"},"total_captured_amount":{"type":"number","description":"Total amount captured"},"last_status_update":{"type":"string","description":"The last time when the status of the transaction was updated"},"total_authorised_amount":{"type":"number","description":"Total amount authorised"},"transaction":{"type":"string","description":"The ID of the authorised transaction"},"reason":{"type":"string","description":"The reason for the refund"},"invoice_number":{"type":"string","description":"Invoice number of the ticket."},"capture_id":{"type":"string","description":"This is the unique capture identifier returned in the capture API as _id. Capture Id is a mandatory field for partial captures."},"refund_numbers":{"type":"array","description":"This is the unique capture identifier returned in the capture API as _id. Capture Id is a mandatory field for partial captures.","items":{"type":"string"}},"psp_info":{"description":"PSP Information.","$ref":"#/definitions/PspInformationDto"},"reason_code":{"type":"string","description":"A reason code assigned by the acquiring platform; '0' in case of AUTHORISED/CAPTURED, see reason codes section for declined scenarios and error codes section for failed scenarios."},"reason_message":{"type":"string","description":"A reason message assigned by the acquiring platform. Reason message will return if reason_code is not 0"},"status":{"type":"string","description":"Status of the transaction.","enum":["AUTHORISED","CAPTURED","DECLINED"]},"acquirer_name":{"type":"string","description":"The name of the acquirer as setup within the APEXX payment gateway."},"request_id":{"type":"string","description":"Unique Id for each request."},"duplicate_check":{"type":"string","description":"This is the duplicate check of request, 'true' in case of request is duplicate"},"response_code":{"type":"string","description":"Response code is sent only when the source of the response looks suspicious. In this case Apexx immediately cancels the transaction placed with the gateway."},"response_message":{"type":"string","description":"A description of the response_code."}}},"ResponseDTO":{"type":"object","properties":{"_id":{"type":"string","description":"This is the unique transaction id generated by Apexx."},"organisation_id":{"type":"string","description":"The ID of an organisation."},"code":{"type":"string","description":"An alphanumeric code which uniquely identify an error."},"status":{"type":"string","description":"It will indicate what is the final result of the request."},"message":{"type":"string","description":"A description of the response."},"risk_data":{"description":"Risk Check Response","$ref":"#/definitions/RiskCheckResponseDTO"},"timestamp":{"type":"integer","format":"int64","description":"Current timestamp."},"trace_id":{"type":"string","description":"Unique trace id created by APEXX platform to trace this request."},"merchant_reference":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."}}},"RiskCheckResponseDTO":{"type":"object","properties":{"_id":{"type":"string"},"account_id":{"type":"string"},"created_at":{"type":"string","format":"date-time"},"cs_dm":{"$ref":"#/definitions/CyberSourceDecisionManagerResponseDTO"},"details":{"type":"string"},"is_fraud":{"type":"boolean"},"organisation":{"type":"string"},"reason_code":{"type":"string"},"reason_message":{"type":"string"},"reason_status_code":{"type":"string"},"recommendation_code":{"type":"string"},"risk_provider":{"type":"string"},"risk_provider_reference":{"type":"string"},"rules_triggered":{"type":"array","items":{"$ref":"#/definitions/RuleTraceDTO"}},"score":{"type":"number","format":"double"},"stats":{"$ref":"#/definitions/StatsDTO"},"status":{"type":"string"}}},"RiskData":{"type":"object","properties":{"acquisition_channel":{"type":"string","description":"Specify the channel which consumer has used for accessing merchant page.","enum":["NotSet","Advertisment","SocialNetwork","Direct","SearchEngine","Other"]},"customer_card_classification":{"type":"string","description":"Specifies the level of the loyalty card (e.g Gold member)"},"customer_card_since":{"type":"string","description":"The date when the loyalty card was issued to the customer, 10 characters, ISO-8601 (YYYY-MM-DD)"},"customer_classification":{"type":"string","description":"Customer reputation (e.g. VIP client)"},"customer_individual_score":{"type":"string","description":"The customer's individual risk score provided by the merchant. Accepts a number from -10000 to 10000 (can be encased in quotation marks or not), or a single case-insensitive letter from 'a' to 'z'."},"customer_since":{"type":"string","description":"Date the Customer first used the Merchant. 10 characters, ISO-8601 (YYYY-MM-DD)"},"existing_customer":{"type":"string","description":"Is customer an existing customer for merchant","enum":["true","false"]},"has_customer_card":{"type":"string","description":"Shows if customer has loyalty card","enum":["true","false"]},"marketing_opt_in":{"type":"string","description":"Shows if merchant is allowed to send marketing information to customer","enum":["true","false"]},"number_of_transactions":{"type":"integer","format":"int32","description":"Total number of successful purchases that have been made by the specific consumer"},"profile_tracking_id":{"type":"string","description":"Unique Id of the device for profile tracking"},"verified_customer_identification":{"type":"string","description":"Is identification verified","enum":["true","false"]},"order_history":{"type":"array","items":{"$ref":"#/definitions/customer_historic_orders"}}}},"RiskDataDto":{"type":"object","properties":{"acquisition_channel":{"type":"string","description":"Specify the channel which consumer has used for accessing merchant page.","enum":["NotSet","Advertisment","SocialNetwork","Direct","SearchEngine","Other"]},"customer_card_classification":{"type":"string","description":"Specifies the level of the loyalty card (e.g Gold member)."},"customer_card_since":{"type":"string","description":"The date when the loyalty card was issued to the customer"},"customer_classification":{"type":"string","description":"Customer reputation (e.g. VIP client)"},"customer_individual_score":{"type":"string","description":"The customer's individual risk score provided by the merchant. Accepts a number from -10000 to 10000 (can be encased in quotation marks or not), or a single case-insensitive letter from 'a' to 'z'."},"customer_since":{"type":"string","description":"Since when customer has been merchant's client"},"existing_customer":{"type":"string","description":"Is customer an existing customer for merchant"},"has_customer_card":{"type":"string","description":"Shows if customer has loyalty card"},"marketing_opt_in":{"type":"string","description":"Shows if merchant is allowed to send marketing information to customer"},"number_of_transactions":{"type":"integer","format":"int32","description":"Total number of successful purchases that have been made by the specific consumer"},"profile_tracking_id":{"type":"string","description":"Unique Id of the device for profile tracking"},"verified_customer_identification":{"type":"string","description":"Is identification verified"}}},"RiskInformationDTO":{"type":"object","properties":{"profile":{"description":"Identifies a risk profile.","$ref":"#/definitions/ProfileDataDTO"},"event_type":{"type":"string","description":"Specifies one of the following types of events:\n\n1. login\n\n2. account_creation\n\n3. account_update For regular payment transactions, do not send this field."},"buyer_history":{"description":"buyerHistory","$ref":"#/definitions/BuyerHistoryDTO"}}},"RiskInformationResponseDTO":{"type":"object","properties":{"casePriority":{"type":"string"},"infoCodes":{"$ref":"#/definitions/InfoCodesDTO"},"localTime":{"type":"string"},"profileResponse":{"$ref":"#/definitions/ProfileDTO"},"providers":{"$ref":"#/definitions/ProvidersDTO"},"rules":{"type":"array","items":{"$ref":"#/definitions/RuleDTO"}},"score":{"$ref":"#/definitions/ScoreDTO"}}},"Risk_Data":{"type":"object","properties":{"acquisition_channel":{"type":"string","description":"Specify the channel which consumer has used for accessing merchant page.","enum":["NotSet","Advertisment","SocialNetwork","Direct","SearchEngine","Other"]},"customer_card_classification":{"type":"string","description":"Specifies the level of the loyalty card (e.g Gold member)"},"customer_card_since":{"type":"string","description":"The date when the loyalty card was issued to the customer, 10 characters, ISO-8601 (YYYY-MM-DD)"},"customer_classification":{"type":"string","description":"Customer reputation (e.g. VIP client)"},"customer_individual_score":{"type":"string","description":"The customer's individual risk score provided by the merchant. Accepts a number from -10000 to 10000 (can be encased in quotation marks or not), or a single case-insensitive letter from 'a' to 'z'."},"customer_since":{"type":"string","description":"Date the Customer first used the Merchant. 10 characters, ISO-8601 (YYYY-MM-DD)"},"existing_customer":{"type":"string","description":"Is customer an existing customer for merchant","enum":["true","false"]},"has_customer_card":{"type":"string","description":"Shows if customer has loyalty card","enum":["true","false"]},"marketing_opt_in":{"type":"string","description":"Shows if merchant is allowed to send marketing information to customer","enum":["true","false"]},"number_of_transactions":{"type":"integer","format":"int32","description":"Total number of successful purchases that have been made by the specific consumer"},"profile_tracking_id":{"type":"string","description":"Unique Id of the device for profile tracking"},"verified_customer_identification":{"type":"string","description":"Is identification verified","enum":["true","false"]}}},"RoundRobinInfoDto":{"type":"object","properties":{"counter_type":{"type":"string"},"derived_value":{"type":"string"},"expression":{"type":"string"},"round_robin_method":{"type":"string"},"round_robin_value":{"type":"string"}}},"RouteInformationDto":{"type":"object","properties":{"cascade_psp_sequence":{"type":"array","items":{"$ref":"#/definitions/PspBasicInfoDTO"}},"primary_psp":{"$ref":"#/definitions/PspBasicInfoDTO"},"priority":{"type":"string"},"round_robin_info":{"$ref":"#/definitions/RoundRobinInfoDto"},"routing_mechanism":{"type":"string"},"rule":{"type":"string"},"rule_type":{"type":"string"}}},"RouteStops":{"type":"object","properties":{"stop":{"type":"string","description":"Location of stop off"}}},"RuleDTO":{"type":"object","properties":{"decision":{"type":"string"},"name":{"type":"string"}}},"RuleTraceDTO":{"type":"object","properties":{"bindValue":{"type":"string"},"category":{"type":"string"},"result":{"type":"boolean"},"ruleExpression":{"type":"string"},"ruleId":{"type":"string"},"ruleOrgId":{"type":"string"},"ruleType":{"type":"string"}}},"ScoreDTO":{"type":"object","properties":{"factorCodes":{"type":"array","items":{"type":"string"}},"modelUsed":{"type":"string"},"result":{"type":"string"}}},"ShowCustomFieldsRedocDTO":{"type":"object","properties":{"card_holder_name":{"type":"string","description":"This field allows you to customise the card block in the HPP. True will load the card holder name in the page and false will hide it.","enum":["false","true"]},"address":{"type":"string","description":"This field allows you to customise the billing_address in the HPP. True will load the billing_address fields in the page and false will hide it.","enum":["false","true"]},"address_required":{"type":"string","description":"This field allows you to customise the billing_address fileds validation in the HPP. True will make all billing_address fields mandatory in the page and false will make it optional.","enum":["false","true"]},"delivery_address":{"type":"string","description":"This field allows you to customise the delivery_address in the HPP. True will load the delivery_address fields in the page and false will hide it.","enum":["false","true"]},"delivery_address_required":{"type":"string","description":"This field allows you to customise the delivery_address fileds validation in the HPP. True will make all delivery_address fields mandatory in the page and false will make it optional.","enum":["false","true"]},"display_horizontal":{"type":"string","description":"This field allows you to customise the alignment of the HPP. True will align in the horizontal and false will align in the vertical. And true is the default value.","enum":["false","true"]},"show_phone":{"type":"string","description":"This field allows you to customise the phone in the HPP. True will load the phone field in the page and false will hide it.","enum":["true","false"]},"display_cvv_logo":{"type":"string","description":"This field allows you to enable cvv logo on the HPP. True will show the cvv logo on the page and false will hide it.","enum":["false","true"]}}},"ShowCustomLabelsRedocDTO":{"type":"object","properties":{"expiry_date":{"type":"string","description":"Information which we will display for an expiry month and expiry year.\n\nMax-Length: 50 chars"},"cvv":{"type":"string","description":"Information which we will display for the cvv.\n\nMax-Length: 50 chars"}}},"StatsDTO":{"type":"object","properties":{"detailed_stats":{"$ref":"#/definitions/DetailedStatsDTO"},"elapsed_time":{"type":"integer","format":"int64"},"total_matched_rules":{"type":"integer","format":"int32"},"total_rules_triggered":{"type":"integer","format":"int32"}}},"ThreeDSCardEnrolRequestDTO":{"type":"object","properties":{"three_ds_required":{"type":"boolean","example":false,"description":"Enroll a given transaction for 3D-secure to verify whether authentication is supported for the card being used."},"three_ds_version":{"type":"string","description":"The 3-D Secure version used for the authentication.","enum":["1.0","2.0","1.0.2","2.1.0","2.2.0"]},"term_url":{"type":"string","description":"The return url to which the customer is redirected after a transaction is processed."},"reference_id":{"type":"string","description":"Cardinal Session ID sent in the response after initialization of JWT with Cardinal. This is mandatory when three_ds_version is 2.0."}}},"ThreeDSResponse":{"type":"object","properties":{"three_ds_authenticated":{"type":"string","description":"**Note:** This field is required when 3ds 2.0 is used."},"three_ds_enrollment":{"type":"boolean","example":false,"description":"Card’s enrollment status.\n\n**Note:** This field is required by certain acquirers, please ask your implementation manager for details."},"three_ds_result":{"type":"string","description":"6 character value composed of 3DSECURESTATUS converted to hexadecimal concatenated with the result VRes converted to hexadecimal"},"three_ds_required":{"type":"string","description":"true if 3DS required for this transaction, false otherwise."},"term_url":{"type":"string","description":"The return url to which the customer is redirected after a transaction is processed."}}},"ThreeDs":{"type":"object","properties":{"referenceId":{"type":"string","description":"Cardinal Session ID sent in the response after initialization of JWT with Cardinal. This is mandatory when three_ds_version is 2.0."},"threeDsRequired":{"type":"string","description":"true if 3DS required for this transaction, false otherwise."},"threeDsVersion":{"type":"string","description":"The 3-D Secure version used for the authentication.","enum":["1.0","2.0"]}}},"ThreeDsDto":{"type":"object","properties":{"three_ds_required":{"type":"string","description":"true if 3DS required for this transaction, false otherwise."},"three_ds_version":{"type":"string","description":"Valid values: \"1.0\"\"2.0\"\n\nThe 3-D Secure version used for the authentication"},"term_url":{"type":"string","description":"The return url to which the customer is redirected after a transaction is processed."},"reference_id":{"type":"string","description":"Cardinal Session ID sent in the response after initialization of JWT with Cardinal. This is mandatory when three_ds_version is 2.0."}}},"ThreeDsVerifyAuthRequestDTO":{"type":"object","required":["_id"],"properties":{"_id":{"type":"string","description":"The ID of the transaction"},"paRes":{"type":"string","description":"The unmodified PaRes value as received after the customer was redirected back from 3DS Authentication. \n\n **Note:** This field may be mandatory for certain acquirers. Please speak to your Implementation Manager for further information."},"three_ds_authentication":{"description":"\n\n**Note:** This field is required when 3ds 2.0 is used.","$ref":"#/definitions/ExternalAuthentication"}}},"Token":{"type":"object","properties":{"card_token":{"type":"string","description":"The token representing the payment card."},"created_at":{"type":"string","format":"date-time","description":"The time at which the transaction was created"},"event_id":{"type":"string","description":"This is the unique event id generated by Apexx."},"logical_key":{"type":"string"},"merchant_ref":{"type":"string","description":"A reference specified by the merchant to identify the transaction. This field must be unique per transaction."},"requested_org_id":{"type":"string","description":"The ID of an organisation."},"scheme_txn_id":{"type":"string","description":"The unique scheme transaction Id for this transaction. This value is returned for Customer Initiated transaction."},"token_encrypted_key":{"type":"string","description":"Encrypted key associated to the encrypted payload."},"token_encrypted_payload":{"type":"string","description":"Encrypted payload of all the fields sent in the request."},"token_id":{"type":"string","description":"The token representing the payment card."},"ultimate_org_id":{"type":"string","description":"Ultimate parent organisation"},"updated_at":{"type":"string","format":"date-time","description":"The time at which the transaction was updated"},"valid_token":{"type":"integer","format":"int32"}}},"TransactionChargeback":{"type":"object","properties":{"transaction_chargeback_id":{"type":"string","description":"Identifier of the chargeback"},"case_id":{"type":"string","description":"Case ID of the chargeback"},"original_transaction_date":{"type":"string","description":"Original date and time of the transaction"},"terminal_id":{"type":"string","description":"Terminal ID of the chargeback"},"reference_number":{"type":"string","description":"Case identifier for the chargeback"},"merchant_service_fee":{"type":"boolean","example":false,"description":"Merchant service fee applied on the transaction"},"settlement_currency":{"type":"string","description":"Settlement currency of the transaction"},"arn":{"type":"string","description":"Acquirer reference number, Unique card scheme identifier of sales transaction"}}},"TravelData":{"type":"object","properties":{"check_in_date":{"type":"string","description":"Start date of reservation. Format: YYYY-MM-DD"},"check_out_date":{"type":"string","description":"End date of reservation. Format: YYYY-MM-DD"},"guests":{"type":"array","items":{"$ref":"#/definitions/guest_details"}},"provider_group":{"type":"string","description":"Name of hotel parent group"},"provider_name":{"type":"string","description":"Name of hotel chain"},"room_count":{"type":"integer","format":"int32","description":"Number of rooms under booking"},"traveller_count":{"type":"integer","format":"int32","description":"Number of travellers under booking"},"origin_city":{"type":"string","description":"City Journey begins"},"route_stops":{"type":"array","description":"Array of stopping points on trip","items":{"$ref":"#/definitions/RouteStops"}},"destination_city":{"type":"string","description":"Final destination City"},"destination_country":{"type":"string","description":"Destination country. A 2-letter ISO3166 alpha-2. country code for the address. Note: Alphabets upto two characters (e.g. GB, RU, etc.)"},"destination_address":{"type":"string","description":"Address of accomodation"},"discount_percentage":{"type":"integer","format":"int32","description":"Percentage dicount to be applied to booking"},"loyalty_number":{"type":"string","description":"Customer loyalty scheme number"},"booking_amount":{"type":"number","description":"Total amount of booking."},"booking_type":{"type":"string","description":"The type of booking being made.","enum":["hotel","rental","car","cruise"]},"adults_count":{"type":"integer","format":"int32","description":"Number of adults under booking"},"child_count":{"type":"integer","format":"int32","description":"Number of children under booking"},"beds_count":{"type":"integer","format":"int32","description":"Number of rooms under booking"},"vehicle_type":{"type":"string","description":"Name of vehicle being rented"}}},"WebhookResponseDTO":{"type":"object","properties":{"immediate":{"type":"boolean"},"webhook_transaction_update":{"type":"string"}}},"airlineData":{"type":"object","properties":{"pnr":{"type":"string","description":"Reference number for the airline booking. Required if ticket numbers are not issued."},"airline_name":{"type":"string","description":"Name of the airline."},"agency":{"description":"Agency","$ref":"#/definitions/AgencyDto"},"airline_numeric_code":{"type":"integer","format":"int32","description":"Airline numeric code"},"ticket_number":{"type":"string","description":"Ticket/document number, or PNR locator code."},"check_digit":{"type":"integer","format":"int32","description":"Check digit for the ticket number with Discover and Diners Club, a valid ticket number has these characteristics:\n\n1. The value is numeric.\n2. The first three digits are a valid IATA2 license plate carrier code.\n3. The last digit is a check digit or zero (0).\n4. All remaining digits are nonzero."},"is_restricted":{"type":"string","description":"Valid values: \"True\"\"False\"\r\nTrue - Restricted (nonrefundable), False - No restriction (refundable)\r\nFlag that indicates whether or not the ticket is restricted (nonrefundable)."},"transaction_type":{"type":"integer","format":"int32","description":"Type of charge."},"extended_payment_code":{"type":"string","description":"Airline process identifier. This value is the airline’s three-digit IATA1 code which is used to process extended payment airline tickets.\r\n"},"passenger_title":{"type":"string","description":"Title of the passenger."},"passenger_name":{"type":"string","description":"Name of passenger.\n\nNote: Only alphabetic characters, Special characters allowed are (hyphen(-), underscore(_), dot(.), comma(,) and apostrophe(‘))."},"passenger_age_group":{"type":"string","description":"Travelling passenger's age group."},"is_lead":{"type":"string","description":"Indicates whether the passenger is a lead passenger within the group."},"customer_code":{"type":"string","description":"1. Reference number or code that identifies the cardholder.\n2. Code provided by the cardholder.\n3. Address of the ticket issuer. The first 13 characters will appear onthe cardholder’s statement.\n4. Customer reference.."},"document_type":{"type":"integer","format":"int32","description":"Airline document type code that specifies the purpose of the transaction. For the possible values, see Appendix A, \"Airline Document Type Codes\"."},"document_number":{"type":"string","description":"Ticket number or a value that might be a booking reference number."},"travel_legs_count":{"type":"integer","format":"int32","description":"Number of travel legs. Numbering for the travel legs: 0 to 3."},"invoice_number":{"type":"string","description":"Invoice number of the ticket."},"invoice_date":{"type":"string","description":"Invoice date. The format is YYYY-MM-DD. If this value is included in the request, it is used in the creation of the invoice number."},"additional_charge_description":{"type":"string","description":"Description of the charge."},"total_fee_amount":{"type":"integer","format":"int32","description":"Total fee for the ticket."},"clearing_sequence":{"type":"integer","format":"int32","description":"Total number of captures when requesting multiple partial captures for one authorization."},"clearing_count":{"type":"integer","format":"int32","description":"Total number of clearing count associated with the authorization request."},"total_clearing_count":{"type":"integer","format":"int32"},"passenger_count":{"type":"integer","format":"int32","description":"Number of passengers for whom the ticket was issued."},"reservation_system_code":{"type":"string","description":"Code that specifies the computerized reservation system used to make the reservation and purchase the ticket."},"process_identifier":{"type":"string","description":"Airline process identifier. This value is the airline’s three-digit IATA1 code which is used to process extended payment airline tickets."},"issue_date":{"type":"string","description":"Date on which the ticket was issued. Format: YYYY-MM-DD"},"is_eticket":{"type":"string","description":"Valid values: \"true\"\"false\"\r\nIndicates whether the issued ticket was electronic or not."},"original_ticket_number":{"type":"string","description":"Original ticket number when the transaction is for a replacement ticket."},"purchase_type":{"type":"string","description":"Valid values: \"EXC\"\"MSC\"\"REF\"\"TKT\"\r\nEXC: Exchange ticket, MSC: Miscellaneous, REF: Refund, TKT: Ticket\r\nType of purchase"},"credit_reason":{"type":"string","description":"Valid values: \"A\"\"B\"\"C\"\"O\"\"P.\"\nA: Cancellation of the ancillary passenger transport purchase,\nB: Cancellation of the airline ticket and the passenger transport ancillary purchase,\nC: Cancellation of the airline ticket,\nO: Other,\nP: Partial refund of the airline ticket.\nReason for the credit."},"ticket_change_indicator":{"type":"string","description":"Valid values: \"C\"\"N\"\r\nC: Change to the existing ticket., N: New ticket.\r\nType of update."},"plan_number":{"type":"string","description":"Plan number based on the fare. This value is provided by the airline."},"arrival_date":{"type":"string","description":"Inbound arrival date and time of the booking. Format: YYYY-MM-DD HH:mm:ss"},"restricted_ticket_description":{"type":"string","description":"Text that describes the ticket limitations, such as nonrefundable."},"exchange_ticket_amount":{"type":"integer","format":"int32","description":"Amount of the exchanged ticket."},"exchange_ticket_fee_amount":{"type":"integer","format":"int32","description":"Fee for exchanging the ticket."},"reservation_type":{"type":"string","description":"Type of journey such as one way or round trip."},"boarding_fee_amount":{"type":"string","description":"Boarding fee."},"legs":{"type":"array","description":"Leg","items":{"$ref":"#/definitions/FlightDetailsDto"}}}},"customer":{"type":"object","properties":{"customer_id":{"type":"string","description":"The customer_id of recipient's."},"last_name":{"type":"string","description":"The last name(s) of recipient's."},"date_of_birth":{"type":"string","description":"The date of birth of a customer, 10 characters, ISO-8601 (YYYY-MM-DD)."},"postal_code":{"type":"string","description":"This is the recipient's postcode/zip.\n\nNote: Only alpha-numeric characters, Special characters allowed are hyphen(-) and single space"},"account_number":{"type":"string","description":"This is the recipient's account number."}}},"customer_historic_orders":{"type":"object","properties":{"purchased_date":{"type":"string","description":"Date of order. 10 characters, ISO-8601 (YYYY-MM-DD)"},"amount":{"type":"integer","format":"int32","description":"Total gross amount of historic order"},"payment_method":{"type":"string","enum":["Card","Cash","Voucher","Other"]},"status":{"type":"string","description":"Current status of the order.","enum":["Complete","Pending","Refunded","Cancelled","Unknown"]},"delivery_address":{"description":"Order Delivery Data","$ref":"#/definitions/OrderDeliveryData"},"items":{"type":"array","items":{"$ref":"#/definitions/OrderItems"}}},"description":"customer historic orders"},"guest_details":{"type":"object","properties":{"name":{"type":"string","description":"Full name of guest"},"date_of_birth":{"type":"string","description":"date of birth of guest. Format: YYYY-MM-DD"}}}}}